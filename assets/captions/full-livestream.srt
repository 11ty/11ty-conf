1
00:08:12,961 --> 00:08:14,961
11

2
00:08:56,780 --> 00:08:58,780
It's 11:11.

3
00:09:05,885 --> 00:09:07,885
[Cheers and applause ] 

4
00:09:57,468 --> 00:09:59,468
11.

5
00:10:57,566 --> 00:10:59,566
It's 11:00.

6
00:11:03,067 --> 00:11:05,067
[ Applause ] 

7
00:12:00,753 --> 00:12:02,753
11.

8
00:12:58,237 --> 00:13:00,237
11.

9
00:13:57,313 --> 00:13:59,313
11.

10
00:14:58,791 --> 00:15:00,791
11.

11
00:15:59,568 --> 00:16:01,568
11.

12
00:16:59,038 --> 00:17:01,637
I think it's 11:00. 

13
00:17:54,693 --> 00:17:56,693
[ Applause ] 

14
00:17:56,693 --> 00:17:58,693
It's 11:00. 

15
00:17:59,873 --> 00:18:01,873
[ Applause ]  

16
00:18:58,055 --> 00:19:00,055
11.

17
00:22:11,169 --> 00:22:13,169
â‰« Welcome. Welcome, welcome. 
All you amazing 11ty people.

18
00:22:15,251 --> 00:22:17,251
I'm incredibly excited to be 
here today.

19
00:22:19,343 --> 00:22:21,343
Hosting the first 11ty 
Conference.

20
00:22:23,726 --> 00:22:26,132
The inaugural international 
symposium of making websites 

21
00:22:26,132 --> 00:22:28,132
real, real good.

22
00:22:29,228 --> 00:22:31,228
I'm Mike. I'm going to be the 
host for today.

23
00:22:34,019 --> 00:22:37,190
And I'll be joined shortly by 
Mr. Zach Leatherman himself, 

24
00:22:37,190 --> 00:22:39,190
creator of 11ty. 

25
00:22:40,878 --> 00:22:42,878
We have an exciting range of 
speakers, developers and 

26
00:22:42,878 --> 00:22:44,878
technologists from across the 
web joining us today. And I 

27
00:22:44,878 --> 00:22:46,878
can't wait to get into it.

28
00:22:48,467 --> 00:22:50,672
The 11ty community is an 
incredibly supportive and 

29
00:22:50,672 --> 00:22:52,672
welcoming community.

30
00:22:53,963 --> 00:22:57,945
We have a couple of first-time 
speakers presenting today. 

31
00:22:57,945 --> 00:22:59,945
So, please show your 
appreciation and support and 

32
00:22:59,945 --> 00:23:01,945
encouragement for all of the 
speakers.

33
00:23:04,540 --> 00:23:07,839
Code of conduct is listed on 
the conference website. If you 

34
00:23:07,839 --> 00:23:09,839
haven't already, check it out, 
take a moment to read through 

35
00:23:09,839 --> 00:23:11,839
it . And In brief, we're 
committed to being

36
00:23:14,138 --> 00:23:16,138
as accessible as possible and 
kind and welcoming to everyone 

37
00:23:16,138 --> 00:23:18,138
involved in the symposium. 

38
00:23:18,928 --> 00:23:20,928
All of today's talks are being 
live captioned by White Coat 

39
00:23:20,928 --> 00:23:22,928
Captioning.

40
00:23:25,625 --> 00:23:27,625
Which we're really grateful 
for, it enables more people to 

41
00:23:27,625 --> 00:23:29,625
engage with

42
00:23:29,625 --> 00:23:31,625
today's amazing speakers and 
their ideas for the future of 

43
00:23:31,625 --> 00:23:33,625
the web. 
So feel free

44
00:23:36,114 --> 00:23:38,114
to share on the board and ask 
questions in the

45
00:23:39,206 --> 00:23:42,418
chat and engage in social media
. Speaking of social media, if 

46
00:23:42,418 --> 00:23:44,418
you're wearing your 11ty

47
00:23:45,624 --> 00:23:47,624
T-shirt, do feel free to share 
that on socials

48
00:23:48,709 --> 00:23:52,914
. With the hashtags 11ty or 
11ty Conf, we'll be running 

49
00:23:52,914 --> 00:23:56,116
sticker giveaways with using 
those hashtags. 

50
00:23:59,306 --> 00:24:01,306
So, we've got Zach coming in 
about ten minutes to do the 

51
00:24:01,306 --> 00:24:03,306
keynote for today.

52
00:24:04,806 --> 00:24:06,806
So, let's do two things

53
00:24:09,214 --> 00:24:12,104
before then. I want to hear 
from chat, what is your 

54
00:24:12,104 --> 00:24:14,104
favorite 11ty feature?

55
00:24:15,801 --> 00:24:17,801
And where are you pulling from 
today?

56
00:24:19,588 --> 00:24:21,588
We've had a few people talk 
about that. So let's have a 

57
00:24:21,588 --> 00:24:23,588
look.

58
00:24:36,788 --> 00:24:38,788
Plymouth, UK, Switzerland,

59
00:24:38,876 --> 00:24:42,265
El Salvador. New York City, 
Puerto Rico, Ukraine

60
00:24:45,772 --> 00:24:47,772
, Detroit, New York City

61
00:24:48,976 --> 00:24:50,976
.

62
00:24:53,782 --> 00:24:57,491
Past Pasadena, New Zealand .

63
00:24:59,287 --> 00:25:03,071
This is a global conference, 
isn't it? 

64
00:25:03,071 --> 00:25:06,278
And I think that's one thing I 
really love about 11ty is, is 

65
00:25:06,278 --> 00:25:08,278
it's the community

66
00:25:08,890 --> 00:25:11,484
it's so supportive and 
welcoming. Right.

67
00:25:12,667 --> 00:25:14,667
Let's see what people are 
saying. Hello from France.

68
00:25:28,596 --> 00:25:30,596
Ireland, Pennsylvania, 
Argentina,

69
00:25:33,404 --> 00:25:35,404
Germany,

70
00:25:39,618 --> 00:25:41,618
my favorite is

71
00:25:44,228 --> 00:25:47,330
Dartacascade. I think it's the 
first thing that blew my mind 

72
00:25:47,330 --> 00:25:49,330
about 11ty.

73
00:25:50,617 --> 00:25:52,617
Just coming from a world

74
00:25:53,704 --> 00:25:56,012
where you basically had data 
files and collections.

75
00:25:59,407 --> 00:26:01,407
And getting to experience the 
flexibility and control you 

76
00:26:01,407 --> 00:26:03,407
have

77
00:26:03,407 --> 00:26:05,407
over the data cascade is just 
incredible . 

78
00:26:05,407 --> 00:26:07,407
Hello from Greece.

79
00:26:08,301 --> 00:26:10,301
Dynamic Global Data Files. 
Yeah, another amazing one.

80
00:26:13,298 --> 00:26:16,702
That's something I've been 
messing around recently, like 

81
00:26:16,702 --> 00:26:18,702
pulling in external

82
00:26:20,107 --> 00:26:22,801
data useing fetch and turning 
it into a data file and doing 

83
00:26:22,801 --> 00:26:24,801
all sorts of interesting 
processing on it. 

84
00:26:24,801 --> 00:26:27,579
That's, yeah. Another one 
that's blowing my mind.

85
00:26:30,771 --> 00:26:32,771
Tampa, Florida,

86
00:26:33,978 --> 00:26:35,978
UK, Louisiana, hey, Raymond.

87
00:26:38,571 --> 00:26:42,772
Pagernation, another one in 
most other esthetic site 

88
00:26:42,772 --> 00:26:45,373
generators is tricky or it's 
bolted on.

89
00:26:48,560 --> 00:26:51,667
Yeah 11ty, using collections 
and , it's nice.

90
00:26:55,056 --> 00:26:57,056
So many templating, tuning in 
from Detroit. Hey, Brian.

91
00:26:59,041 --> 00:27:01,041
Yeah, just the flexibility you 
have on those templating 

92
00:27:01,041 --> 00:27:03,041
languages . You get to use -- 
you're

93
00:27:06,057 --> 00:27:08,057
not prescribed a particular 
template language, use what it 

94
00:27:08,057 --> 00:27:12,950
is for you. 
Bingo cards, hey, David.

95
00:27:19,551 --> 00:27:22,937
What else we got? Texas, 
London, another New Zealand,

96
00:27:23,447 --> 00:27:28,128
Colorado. Northwest UK. Lots of
UK tuning in.

97
00:27:30,316 --> 00:27:32,316
Very cool. Seattle, Washington.

98
00:27:35,492 --> 00:27:37,492
Switzerland, Austin, 
Pagernation in Chicago.

99
00:27:40,995 --> 00:27:42,995
Utah, Belgium, Switzerland, 
Chicago.

100
00:27:43,705 --> 00:27:45,798
This -- seems to be 11ty hubs. 
I wonder why that is. 

101
00:27:49,193 --> 00:27:52,497
Norway, Maryland, Mexico, 
Vancouver, Boston, my favorite

102
00:27:54,403 --> 00:27:58,102
feature is the possum. 
[ Laughter ] 

103
00:28:01,900 --> 00:28:03,900
Upstate New York, Arizona, 
France,

104
00:28:04,307 --> 00:28:07,104
[ Laughter ] 

105
00:28:10,298 --> 00:28:12,298
I don't actually use 11ty, but 
I love your community and I'm 

106
00:28:12,298 --> 00:28:14,298
in Hamburg , Germany.

107
00:28:14,298 --> 00:28:17,803
El Salvador. Germany, 
Argentina, Charlottesville,

108
00:28:18,706 --> 00:28:22,707
yeah, incredible. I can't, I 
can't, there's

109
00:28:23,707 --> 00:28:28,017
way too many to read here. 
That's awesome. 

110
00:28:31,814 --> 00:28:33,814
Favorite feature for me is how 
it fits my way of thinking,

111
00:28:35,018 --> 00:28:37,018
to know what I do, now only it 
does it.

112
00:28:39,818 --> 00:28:43,116
Yeah, that's the beauty of it. 
Kind of gives you the tools to 

113
00:28:43,116 --> 00:28:46,521
do what you want and you can --
in a lot of ways, you're 

114
00:28:46,521 --> 00:28:48,521
putting together your own 
esthetic site generator.

115
00:28:49,428 --> 00:28:52,826
My favorite feature is the

116
00:28:55,823 --> 00:28:57,823
docs, so easy to get going, 
such

117
00:28:58,440 --> 00:29:00,440
a cool community, cozy vibes. 
Yeah, well said.

118
00:29:03,839 --> 00:29:06,444
I Loe love I can template all 
random templating languages are

119
00:29:06,444 --> 00:29:08,444
picked up here. Nice.

120
00:29:11,453 --> 00:29:13,453
11ty image is good stuff.

121
00:29:14,752 --> 00:29:16,752
Yeah, hey, Wiz.

122
00:29:19,059 --> 00:29:21,059
Yeah, it's after doing this 
kind of manually and building 

123
00:29:21,059 --> 00:29:23,059
my own plugin to do image 
optimization, I wish I

124
00:29:24,161 --> 00:29:26,161
knew about 11ty image sooner. 

125
00:29:30,269 --> 00:29:32,977
My favorite feature's being 
able to write so easy.

126
00:29:36,387 --> 00:29:38,387
You know, that's what we're all
here for.

127
00:29:41,300 --> 00:29:43,300
The before/after processing 
hooks. Yeah.

128
00:29:45,503 --> 00:29:47,503
Like, I haven't done a huge 
amount with those.

129
00:29:49,813 --> 00:29:51,813
But just being able to pull in 
data and process it after the 

130
00:29:51,813 --> 00:29:53,813
build . 

131
00:29:54,918 --> 00:29:57,725
I've been exclusively using 
WebC, I've just started 

132
00:29:57,725 --> 00:30:02,029
dabbling. And it's just a 
completely different way of 

133
00:30:02,029 --> 00:30:04,029
thinking about

134
00:30:05,643 --> 00:30:07,643
static site generation. Very 
cool. The speed, the best 

135
00:30:07,643 --> 00:30:09,643
thing.

136
00:30:10,750 --> 00:30:12,750
Just

137
00:30:14,361 --> 00:30:16,361
use Esther, you know what I 
mean. Not sure what that means.

138
00:30:16,361 --> 00:30:18,361
[ Laughter ]

139
00:30:20,067 --> 00:30:22,067
I love writing markdown but

140
00:30:23,274 --> 00:30:27,186
web component support might be 
off (inaudible) myself.

141
00:30:30,785 --> 00:30:32,785
From the US government, 11ty 
has

142
00:30:33,992 --> 00:30:36,101
made it so personal . Do not 
have to think about responsive 

143
00:30:36,101 --> 00:30:38,101
images anymore.

144
00:30:40,018 --> 00:30:42,018
It's massive, right?

145
00:30:43,317 --> 00:30:46,626
If you think of a technical web
page, like most of the transfer

146
00:30:49,137 --> 00:30:52,642
's probably going to be in 
images. And the probably 

147
00:30:52,642 --> 00:30:54,642
there's a good chance they're 
not going

148
00:30:55,744 --> 00:30:57,744
to be super optimized.

149
00:30:59,349 --> 00:31:01,349
Whereas 11ty image gives us a 
lot of that for almost free. 

150
00:31:05,975 --> 00:31:07,975
So many great features, just 
choose one. Just choose one.

151
00:31:11,981 --> 00:31:13,981
The speed.

152
00:31:17,485 --> 00:31:19,485
Is that the speed of the build 
or the speed of the website

153
00:31:19,790 --> 00:31:21,790
? Both?

154
00:31:23,698 --> 00:31:25,698
The amazing wealth of plugins 
cannot be overstated. Hey, 

155
00:31:25,698 --> 00:31:27,698
Chris.

156
00:31:31,117 --> 00:31:33,117
I love global data files.

157
00:31:39,329 --> 00:31:42,037
Here we go, the docs, let's 
make the docs link a little 

158
00:31:42,037 --> 00:31:44,037
bigger.

159
00:31:44,342 --> 00:31:46,342
Yeah, I think I was looking at 
it last night.

160
00:31:48,646 --> 00:31:51,953
It's -- I was measuring like 
120, 130 pixels, maybe

161
00:31:54,948 --> 00:31:56,948
by the end of this conference, 
we can convince Zach

162
00:31:59,359 --> 00:32:02,768
to -- I mean, maybe doubling 
it's a stretch goal, but I 

163
00:32:02,768 --> 00:32:04,768
think if we can

164
00:32:08,180 --> 00:32:10,180
get 20% bigger out of this 
conference, I think that's a 

165
00:32:10,180 --> 00:32:12,180
success. 

166
00:32:13,176 --> 00:32:17,691
Stability . I'm here for 
comments, me, too.

167
00:32:20,289 --> 00:32:22,485
The fetch plugin is amazing. It
makes pulling in data so easy. 

168
00:32:22,485 --> 00:32:24,485
Yeah.

169
00:32:25,984 --> 00:32:27,984
And just having the caching

170
00:32:29,188 --> 00:32:31,782
all kind of handled very nicely
and seamlessly, and yeah.

171
00:32:33,582 --> 00:32:37,678
Just takes a lot of that load 
off. Like, I've been finding 

172
00:32:37,678 --> 00:32:40,877
just putting 11ty in front of 
an API that maybe

173
00:32:43,984 --> 00:32:45,991
you have some sort of limit 
that you can only do 50 

174
00:32:45,991 --> 00:32:47,991
requests of this API. 

175
00:32:52,187 --> 00:32:54,187
Like putting 11ty fetch in 
front of it and having it is

176
00:32:54,400 --> 00:32:56,400
almost like a cache in front of
the API.

177
00:33:00,909 --> 00:33:02,909
Really interesting, cool use 
case, and you don't have to 

178
00:33:02,909 --> 00:33:06,318
necessarily output HTML.
. You can output the responses 

179
00:33:06,318 --> 00:33:08,318
of API and JSON.

180
00:33:16,230 --> 00:33:18,230
11ty is my go-to, so easy and 
fast to get projects up and 

181
00:33:18,230 --> 00:33:20,230
going. I heard about images.

182
00:33:26,109 --> 00:33:28,109
There's another docs. Docs dig.

183
00:33:39,327 --> 00:33:41,327
Should scale the docs link with
scroll animation. Yes.

184
00:33:45,732 --> 00:33:47,732
So it just -- maybe it starts 
off as a pixel that by

185
00:33:49,337 --> 00:33:51,346
the time you reach it, we're 
looking at a full page. Yeah.

186
00:33:53,349 --> 00:33:58,160
100VH docs link. 
Make it the viewport.

187
00:33:58,561 --> 00:34:02,857
Yeah. Why not match the size 
the font size of these?

188
00:34:03,454 --> 00:34:05,454
Yeah.

189
00:34:16,976 --> 00:34:18,976
The 11ty T-shirt is so comfy, 
that's what we love.

190
00:34:29,790 --> 00:34:31,790
Does the docs have an IPO ? I'd
invest in it.

191
00:34:34,497 --> 00:34:36,497
Yeah, what other open source 
projects has a bigger docs 

192
00:34:36,497 --> 00:34:38,497
button? That's what I want to 
know. 

193
00:34:41,217 --> 00:34:43,217
I think 11ty's probably top of 
its class in that category.

194
00:34:47,931 --> 00:34:52,767
All right. Thanks for all of 
the great responses. We're 

195
00:34:52,767 --> 00:34:57,078
going to move on to the keynote
speaker for today. We've got 

196
00:34:57,078 --> 00:34:59,078
Zach Leatherman, creator and

197
00:34:59,078 --> 00:35:02,894
maintainer of 11ty. 
Zach is an international 

198
00:35:02,894 --> 00:35:06,500
speaker at 25 different 
conferences in 9 countries and 

199
00:35:06,500 --> 00:35:08,500
topics

200
00:35:09,706 --> 00:35:12,113
including Jamstack, web 
components, responsive web 

201
00:35:12,113 --> 00:35:14,113
design and web performance.

202
00:35:15,411 --> 00:35:17,411
Anyone that follows Zach on 
social media also knows

203
00:35:18,509 --> 00:35:23,104
he's self-proclaimed number one
super fan of React . Today he's

204
00:35:23,104 --> 00:35:26,200
here to tell us about current 
and future state of 11ty. 

205
00:35:26,200 --> 00:35:28,200
Let's do it.

206
00:35:29,705 --> 00:35:32,502
Zach? 
â‰« ZACH: What up? 

207
00:35:34,302 --> 00:35:36,894
â‰« MIKE: Welcome, welcome, so 
excited for this talk. 

208
00:35:36,894 --> 00:35:38,894
â‰« ZACH: Yeah, this is going to 
be amazing.

209
00:35:39,191 --> 00:35:42,986
The chat is just kind of 
blowing my mind right now. 

210
00:35:42,986 --> 00:35:44,986
â‰« MIKE: Yeah. 
â‰« ZACH: What a way to start.

211
00:35:48,679 --> 00:35:50,679
Just hearing all of everyone's 
favorite features is just kind 

212
00:35:50,679 --> 00:35:52,679
of, I don't know, humbling me 
right now.

213
00:35:54,780 --> 00:35:56,780
Because I remember the origin 
of all of those things that 

214
00:35:56,780 --> 00:35:58,780
people are talking about . 

215
00:35:58,973 --> 00:36:01,371
So it's wild to see it resonate
like that with folks . 

216
00:36:01,371 --> 00:36:03,371
â‰« MIKE: Very cool. All right.

217
00:36:03,760 --> 00:36:05,760
I'll let you get into it. 
â‰« ZACH: All right. Let's do it.

218
00:36:13,153 --> 00:36:16,448
All right, what's up, 
everybody? Thanks for joining, 

219
00:36:16,448 --> 00:36:18,448
this is incredible

220
00:36:18,746 --> 00:36:20,746
. I'm just kind of blown away 
at what's happening right now.

221
00:36:23,442 --> 00:36:27,849
I never would've thought I 
would have -- I would be 

222
00:36:27,849 --> 00:36:30,762
attending a conference about 
11ty . 

223
00:36:30,762 --> 00:36:32,762
It's just amazing to think 
about.

224
00:36:35,270 --> 00:36:37,270
We've sort of been around for 7
years now.

225
00:36:38,568 --> 00:36:40,568
It's a long project, and we've 
got more to come.

226
00:36:43,378 --> 00:36:45,383
So as Mike said, I'm Zach. This
is my visual resume.

227
00:36:48,181 --> 00:36:52,181
I started 11ty back in 2017. 
And in some respects, it was to

228
00:36:52,181 --> 00:36:54,181
facilitate my personal website

229
00:36:55,387 --> 00:36:57,387
. And,

230
00:36:58,478 --> 00:37:02,066
yeah, it was originally on 
WordPress back in 2007. I 

231
00:37:02,066 --> 00:37:04,066
switched to Jekyll

232
00:37:05,671 --> 00:37:07,671
around 2012, 2013, and yeah, 
migrated to 11ty shortly after 

233
00:37:07,671 --> 00:37:10,476
launching. I do have some more 
background in the JavaScript 

234
00:37:10,476 --> 00:37:12,476
world. 
I ran a JavaScript meetup for 

235
00:37:12,476 --> 00:37:14,476
many years.

236
00:37:16,739 --> 00:37:18,739
And we did a conference, 
Nebraska JavaScript conference.

237
00:37:21,134 --> 00:37:23,134
So yeah, sort of been in the 
JavaScript ecosystem for a long

238
00:37:23,134 --> 00:37:26,542
time. I think a lot of folks 
might be aware of my work

239
00:37:28,247 --> 00:37:32,045
with web fonts and web 
performance. 

240
00:37:32,045 --> 00:37:34,045
And yeah, hopefully, we can 
bring that to 11ty in the 

241
00:37:34,045 --> 00:37:36,045
future . And so, maybe

242
00:37:38,249 --> 00:37:42,761
some folks are also familiar 
with this meme from XKCD.

243
00:37:45,957 --> 00:37:47,957
It's sort of this teetering 
structure

244
00:37:50,366 --> 00:37:52,366
. And the caption is a project 
some random person in 

245
00:37:52,366 --> 00:37:54,366
Nebraska's been

246
00:37:54,775 --> 00:37:56,775
maintaining and, yeah,

247
00:37:58,186 --> 00:38:00,186
I think that in some respects 
represents 11ty. 

248
00:38:03,196 --> 00:38:05,196
But I also think that 11ty's a 
little bit more stable than 

249
00:38:05,196 --> 00:38:07,599
that little, tiny block may 
represent. We've been around 

250
00:38:07,599 --> 00:38:09,599
for 7 years.

251
00:38:10,099 --> 00:38:12,099
We've had so many, so many 
releases.

252
00:38:14,200 --> 00:38:16,200
And folks have really 
identified with how stable it 

253
00:38:16,200 --> 00:38:18,200
is and how few breaking changes
that we

254
00:38:18,609 --> 00:38:21,311
ship. Because I don't like 
breaking changes myself. 

255
00:38:24,508 --> 00:38:26,611
I use 11ty for so many projects
and I don't want to have to go 

256
00:38:26,611 --> 00:38:28,611
back and update those either.

257
00:38:28,913 --> 00:38:33,011
So, hopefully, you also feel 
that. And there are kind of 

258
00:38:33,011 --> 00:38:36,218
many frameworks and tools and 
site generation things that 

259
00:38:36,218 --> 00:38:38,218
exist on the web right now. 

260
00:38:40,217 --> 00:38:42,217
And there's kind of something 
for everyone, right?

261
00:38:43,714 --> 00:38:46,918
You can pick your flavor of 
tool that you identify with 

262
00:38:46,918 --> 00:38:48,918
most, that you get the most 
benefit out of.

263
00:38:49,431 --> 00:38:51,431
That you get the most value 
from. And I think that's a 

264
00:38:51,431 --> 00:38:53,431
great thing.

265
00:38:55,836 --> 00:38:57,836
There are frameworks that maybe

266
00:39:00,448 --> 00:39:02,448
represent someone that might 
want to send a billionaire to 

267
00:39:02,448 --> 00:39:04,448
the moon.

268
00:39:04,448 --> 00:39:06,448
Not for me, there's a framework
that might represent someone 

269
00:39:06,448 --> 00:39:08,448
that thinks this social network
is still cool. 

270
00:39:08,448 --> 00:39:10,448
Not necessarily for me.

271
00:39:14,255 --> 00:39:16,255
A framework that maybe it wants
to live in a world in which 

272
00:39:16,255 --> 00:39:18,255
this is a normal thing. Not 
necessarily for me.

273
00:39:21,947 --> 00:39:23,947
And then, there are other 
frameworks that really see the 

274
00:39:23,947 --> 00:39:25,947
value in Google Reader and

275
00:39:30,967 --> 00:39:32,967
Indie web and having 
information accessible for

276
00:39:34,066 --> 00:39:37,471
everyone, and RSS and sharing 
those things online and a root 

277
00:39:37,471 --> 00:39:39,471
in HTML and not necessarily 
trying to funnel everything

278
00:39:39,471 --> 00:39:41,471
through JavaScript first. 

279
00:39:45,281 --> 00:39:47,281
In my mind, there's kind of 
this two dimensional graph 

280
00:39:47,281 --> 00:39:49,281
here.

281
00:39:49,983 --> 00:39:51,983
And you can place all of 
different tools in different 

282
00:39:51,983 --> 00:39:53,983
spaces on this graph.

283
00:39:55,581 --> 00:39:57,581
On the left, you can see 
dynamic servers

284
00:39:58,785 --> 00:40:02,380
. This sort of moving away from
static site generation. On the 

285
00:40:02,380 --> 00:40:04,380
right, we have static sites

286
00:40:04,380 --> 00:40:07,779
. Folder full of files, as I've
said. 

287
00:40:07,779 --> 00:40:10,985
And then, the top represents 
HTML first, multi-page 

288
00:40:10,985 --> 00:40:12,985
applications that we've

289
00:40:14,084 --> 00:40:17,185
seen the marketing pivot to and
then, on the bottom, we see 

290
00:40:17,185 --> 00:40:19,185
JavaScript first tools

291
00:40:20,390 --> 00:40:22,390
. BUND

292
00:40:24,199 --> 00:40:26,199
Bundler based tools, that 
everything flows through 

293
00:40:26,199 --> 00:40:28,199
JavaScript code you write and a
lot of those are 

294
00:40:28,199 --> 00:40:30,287
application-based. 
On the bottom left, we have the

295
00:40:30,287 --> 00:40:32,287
most popular

296
00:40:33,490 --> 00:40:37,800
site generation tool right now,
NextJS. It lives in that 

297
00:40:37,800 --> 00:40:41,804
JavaScript-first world. And you
can use Next. js in kind of 

298
00:40:41,804 --> 00:40:43,804
different ways.

299
00:40:45,303 --> 00:40:47,303
They've added what they call 
server side rendering mode, 

300
00:40:47,303 --> 00:40:49,303
which allows you

301
00:40:49,303 --> 00:40:52,113
to serve HTML first in your DRK
-- and

302
00:40:54,225 --> 00:40:57,526
code downloaded by sites that 
you build. But it still has its

303
00:40:57,526 --> 00:40:59,526
roots in single page 
applications.

304
00:41:03,831 --> 00:41:06,436
Next also has a static export, 
which kind of goes more to the 

305
00:41:06,436 --> 00:41:08,436
right as a static site.

306
00:41:09,737 --> 00:41:12,036
You can use Next to import a 
static site. 

307
00:41:16,238 --> 00:41:18,238
Importantly, I've learned that 
does not include Next image and

308
00:41:18,238 --> 00:41:20,343
we'll go into that a little bit
later. I thought that was very 

309
00:41:20,343 --> 00:41:22,343
interesting that you can do 
HTML, you can do JavaScript, 

310
00:41:22,343 --> 00:41:24,343
you

311
00:41:24,343 --> 00:41:26,350
can do CSS, but you can't do 
images. And that doesn't come 

312
00:41:26,350 --> 00:41:28,350
out of the box.

313
00:41:33,753 --> 00:41:36,142
And 11ty wants to exist in this
top right quadrant, right. We 

314
00:41:36,142 --> 00:41:38,142
want to be HTML first.

315
00:41:39,442 --> 00:41:43,045
We want to create websites that
are multipage applications, 

316
00:41:43,045 --> 00:41:47,148
above all, we want to be a 
static site generation tool

317
00:41:48,544 --> 00:41:51,839
. That's what our roots is. 
That's what I really believe is

318
00:41:51,839 --> 00:41:53,839
the place that 11ty does the 
best work.

319
00:41:53,839 --> 00:41:56,831
And, at the end of the day, I 
think, static sites

320
00:41:59,944 --> 00:42:01,944
really have this amazing 
benefit of being the most

321
00:42:04,354 --> 00:42:07,446
secure, the fastest to serve, 
and they have a lot of these 

322
00:42:07,446 --> 00:42:09,446
very

323
00:42:10,542 --> 00:42:12,542
great benefits that, yeah, I 
think we are really doubling 

324
00:42:12,542 --> 00:42:14,542
down on right now

325
00:42:14,542 --> 00:42:16,542
. Now, 11ty has kind of dipped 
its toes into more dynamic use 

326
00:42:16,542 --> 00:42:18,542
cases.

327
00:42:19,838 --> 00:42:21,838
We had an Edge plugin and 
Serverless plugin.

328
00:42:24,536 --> 00:42:26,536
But we're sort of regrounding 
ourselves into the static 

329
00:42:26,536 --> 00:42:28,536
world. 
And trying to be the best that 

330
00:42:28,536 --> 00:42:31,369
we can be. And so, there's all 
of these

331
00:42:33,479 --> 00:42:36,774
different site generation tools
that exist. And some of them 

332
00:42:36,774 --> 00:42:38,774
have sort of created

333
00:42:38,774 --> 00:42:41,980
different modes of use. Most of
developing sites to where

334
00:42:44,978 --> 00:42:46,978
they can serve more than one of
these

335
00:42:48,586 --> 00:42:50,586
quadrants simultaneously, or at
least with the same or similar 

336
00:42:50,586 --> 00:42:52,586
codebases. 

337
00:42:54,077 --> 00:42:56,077
But importantly, 11ty really 
wants to be the best that we 

338
00:42:56,077 --> 00:42:58,077
can in the top right.

339
00:42:59,184 --> 00:43:01,184
We want to be the best static 
site generation tool that we 

340
00:43:01,184 --> 00:43:03,184
can be.

341
00:43:04,386 --> 00:43:06,496
And it's been so amazing to see
the response to 11ty over the 

342
00:43:06,496 --> 00:43:08,496
years. 

343
00:43:10,901 --> 00:43:12,901
We have over 72,000 open source
repositories on GitHub.

344
00:43:14,409 --> 00:43:16,409
People that are using 11ty.

345
00:43:18,707 --> 00:43:23,107
Over 16,000 GitHub stars , 
which is amazing. We have over 

346
00:43:23,107 --> 00:43:25,219
21,000 friends online across 
all of our social media 

347
00:43:25,219 --> 00:43:27,219
accounts. 

348
00:43:28,736 --> 00:43:32,642
And we're now up to 8. 7 
million downloads on NPM, which

349
00:43:32,642 --> 00:43:34,642
I think is

350
00:43:34,642 --> 00:43:36,642
incredible.

351
00:43:38,956 --> 00:43:41,769
And a lot of sort of larger 
enterprise customers have 

352
00:43:41,769 --> 00:43:43,769
started to use 11ty, too.

353
00:43:45,075 --> 00:43:47,075
Some big names,

354
00:43:48,180 --> 00:43:51,883
like CERN has a web site use ing
11ty, NASA,

355
00:43:54,192 --> 00:43:56,192
their website is built with 
11ty. 

356
00:43:58,813 --> 00:44:00,813
And it's, yeah, again, so 
incredible to see.

357
00:44:03,322 --> 00:44:07,223
To see the logo cloud that you 
can find on 11ty. dev that has 

358
00:44:07,223 --> 00:44:09,223
all of these

359
00:44:10,325 --> 00:44:12,325
. And I think one of the core 
features of 11ty are

360
00:44:13,734 --> 00:44:17,945
the secret sauce to 11ty is 
that we don't have a moat by 

361
00:44:17,945 --> 00:44:21,349
design. A lot of times, when 
you have frameworks

362
00:44:24,454 --> 00:44:28,063
that have investors or some 
monetization behind it, some 

363
00:44:28,063 --> 00:44:31,469
more aggressive monetization 
behind it, they want you to 

364
00:44:31,469 --> 00:44:33,469
have a moat.

365
00:44:35,681 --> 00:44:37,681
And a moat is something that 
exists in this framework to 

366
00:44:37,681 --> 00:44:40,898
keep you using the framework. 
Whether that be a --

367
00:44:45,004 --> 00:44:47,004
a language format that only 
runs in your tool and doesn't 

368
00:44:47,004 --> 00:44:49,004
run independent of your tool.

369
00:44:49,517 --> 00:44:51,517
Or that be some more runtime on
request pieces , like image 

370
00:44:51,517 --> 00:44:53,517
optimization.

371
00:44:54,710 --> 00:44:58,017
Maybe, the vendor that creates 
the framework also sells you on

372
00:44:59,622 --> 00:45:01,914
request image optimization. And
they charge you by the image. 

373
00:45:04,111 --> 00:45:06,111
And, again, we'll go into that 
a little bit later.

374
00:45:10,615 --> 00:45:12,615
And, the thing we've been 
working

375
00:45:14,022 --> 00:45:17,117
on for so long, I want to say 
almost a year now is our next 

376
00:45:17,117 --> 00:45:19,117
major release, 11ty 3. 0.

377
00:45:21,921 --> 00:45:23,921
It runs in Node 18 or newer. 

378
00:45:24,820 --> 00:45:26,820
And yeah, I'm super excited to 
tell you all about it.

379
00:45:31,724 --> 00:45:33,724
Just the number one thing, and 
I'll maybe have a very

380
00:45:34,537 --> 00:45:37,831
interesting number of points to
make in this talk. But the 

381
00:45:37,831 --> 00:45:42,936
number one thing is that it's 
written in ESM. ESM is sort of 

382
00:45:42,936 --> 00:45:46,137
the more standard way to write 
JavaScript that works in a 

383
00:45:46,137 --> 00:45:48,137
variety of different contexts 
and runtimes. 

384
00:45:50,834 --> 00:45:52,834
So this is sort of a way for us
to prepare for the future.

385
00:45:53,337 --> 00:45:56,036
To allow 11ty to run in a bunch
of different ways. And a bunch 

386
00:45:56,036 --> 00:45:58,036
of different tools.

387
00:45:59,534 --> 00:46:02,834
And yeah, I think it's an 
important thing. Although, the 

388
00:46:02,834 --> 00:46:07,040
subtleties of it may not be as 
convince ing as we might want, 

389
00:46:07,040 --> 00:46:09,040
as

390
00:46:09,040 --> 00:46:11,838
developers. Practically, it 
just kind of means that you're 

391
00:46:11,838 --> 00:46:13,838
converting module

392
00:46:15,246 --> 00:46:17,246
.exports in your code and 
JavaScript code

393
00:46:18,154 --> 00:46:21,745
to be export default or named 
exports at the bottom. 

394
00:46:21,745 --> 00:46:23,745
You just can change it to 
export.

395
00:46:25,042 --> 00:46:27,042
So it's -- there isn't too much

396
00:46:28,247 --> 00:46:32,935
change that happens when you're
migrating your code to ESM. But

397
00:46:32,935 --> 00:46:36,238
I think it is important for the
future. And if you look at the 

398
00:46:36,238 --> 00:46:38,238
NPM ecosystem

399
00:46:39,336 --> 00:46:42,838
right now, there's this graph 
from Titus,

400
00:46:45,946 --> 00:46:47,946
sort of maintain statistics on 
how many projects are using 

401
00:46:47,946 --> 00:46:52,769
what mode. There's only 11. 7% 
on NPM are using ESM first. 

402
00:46:55,969 --> 00:46:57,969
There are some people that are 
dual publishing as the other 

403
00:46:57,969 --> 00:47:02,473
alternative in the thing that 
most folks use is common JS . 

404
00:47:02,473 --> 00:47:04,473
So some folks are publishing 
both

405
00:47:05,079 --> 00:47:07,079
ESM and common JS 
simultaneously. Not going to do

406
00:47:07,079 --> 00:47:09,079
that.

407
00:47:09,283 --> 00:47:11,283
And, some folks are using a

408
00:47:13,491 --> 00:47:15,491
bundler to precompile their 
common JS to ESM for usage. 

409
00:47:18,599 --> 00:47:21,804
And so, if you look at this 
graph, you might be a little 

410
00:47:21,804 --> 00:47:23,804
worried that 11ty is using ESM,

411
00:47:24,904 --> 00:47:26,904
right, because it doesn't

412
00:47:28,842 --> 00:47:30,842
seem to be all that common in 
packages that are published to 

413
00:47:30,842 --> 00:47:32,842
NPM. 

414
00:47:35,850 --> 00:47:37,850
And if you look the a some of 
the existing frameworks out 

415
00:47:37,850 --> 00:47:40,061
there right now, you can see 
11ty and Astro are kind of on 

416
00:47:40,061 --> 00:47:42,061
the left.

417
00:47:43,567 --> 00:47:46,774
We're doing ESM first . Next, 
Gatsby

418
00:47:49,775 --> 00:47:52,896
, sort of use a bundle r 
approach . And Next. js is 

419
00:47:52,896 --> 00:47:55,402
still using common JS. And so 
there's sort of a wide variety 

420
00:47:55,402 --> 00:47:57,402
of things here. 

421
00:48:00,626 --> 00:48:02,626
So what does this mean for your
project?

422
00:48:04,120 --> 00:48:08,025
You can still keep using your 
existing configuration file. 

423
00:48:08,025 --> 00:48:10,025
You can still keep using your 
project as is, you can still 

424
00:48:10,025 --> 00:48:12,025
keep using CommonJS with 11ty. 
So you don't need to worry 

425
00:48:12,025 --> 00:48:14,025
about that. 

426
00:48:15,521 --> 00:48:17,521
So if you look inside of your 
11ty configuration file right 

427
00:48:17,521 --> 00:48:19,521
now, you can keep using this.

428
00:48:22,025 --> 00:48:24,025
It isn't a problem, you don't 
have to migrate your code over 

429
00:48:24,025 --> 00:48:27,240
to use ESM, just because 11ty 
is using ESM, doesn't mean that

430
00:48:27,240 --> 00:48:29,240
you need to. 

431
00:48:32,835 --> 00:48:37,123
And yeah, just practically 
speaking, you can import 11ty.

432
00:48:40,316 --> 00:48:42,316
So one of the main problems 
that people see when they're 

433
00:48:42,316 --> 00:48:44,316
using ESM and

434
00:48:44,933 --> 00:48:46,933
CommonJS, you can't require an 
ESM package.

435
00:48:49,238 --> 00:48:51,246
So if you use any of the 
bundled 11ty plugins that are 

436
00:48:51,246 --> 00:48:53,246
already included. 

437
00:48:55,239 --> 00:48:57,239
You will need to change your 
configuration file to look

438
00:48:58,332 --> 00:49:01,532
like this if you are going to 
be using Node 18 . Now, Node is

439
00:49:01,532 --> 00:49:03,532
actually adding support

440
00:49:06,343 --> 00:49:08,343
for importing

441
00:49:10,954 --> 00:49:12,954
, requiring ESM packages to 
Node. It's an amazing thing.

442
00:49:14,357 --> 00:49:17,652
It's come out in the last month
or two. And you can use this 

443
00:49:17,652 --> 00:49:19,652
today with NOED 22

444
00:49:20,754 --> 00:49:22,754
with this command line flag 
experimental requirement module

445
00:49:22,754 --> 00:49:24,754
. 
So if you want to not change 

446
00:49:24,754 --> 00:49:26,754
any of your code at all, you 
can use this approach.

447
00:49:30,155 --> 00:49:32,155
It really doesn't take much to 
upgrade your project to use 

448
00:49:32,155 --> 00:49:34,155
11ty 3. 0.

449
00:49:34,969 --> 00:49:36,969
Here's my personal website

450
00:49:38,584 --> 00:49:40,882
. It is, I think, three files 
were changed. I changed my node

451
00:49:40,882 --> 00:49:42,882
minimum.

452
00:49:44,172 --> 00:49:46,172
I changed the import to be a 
dynamic import inside of my 

453
00:49:46,172 --> 00:49:48,172
configuration file. 

454
00:49:48,582 --> 00:49:52,383
And then, my package JSON, I 
pointed to the new version. And

455
00:49:52,383 --> 00:49:54,383
again, your existing

456
00:49:54,383 --> 00:49:56,383
CommonJS code should work 
pretty much as is.

457
00:49:59,378 --> 00:50:01,378
Especially, if you're not using
the bundled plugins.

458
00:50:05,881 --> 00:50:07,881
So you can use ESM if you want 
to convert your

459
00:50:08,977 --> 00:50:12,096
configuration file to ESM, you 
can do that, and this is what 

460
00:50:12,096 --> 00:50:14,096
the new syntax will look like, 
export default. 

461
00:50:15,389 --> 00:50:17,389
And, this might be the most 
straightforward way to do it 

462
00:50:17,389 --> 00:50:19,389
because

463
00:50:19,389 --> 00:50:21,896
there isn't any special dynamic
import that you need to do, you

464
00:50:21,896 --> 00:50:23,896
just import your plugins 
directly from the 11ty package.

465
00:50:25,403 --> 00:50:27,705
And yeah, this is great. This 
is maybe the most 

466
00:50:27,705 --> 00:50:32,901
straightforward way to do it. 
But importantly, you can 

467
00:50:32,901 --> 00:50:35,992
incrementally migrate to ESM, 
too . You don't have to -- it's

468
00:50:35,992 --> 00:50:37,992
not an all or nothing thing

469
00:50:39,087 --> 00:50:42,293
. On the left side, we see your
existing project might be using

470
00:50:42,293 --> 00:50:44,293
CommonJS

471
00:50:44,386 --> 00:50:47,980
. You can use ESM with a . an 
extension.

472
00:50:51,179 --> 00:50:53,179
If you want to start with ESM 
first, you can add type module

473
00:50:54,269 --> 00:50:56,269
to the package JSON, and then 
use, then the default .

474
00:50:58,869 --> 00:51:00,869
js will be interpreted as ESM 
and you can use .

475
00:51:03,768 --> 00:51:07,864
CJS to fall back to the common 
JS format in Node. 

476
00:51:07,864 --> 00:51:10,956
So you can really sort of use 
either of these approaches . 

477
00:51:10,956 --> 00:51:12,956
And it really, I think, gives 
you an incredible amount

478
00:51:14,361 --> 00:51:16,361
of flexibility when you're 
dealing either with legacy 

479
00:51:16,361 --> 00:51:18,361
projects or new projects from 
scratch. 

480
00:51:23,362 --> 00:51:26,458
So one of the things I'm most 
excited to tell you all about 

481
00:51:26,458 --> 00:51:28,458
today is the new features that 
we're shipping that we've 

482
00:51:28,458 --> 00:51:30,957
already shipped to 11ty image. 
And I think this is just super 

483
00:51:30,957 --> 00:51:32,957
exciting . I'm very excited 
about it. 

484
00:51:37,361 --> 00:51:39,361
We have this new image 
transform plugin.

485
00:51:40,653 --> 00:51:42,653
So with just a couple of lines 
like config,

486
00:51:43,744 --> 00:51:46,952
we'll automatically transform 
your HTML and do image 

487
00:51:46,952 --> 00:51:48,952
optimization and image 
processing for you.

488
00:51:50,448 --> 00:51:52,936
And it's all sort of handled 
for you out of the box. 

489
00:51:52,936 --> 00:51:55,743
Which I think is incredible. 
And I'm using it everywhere.

490
00:51:58,935 --> 00:52:02,140
So this means, no more worrying
about short codes, no image 

491
00:52:02,140 --> 00:52:04,140
short codes, no worrying about

492
00:52:05,547 --> 00:52:07,547
asynchronous context versus 
synchronous context.

493
00:52:10,137 --> 00:52:12,137
A lot of people that used 
handlebars, that's

494
00:52:13,541 --> 00:52:15,541
a synchronous language, it 
couldn't do asynchronous short 

495
00:52:15,541 --> 00:52:18,136
codes. We had this complex way 
to do it. We don't need to 

496
00:52:18,136 --> 00:52:21,427
worry about that anymore. Use 
the transform method and it 

497
00:52:21,427 --> 00:52:23,427
handles with all of your 
templating languages . 

498
00:52:28,938 --> 00:52:32,034
So you never have to manually 
add a width or height attribute

499
00:52:32,034 --> 00:52:34,034
to an image, again, not even 
for mode images.

500
00:52:36,334 --> 00:52:38,334
This is a super unique feature 
that isn't available in a lot 

501
00:52:38,334 --> 00:52:40,334
of alternative frameworks. A 
lot of them require you to do 

502
00:52:40,334 --> 00:52:42,334
static imports or for

503
00:52:43,326 --> 00:52:45,326
remote images, you have to add 
your width and height manually.

504
00:52:45,326 --> 00:52:47,824
Not at 11ty images, we do it 
all for you, you don't

505
00:52:48,417 --> 00:52:50,417
have to worry about it.

506
00:52:54,918 --> 00:52:58,126
And the super really cool, 
exciting thing that we shipped 

507
00:52:58,126 --> 00:53:03,041
just very recently is this new 
transform On

508
00:53:03,346 --> 00:53:07,455
Request feature. This is given 
to you, it's automatically 

509
00:53:07,455 --> 00:53:09,455
enabled for you.

510
00:53:11,040 --> 00:53:13,040
When you use 11ty in serve 
mode,

511
00:53:14,249 --> 00:53:17,343
we have a dynamic on request 
piece that will transform your 

512
00:53:17,343 --> 00:53:19,343
images for you when they're 
requested in the

513
00:53:19,343 --> 00:53:22,417
browser, not as part of the 
build. 

514
00:53:22,417 --> 00:53:24,417
So when you do dash dash serve,

515
00:53:25,627 --> 00:53:27,627
we only optimize images that 
are visited in the web browser.

516
00:53:30,611 --> 00:53:32,611
And then, on the right, we have
the same when

517
00:53:33,703 --> 00:53:36,796
you run a normal 11ty build, 
not in server or local 

518
00:53:36,796 --> 00:53:38,796
development mode, when you run 
a normal 11ty build,

519
00:53:39,898 --> 00:53:41,898
you get this full standard 
build output that you'd expect.

520
00:53:44,086 --> 00:53:47,495
So the right side is sort of 
the way it work ed before, the 

521
00:53:47,495 --> 00:53:49,495
left side is new for Serve 
mode.

522
00:53:53,193 --> 00:53:55,607
And you can set your own widths
here, if you want to do is that

523
00:53:55,607 --> 00:53:57,801
that. And we sort of handle all
of that for you, right ?

524
00:53:58,788 --> 00:54:02,177
It works the same. If you want 
to set specific widths

525
00:54:05,175 --> 00:54:07,175
for an individual image, you 
can do that with the 11ty

526
00:54:09,178 --> 00:54:11,178
: Widths attribute . 

527
00:54:14,276 --> 00:54:16,276
And you don't have to worry 
about image versus picture, 

528
00:54:16,276 --> 00:54:18,276
either. We automatically swap 
that for you based on how many

529
00:54:21,068 --> 00:54:23,068
formats you're using, how many 
sizes you're using, you don't 

530
00:54:23,068 --> 00:54:25,356
have to worry about that. 
So as an example, if you only 

531
00:54:25,356 --> 00:54:27,356
want to output a

532
00:54:28,561 --> 00:54:31,665
web P by default, 11ty does 
JPEG.

533
00:54:34,861 --> 00:54:38,057
But if you want one format, you
get the image tag, if you want 

534
00:54:38,057 --> 00:54:42,874
multiple, we switch to the 
picture tag. 

535
00:54:42,874 --> 00:54:44,874
And what this gives us is near 
zero build cost for local 

536
00:54:44,874 --> 00:54:46,874
development , which I am super 
excited about.

537
00:54:48,583 --> 00:54:51,881
Here's what it looks like. If 
you have a thousand images 

538
00:54:51,881 --> 00:54:53,881
running through the 11ty

539
00:54:55,491 --> 00:54:57,499
image pipeline right now, it 
would take about 6 seconds to 

540
00:54:57,499 --> 00:54:59,499
build on my personal machine.

541
00:54:59,499 --> 00:55:01,499
These are just benchmarks. I 
ran on my machine. 

542
00:55:04,091 --> 00:55:06,091
And then in serve mode, it 
takes less than a second to 

543
00:55:06,091 --> 00:55:08,091
start this the server.

544
00:55:09,200 --> 00:55:11,200
Even with 1,000 images going 
through that image optimization

545
00:55:11,200 --> 00:55:13,200
pipeline. Which I think is 
incredible.

546
00:55:16,803 --> 00:55:18,803
We have another great feature 
called sv

547
00:55:21,215 --> 00:55:23,215
gShort Circuit.

548
00:55:25,319 --> 00:55:27,319
A great new feature where it'll
actually compare the size of 

549
00:55:27,319 --> 00:55:29,319
that svg

550
00:55:29,319 --> 00:55:32,109
versus the counterparts, the 
web P, your JPEG or whatever.

551
00:55:35,311 --> 00:55:37,311
And will throw out the ones 
that are bigger than the svg.

552
00:55:38,606 --> 00:55:42,350
So we do a file size comparison
and say, hey, is this svg? So 

553
00:55:42,350 --> 00:55:44,350
we have this complex Mexico 
flag here. 

554
00:55:50,263 --> 00:55:52,263
Is the version of that flag

555
00:55:53,365 --> 00:55:55,573
smaller in a vector format? We 
prefer one over the other.

556
00:56:03,382 --> 00:56:06,195
You can upload as many, or you 
can get a small svg, and we'll 

557
00:56:06,195 --> 00:56:08,195
keep that for you.

558
00:56:09,494 --> 00:56:11,494
So here's the classic tiger, 
only about 20

559
00:56:13,905 --> 00:56:16,916
kilobyte, we keep just the svg 
in an image tank for you, which

560
00:56:16,916 --> 00:56:18,916
I think is great. 

561
00:56:20,504 --> 00:56:22,504
We have some cool configuration
options coming in 11ty 3.

562
00:56:25,611 --> 00:56:27,611
0, asynchronous work in your 
callback function, which I 

563
00:56:27,611 --> 00:56:29,611
think is great.

564
00:56:29,611 --> 00:56:32,627
We have this new config export 
that you can do. So a lot of 

565
00:56:32,627 --> 00:56:34,627
times folks will

566
00:56:36,231 --> 00:56:38,231
return an object inside of 
their configuration callback.

567
00:56:39,845 --> 00:56:41,845
And now, you can export that 
and save your configuration 

568
00:56:41,845 --> 00:56:43,845
file.

569
00:56:43,845 --> 00:56:46,432
And that is just an easier way 
to organize your code and 

570
00:56:46,432 --> 00:56:48,432
allows us to access that a 
little bit earlier and keep it 

571
00:56:48,432 --> 00:56:52,328
consistent in your config. 
We have new set import 

572
00:56:52,328 --> 00:56:54,328
directories, set

573
00:56:54,328 --> 00:56:56,837
output directory methods. We 
have, also, those for includes 

574
00:56:56,837 --> 00:56:58,837
and layouts and

575
00:57:00,042 --> 00:57:02,042
every directory you might want 
to set, we have a method for 

576
00:57:02,042 --> 00:57:04,042
that. 

577
00:57:04,042 --> 00:57:07,142
We have a new virtual templates
feature, which allows you in 

578
00:57:07,142 --> 00:57:09,142
configuration

579
00:57:09,142 --> 00:57:11,142
to create a virtualized 
template. And this is a super 

580
00:57:11,142 --> 00:57:13,142
exciting feature.

581
00:57:13,958 --> 00:57:17,165
Now, it allows you to create, 
and will allow plugins to 

582
00:57:17,165 --> 00:57:19,165
create content in your 11ty 
sites,

583
00:57:19,165 --> 00:57:22,154
as well, which I think is 
great. There was sort of an 

584
00:57:22,154 --> 00:57:24,154
example of how to block all of 
the

585
00:57:25,246 --> 00:57:27,246
AI spiders that come to your 
site, and now, we can have a 

586
00:57:27,246 --> 00:57:29,246
plugin that does

587
00:57:29,444 --> 00:57:31,449
that for you and generates your
robot txd for you. 

588
00:57:33,447 --> 00:57:35,447
I think that will be great for 
the RSS plugin, as well.

589
00:57:42,368 --> 00:57:44,368
There's a bundler, plain

590
00:57:45,469 --> 00:57:47,469
text bundler, and you can add 
plain text to

591
00:57:48,673 --> 00:57:50,673
that bundle and we'll create 
page-specific bundles for that 

592
00:57:50,673 --> 00:57:52,673
code.

593
00:57:58,791 --> 00:58:01,889
To add a page to CSS bundle. 
And web CSS is using this, but 

594
00:58:01,889 --> 00:58:03,889
it's coming to Core, as well.

595
00:58:03,994 --> 00:58:05,994
This is how you output those 
bundles.

596
00:58:09,184 --> 00:58:11,489
Yeah, gets all of the CSS 
that's added to that bundle for

597
00:58:11,489 --> 00:58:13,489
the page, and then, you can add
it to a style block.

598
00:58:14,781 --> 00:58:16,781
Or you can create your own 
bundle file, if you want to 

599
00:58:16,781 --> 00:58:18,781
bundle that into an external 
file, as well. 

600
00:58:22,386 --> 00:58:24,386
We have a great new plugin that
allows you to link to input 

601
00:58:24,386 --> 00:58:26,386
files . So files on your file 
system, which I think is 

602
00:58:26,386 --> 00:58:28,386
amazing

603
00:58:28,579 --> 00:58:32,582
. You can link to your markdown
file and it'll translate that 

604
00:58:32,582 --> 00:58:34,582
to the URL for you, allows your
project to be a little bit

605
00:58:36,789 --> 00:58:38,789
more stable and less brittle 
with your URLs as you change 

606
00:58:38,789 --> 00:58:43,098
them. 
We have great new things coming

607
00:58:43,098 --> 00:58:47,901
to data. We have sort of Node 
front matter syntax.

608
00:58:49,698 --> 00:58:52,394
Importantly, you can do 
JavaScript data using the 11ty.

609
00:58:52,394 --> 00:58:54,394
js template syntax type.

610
00:58:55,684 --> 00:58:57,684
But now, you can do this in any
template syntax language.

611
00:58:58,986 --> 00:59:00,986
You can use arbitrary 
JavaScript. Which I think is 

612
00:59:00,986 --> 00:59:02,986
super powerful. 

613
00:59:04,448 --> 00:59:06,448
I first noticed this in the 
Astro project, and I really 

614
00:59:06,448 --> 00:59:08,448
like it. So now, we have it.

615
00:59:10,326 --> 00:59:12,326
You can also get act says to 
the raw input of a

616
00:59:15,732 --> 00:59:17,732
access to the raw input of your
file.

617
00:59:20,028 --> 00:59:22,028
11ty works in Deno, which I 
think is really great . Here's 

618
00:59:22,028 --> 00:59:24,028
an example of that. 

619
00:59:25,126 --> 00:59:27,126
And because it works in

620
00:59:28,215 --> 00:59:32,310
Deno, now have actcess to JSX. 
And here's an example of adding

621
00:59:32,310 --> 00:59:34,310
a custom template

622
00:59:35,514 --> 00:59:37,514
syntax that uses the render to 
string

623
00:59:39,116 --> 00:59:41,116
API to render JSX in your 11ty 
project . 

624
00:59:43,702 --> 00:59:47,099
Bundlers. 11ty is still bundler
compatible, but we're also

625
00:59:48,609 --> 00:59:52,005
bundler decoupled. We don't, 
sort of, buy into

626
00:59:53,911 --> 00:59:57,402
first party bundler at 11ty's 
core. And I think that's 

627
00:59:57,402 --> 00:59:59,402
important to keep 11ty

628
00:59:59,402 --> 01:00:02,190
independent moving forward. 
But you can use bundlers in 

629
01:00:02,190 --> 01:00:04,190
11ty,

630
01:00:05,278 --> 01:00:07,278
if you go out to our docs right
now, there's a great section on

631
01:00:07,278 --> 01:00:09,278
using custom templates to do 
that. 

632
01:00:13,990 --> 01:00:15,990
And just some stats on the 11ty
3. 0 version.

633
01:00:18,990 --> 01:00:21,303
Again, dropped our node 
dependency on additional 13.

634
01:00:24,697 --> 01:00:27,398
3 megabyte, at about 22 
megabyte for node modules right

635
01:00:27,398 --> 01:00:29,398
now, which I think is great. 

636
01:00:31,392 --> 01:00:33,392
And this is far smaller than a 
lot of the alternatives out 

637
01:00:33,392 --> 01:00:38,082
there right now. We've reduced 
our dependencies to 176

638
01:00:41,387 --> 01:00:43,387
, and I think that's not 
necessarily the

639
01:00:44,997 --> 01:00:46,997
most important metric, but I 
think it is a great way to have

640
01:00:46,997 --> 01:00:48,997
stability on the project.

641
01:00:49,489 --> 01:00:51,682
We are pretty fast to install, 
as well.

642
01:00:54,079 --> 01:00:57,176
So just some benchmarks, it's 
about 4. 3 seconds to install 

643
01:00:57,176 --> 01:00:59,176
11ty 3. 0.

644
01:01:02,157 --> 01:01:04,157
And almost a minute to install 
Gatsby, which

645
01:01:04,157 --> 01:01:06,157
adds up, for sure.

646
01:01:08,741 --> 01:01:11,135
I did run -- update the 
performance benchmark. So we 

647
01:01:11,135 --> 01:01:13,135
had some interesting numbers 
there. 

648
01:01:15,928 --> 01:01:17,928
How long's it take each one of 
these tools to generate 4 ,000 

649
01:01:17,928 --> 01:01:21,613
markdown files? 11ty, less than
2 seconds, Hugo less than 1 

650
01:01:21,613 --> 01:01:23,613
second.

651
01:01:24,911 --> 01:01:27,110
So 11ty is about, I want to 
say, two times Hugo. But you 

652
01:01:27,110 --> 01:01:29,110
get a lot for it, right?

653
01:01:30,205 --> 01:01:32,208
You get a lot of extra access 
to the JavaScript ecosystem. 

654
01:01:35,400 --> 01:01:37,400
A variety of template syntaxes,
as well

655
01:01:38,807 --> 01:01:40,899
. And yeah, I think 11ty does 
really stand out in terms of 

656
01:01:40,899 --> 01:01:42,899
our build performance.

657
01:01:46,795 --> 01:01:48,795
But the number one thing, I 
think, and

658
01:01:49,882 --> 01:01:52,895
11ty is sort of known for and 
has little, very little to do 

659
01:01:52,895 --> 01:01:57,305
with me. 11ty is known for our 
community and people.

660
01:02:00,498 --> 01:02:02,498
We have so many people that 
have built things with 11ty on 

661
01:02:02,498 --> 01:02:04,498
our authors' page.

662
01:02:05,621 --> 01:02:07,621
We have people that have braved
the leaderboards, which is 

663
01:02:07,621 --> 01:02:09,621
pretty incredible. 

664
01:02:12,821 --> 01:02:14,821
We have so many hundreds of 
sites that are 400 on 

665
01:02:14,821 --> 01:02:17,529
lighthouse. We have so many 
open collective supporters, and

666
01:02:17,529 --> 01:02:19,529
I

667
01:02:20,735 --> 01:02:22,836
really appreciate everyone that
has put money to 11ty. It's 

668
01:02:22,836 --> 01:02:24,836
such a vote of confidence.

669
01:02:28,331 --> 01:02:31,534
We have our folks helpful on 
discord, our community 

670
01:02:31,534 --> 01:02:33,534
moderators and people that have
answered questions

671
01:02:34,633 --> 01:02:36,633
for folks that are coming in to
ask, I don't understand how 

672
01:02:36,633 --> 01:02:38,633
this works, please, help me.

673
01:02:39,424 --> 01:02:42,519
Anyone that has answered a 
question on Discord or social 

674
01:02:42,519 --> 01:02:44,519
media or anyone that has helped
anyone else

675
01:02:45,727 --> 01:02:47,727
with -- helped someone else 
with 11ty is such

676
01:02:48,538 --> 01:02:52,334
an amazing, big help to the 
project. 

677
01:02:52,334 --> 01:02:54,334
We have our 11ty meetup folks 
that run the 11ty

678
01:02:56,140 --> 01:02:58,140
Meetup, we have Bob that ran 
the 11ty

679
01:02:59,230 --> 01:03:02,436
Bundle site, which is sort of 
an aggregate, ing a aggregation

680
01:03:02,436 --> 01:03:04,436
of all of the 11ty resources, 
which is such a huge task.

681
01:03:04,436 --> 01:03:06,436
Thank you, Bob, that's so 
amazing. 

682
01:03:09,531 --> 01:03:12,738
And just some amazing folks on 
the issue tracker, as well, 

683
01:03:12,738 --> 01:03:14,738
Raphael and Peter just have 
helped out for so much over the

684
01:03:14,738 --> 01:03:16,738
years. 

685
01:03:18,364 --> 01:03:21,669
And then, we have the people 
contributed on GitHub. So many,

686
01:03:21,669 --> 01:03:23,669
so many people, thank you to 
everyone that has

687
01:03:24,871 --> 01:03:26,871
just even if you've just fixed 
a typo on the docs , that's 

688
01:03:26,871 --> 01:03:28,871
hugely important.

689
01:03:30,488 --> 01:03:32,488
And then, our conference 
organizers, David, Olivia, and 

690
01:03:32,488 --> 01:03:34,488
Mike, just really appreciate 
y'all.

691
01:03:36,397 --> 01:03:38,397
Shout out to James, y'all

692
01:03:39,606 --> 01:03:41,606
, maybe are aware of the 11ty 
possum , this came from James.

693
01:03:44,072 --> 01:03:46,072
It started as the cat on the 
balloon. And it changed to the 

694
01:03:46,072 --> 01:03:48,072
possum.

695
01:03:49,278 --> 01:03:51,278
And we've sort of iterating on 
different mascots over the 

696
01:03:51,278 --> 01:03:53,278
years. 
And yeah, that came from James.

697
01:03:56,592 --> 01:03:58,592
And I do just want to recognize

698
01:03:59,696 --> 01:04:02,303
CloudCannon because I think 
they have played such a huge 

699
01:04:02,303 --> 01:04:04,303
role in the 11ty community.

700
01:04:04,407 --> 01:04:06,915
Especially over the last year. 
Without CloudCannon, this 

701
01:04:06,915 --> 01:04:08,915
conference would not exist. 

702
01:04:10,324 --> 01:04:12,324
That's very easy thing for me 
to say.

703
01:04:15,026 --> 01:04:17,026
And, yeah, without CloudCannon,
the 3.

704
01:04:19,036 --> 01:04:21,036
0 release would not be shipping
on the timeline that we're 

705
01:04:21,036 --> 01:04:23,036
aiming for.

706
01:04:25,053 --> 01:04:27,053
And importantly, with 
CloudCannon, they're already 

707
01:04:27,053 --> 01:04:29,053
ready for the 3. 0 release.

708
01:04:30,365 --> 01:04:32,365
We've put in the work at 
CloudCannon to make CloudCannon

709
01:04:33,471 --> 01:04:35,471
's configuration ESM 
compatible, make it work with 

710
01:04:35,471 --> 01:04:37,471
our new async configs, and so, 
that's ready to go . 

711
01:04:39,285 --> 01:04:41,285
From day one, which I think is 
amazing.

712
01:04:43,795 --> 01:04:45,795
And just from a personal level,
I really, really, really 

713
01:04:45,795 --> 01:04:47,795
appreciate d the folks at 
CloudCannon. They're super 

714
01:04:47,795 --> 01:04:52,326
helpful. They're super nice. 
They have been champions for 

715
01:04:52,326 --> 01:04:54,326
accessibility.

716
01:04:55,831 --> 01:04:57,831
I think you've probably seen 
some folks online talking about

717
01:04:59,438 --> 01:05:01,438
how CloudCannon has really 
iterating

718
01:05:02,667 --> 01:05:04,667
on our accessibility and trying
to do some really great work in

719
01:05:04,667 --> 01:05:07,913
that space. 
And they've been super amazing 

720
01:05:07,913 --> 01:05:12,930
champions for static sites, 
generally. You should go out to

721
01:05:12,930 --> 01:05:15,842
the future of Jamstack. org and
look at the community that 

722
01:05:15,842 --> 01:05:17,842
we're building there.

723
01:05:19,155 --> 01:05:21,155
I think that is a super 
important thing.

724
01:05:24,666 --> 01:05:26,666
To pick up the Jamstack 
community and elevate it to 

725
01:05:26,666 --> 01:05:28,666
something new .

726
01:05:34,684 --> 01:05:36,684
And so, just to wrap up, 
there's -- it's just such an 

727
01:05:36,684 --> 01:05:38,684
interesting world right now.

728
01:05:38,884 --> 01:05:42,087
We have nothing but algorithmic
timelines on social media, we 

729
01:05:42,087 --> 01:05:44,087
have for you pages just 
shoveling content

730
01:05:45,496 --> 01:05:47,496
at us, we have large

731
01:05:48,507 --> 01:05:51,808
language models generating 
content for us. I really think 

732
01:05:51,808 --> 01:05:53,808
that folks that are making and

733
01:05:54,910 --> 01:05:57,920
hosting and having full control
of their own content on the web

734
01:05:57,920 --> 01:06:01,533
is so powerful. 
In a way, I think it's very 

735
01:06:01,533 --> 01:06:03,533
subversive, too.

736
01:06:06,036 --> 01:06:08,036
So just ask yourself, what do 
you want to build on the web

737
01:06:09,138 --> 01:06:12,861
? What would you like to grow? 
What would you like to see the 

738
01:06:12,861 --> 01:06:16,265
next generation of the web be? 
And I think 11ty is

739
01:06:19,372 --> 01:06:21,372
a great place to help you move 
in that direction.

740
01:06:24,282 --> 01:06:26,282
So let's get our hands dirty 
and, I guess, keep building for

741
01:06:26,282 --> 01:06:28,282
the web. 
Thanks, everybody.

742
01:06:33,567 --> 01:06:35,567
â‰« MIKE: Zach, that was 
incredible.

743
01:06:41,167 --> 01:06:43,167
That just the 3. 0 release is 
exciting.

744
01:06:43,957 --> 01:06:46,743
There's so much packed into 
there. 

745
01:06:46,743 --> 01:06:48,743
â‰« ZACH: Yeah, and I didn't put 
it all in there.

746
01:06:50,047 --> 01:06:52,051
I honestly have no idea how 
much time I used. I'm so sorry.

747
01:06:52,051 --> 01:06:54,051
But yeah.

748
01:06:54,051 --> 01:06:56,051
There's so much more to talk 
about, too.

749
01:07:00,861 --> 01:07:03,064
Yeah, no, 
â‰« MIKE: Yeah, I can't wait.

750
01:07:04,865 --> 01:07:06,961
What sort of timeline for the 
3. 0 release? 

751
01:07:10,160 --> 01:07:12,160
â‰« ZACH: I really worked hard to
get the first beta out today, 

752
01:07:12,160 --> 01:07:14,160
but we didn't quite make it.

753
01:07:15,165 --> 01:07:17,667
There's a couple of minor 
things I'd like to clean up. 

754
01:07:17,667 --> 01:07:19,667
But I would like to have the 
beta out within the month. 

755
01:07:19,667 --> 01:07:22,472
That's definitely doable. 
Yeah, and that's what we're 

756
01:07:22,472 --> 01:07:24,472
working toward.

757
01:07:24,472 --> 01:07:26,472
â‰« MIKE: Very cool.

758
01:07:29,579 --> 01:07:31,579
Nice, OK.

759
01:07:34,280 --> 01:07:36,280
Let's keep rolling. We've got a
lot of speakers to get through.

760
01:07:39,671 --> 01:07:41,671
Just before we do,

761
01:07:44,481 --> 01:07:47,776
CloudCannon has teamed up with 
11ty to give away prizes. You 

762
01:07:47,776 --> 01:07:51,685
can enter to win at CloudCannon
.com 11ty

763
01:07:54,684 --> 01:07:56,684
Conf, up to the value of 
$5,000, plus a 30% discount for

764
01:07:56,684 --> 01:07:58,684
3 months.

765
01:07:59,964 --> 01:08:01,964
For second prize, ten lucky 
winners will receive a 30

766
01:08:03,173 --> 01:08:06,676
% discount on three months on 
any other CloudCannon plans. 

767
01:08:06,676 --> 01:08:08,676
You can head over to 
CloudCannon.

768
01:08:10,568 --> 01:08:12,568
com/11tyConf to enter that 
draw. And yeah, more 

769
01:08:12,568 --> 01:08:14,568
information there. 

770
01:08:14,568 --> 01:08:16,568
â‰« ZACH: Great.

771
01:08:23,258 --> 01:08:25,258
â‰« MIKE: We're going to get the 
next speaker ready. And then 

772
01:08:25,258 --> 01:08:27,258
we'll keep this thing rolling.

773
01:08:30,860 --> 01:08:32,860
So, just from Zach's talk, what
are people most excited about 

774
01:08:32,860 --> 01:08:36,059
in the 3. 0 release? I heard a 
lot of images.

775
01:08:40,255 --> 01:08:42,255
I think that's pretty mind 
blowing

776
01:08:45,068 --> 01:08:47,068
. Just how easy that's going to
be,

777
01:08:48,161 --> 01:08:50,161
especially in dev, just 
speeding up that process. 

778
01:08:50,161 --> 01:08:52,161
Yeah. Very, very cool.

779
01:08:56,744 --> 01:08:58,744
So, let's move on to our next 
speaker. Next, we have Miriam.

780
01:09:01,227 --> 01:09:03,227
Miriam is an artist, developer,
and open source

781
01:09:06,645 --> 01:09:08,645
web, she's a cofounder of 
OddBird

782
01:09:10,247 --> 01:09:12,247
and expert on the CSS working 
group,

783
01:09:13,455 --> 01:09:15,455
developing new web standards 
like cascade layers, container 

784
01:09:15,455 --> 01:09:18,161
queries and scope. And member 
of the SaaS core team. 

785
01:09:21,358 --> 01:09:23,358
Offline, she might be repairing
clocks, knitting socks,

786
01:09:24,457 --> 01:09:27,255
or creating hybrid performances
with teacup.

787
01:09:30,648 --> 01:09:32,648
I'm looking forward to finding 
out more about CSS and how

788
01:09:33,853 --> 01:09:35,853
it balances its constraints and
the task of collaborative 

789
01:09:35,853 --> 01:09:37,853
styling.

790
01:09:46,473 --> 01:09:48,473
[ Applause ] 

791
01:09:48,473 --> 01:09:51,946
Hey, Miriam, welcome. 
â‰« MIRIAM: Thanks, how are you? 

792
01:09:51,946 --> 01:09:53,946
â‰« MIKE: I'm doing well.

793
01:09:53,946 --> 01:09:55,946
Really excited for your talk. 
Interested to know more. 

794
01:09:55,946 --> 01:09:57,946
â‰« MIRIAM: Great.

795
01:09:59,841 --> 01:10:01,841
â‰« MIKE: Over to you. 
â‰« MIRIAM: All right.

796
01:10:03,421 --> 01:10:06,816
Yeah. We're going to be talking
about the origins of the

797
01:10:10,118 --> 01:10:12,118
web, but especially design on 
the web using

798
01:10:14,924 --> 01:10:16,924
CHSS, cascading HTML style 
sheets proposed

799
01:10:18,731 --> 01:10:21,627
by Hokum Lee in 1994. This is 
still archived online. You can 

800
01:10:21,627 --> 01:10:23,627
read it. I recommend it.

801
01:10:24,629 --> 01:10:27,629
It's fascinating, the original 
design of the language. 

802
01:10:27,629 --> 01:10:29,629
But this wasn't the only 
proposal for design on the web.

803
01:10:31,736 --> 01:10:33,736
And it wasn't the first 
proposal for design on the web.

804
01:10:35,034 --> 01:10:38,130
It was actually based on 
several existing proposals like

805
01:10:38,130 --> 01:10:41,534
the one built into the Viola 
browser, or this easily 

806
01:10:41,534 --> 01:10:43,534
parsable format where I have

807
01:10:44,739 --> 01:10:46,739
no idea what's going

808
01:10:48,150 --> 01:10:50,150
on, equals 14, I don't know. 

809
01:10:53,346 --> 01:10:57,448
But CSS solved a major problem 
for this new platform. Not a 

810
01:10:57,448 --> 01:10:59,448
technical problem exactly, but 
a

811
01:11:00,650 --> 01:11:02,650
philosophical problem, 
political, like all of the 

812
01:11:02,650 --> 01:11:04,650
decisions

813
01:11:04,650 --> 01:11:06,650
we make when we're designing a 
new platform or interface. 

814
01:11:08,665 --> 01:11:12,168
The first web browser, 
developed by CERN,

815
01:11:14,974 --> 01:11:16,974
called the hyperbrowser www.

816
01:11:18,681 --> 01:11:20,681
editor was developed for the 
fancy machine for this graphic 

817
01:11:20,681 --> 01:11:22,681
interface , but you can't make 
a worldwide web by saying

818
01:11:24,593 --> 01:11:26,593
it works on my machine and 
everyone else is a edge case.

819
01:11:28,292 --> 01:11:30,292
They hired Nicola Pello to 
design, it's text only, you 

820
01:11:30,292 --> 01:11:33,093
don't have to install it. Any 
device with an internet 

821
01:11:33,093 --> 01:11:35,307
connection can log into the 
CERN servers and browse the 

822
01:11:35,307 --> 01:11:37,806
web. This becomes the mission 
statement. 

823
01:11:39,207 --> 01:11:41,708
Web for all, web on everything.
And everything is a lot of 

824
01:11:41,708 --> 01:11:43,708
things.

825
01:11:44,012 --> 01:11:47,321
There's so many different 
things that the web is on. And 

826
01:11:47,321 --> 01:11:49,321
that includes devices without 
any screen or

827
01:11:50,528 --> 01:11:52,528
visual display at all as well 
as screen readers, which do 

828
01:11:52,528 --> 01:11:54,528
read the screen.

829
01:11:55,437 --> 01:11:57,437
So are sort of a combination of
interfaces . 

830
01:11:59,543 --> 01:12:02,747
If we really want this to work,
web for all web on everything, 

831
01:12:02,747 --> 01:12:05,259
then we get some interesting 
constraints.

832
01:12:08,460 --> 01:12:12,271
And these are documented on the
first website, the HTML 

833
01:12:12,271 --> 01:12:14,271
documentation that was launched
around 1991.

834
01:12:14,271 --> 01:12:16,271
And is also still online. You 
can go read that, as well. 

835
01:12:19,687 --> 01:12:22,893
And it says browsers should 
ignore tags, which they do not 

836
01:12:22,893 --> 01:12:25,303
understand and ignore 
attributes which they do not 

837
01:12:25,303 --> 01:12:27,303
understand of tags which they 
do.

838
01:12:29,408 --> 01:12:32,929
So, oh ...  I'm afraid...  
let's go to it here.

839
01:12:38,448 --> 01:12:40,448
Edit that on Codepen, will it 
let us? Yes.

840
01:12:45,173 --> 01:12:47,778
Zoom in on that a bit. 
â‰« MIKE: We just have your 

841
01:12:47,778 --> 01:12:51,584
slides at the moment. You might
need to share another window.

842
01:12:54,186 --> 01:12:56,992
Myrrh
â‰« MIRIAM: OK. Share this tab 

843
01:12:56,992 --> 01:12:58,992
instead.

844
01:12:58,992 --> 01:13:02,100
No, wait, how do I do that? 
Present.

845
01:13:08,310 --> 01:13:10,310
Share a whole window. That's 
what I want.

846
01:13:15,331 --> 01:13:17,331
Sorry about that.

847
01:13:20,737 --> 01:13:22,740
â‰« MIKE: Nice. 
â‰« MIRIAM: Great.

848
01:13:24,947 --> 01:13:26,947
Yes.

849
01:13:28,449 --> 01:13:31,546
So browsers should ignore tags 
they don't understand, so you 

850
01:13:31,546 --> 01:13:33,546
can see here, hopefully, in 
this

851
01:13:35,752 --> 01:13:37,752
code I've inserted a lot of 
tags that aren't real

852
01:13:38,859 --> 01:13:42,065
. They're fake tags, I made 
them up and the browser's 

853
01:13:42,065 --> 01:13:44,065
ignoring them and displays the 
tags it understands and

854
01:13:45,271 --> 01:13:47,281
displays the content inside of 
those tags . Also ignoring 

855
01:13:47,281 --> 01:13:49,281
attributes I made up. 

856
01:13:51,482 --> 01:13:53,482
That's become very useful as we
start doing web components and 

857
01:13:53,482 --> 01:13:56,096
custom attributes. This was 
planned from the beginning.

858
01:13:58,899 --> 01:14:02,206
The goal is to protect content 
over code. The code is 

859
01:14:02,206 --> 01:14:04,206
optional, the content is 
essential.

860
01:14:05,615 --> 01:14:07,615
Whatever else happens, browsers
should protect the content.

861
01:14:08,917 --> 01:14:10,917
And that's why we can still see
this first website on modern 

862
01:14:10,917 --> 01:14:12,917
browsers. 

863
01:14:13,142 --> 01:14:15,142
And we can also load modern 
browsers, modern websites on 

864
01:14:15,142 --> 01:14:17,755
the first browser. This is an 
emulator you can go play with 

865
01:14:17,755 --> 01:14:22,779
of the www. Browser. You don't 
see -- sorry, that's a lot of 

866
01:14:22,779 --> 01:14:27,683
noise. You don't see CSS in 
images, but all the text is 

867
01:14:27,683 --> 01:14:31,086
there. You can see via 
international symposium

868
01:14:34,088 --> 01:14:36,088
website, and my cascading style
systems workshop website, they 

869
01:14:36,088 --> 01:14:38,088
load fine. And the content is 
preserved. 

870
01:14:41,406 --> 01:14:43,406
This limitation becomes even

871
01:14:43,511 --> 01:14:46,816
more dramatic for graphic 
design. In order for HTML to be

872
01:14:46,816 --> 01:14:48,816
a common language between all 
platforms

873
01:14:50,419 --> 01:14:52,419
, we can't have any 
device-specific markup

874
01:14:53,626 --> 01:14:57,434
or anything which requires 
control over fonts and colors. 

875
01:14:57,434 --> 01:14:59,434
That's in the original 
documentation web design

876
01:15:00,533 --> 01:15:02,533
will never happen, at least in 
the graphic sense.

877
01:15:04,326 --> 01:15:08,135
And the problem isn't styling 
documents online, that's easy 

878
01:15:08,135 --> 01:15:11,744
enough and all of the early 
browsers provided internal 

879
01:15:11,744 --> 01:15:13,744
style sheets, even the text

880
01:15:14,845 --> 01:15:17,943
-only browser, you can see it 
has all caps headings and space

881
01:15:17,943 --> 01:15:21,347
between paragraphs . 
So there's styles happening 

882
01:15:21,347 --> 01:15:23,347
here, but the styles are

883
01:15:24,553 --> 01:15:27,655
provided by the browser, so 
there's this same across all 

884
01:15:27,655 --> 01:15:29,655
websites, they depend what 
browser you're using.

885
01:15:31,065 --> 01:15:33,065
And this is fundamentally 
different from print design. 

886
01:15:33,065 --> 01:15:36,073
Right? Where we get to describe
everything about our page. 

887
01:15:36,073 --> 01:15:38,073
In fact, we describe the page 
itself. How big is it?

888
01:15:39,281 --> 01:15:43,084
And then, it stays that size 
forever. It's static. So we can

889
01:15:43,084 --> 01:15:46,180
export to a PDF or a JPEG or 
send it to the printer and what

890
01:15:46,180 --> 01:15:48,180
we get back is exactly what we 
designed.

891
01:15:49,695 --> 01:15:51,695
And you can click on it all you
want, nothing's going to 

892
01:15:51,695 --> 01:15:53,695
happen. It just sits there. 

893
01:15:54,594 --> 01:15:57,691
The same was true for other 
digital formats at the time . 

894
01:15:57,691 --> 01:16:00,793
Postscript had been around for 
almost a decade . That's the 

895
01:16:00,793 --> 01:16:02,793
basis of PDFs, which came 
slight , I think around the 

896
01:16:02,793 --> 01:16:07,404
same time. It's a page 
description language. So like 

897
01:16:07,404 --> 01:16:09,404
print, we describe a static

898
01:16:09,404 --> 01:16:12,713
page, how big is it? Where does
each thing go? And we set the 

899
01:16:12,713 --> 01:16:17,721
fonts and colors, et cetera. 
We get all of the control in 

900
01:16:17,721 --> 01:16:23,125
those systems, but that control
comes at a cost. The page, 

901
01:16:23,125 --> 01:16:26,129
print or PDF is a static medium
. It can't adapt a context or 

902
01:16:26,129 --> 01:16:28,129
preferences.

903
01:16:28,633 --> 01:16:32,235
And that's a limitation of the 
medium. Go read John Elsop

904
01:16:35,234 --> 01:16:37,234
's style of web design from 
2000, it's still relevant . I 

905
01:16:37,234 --> 01:16:39,234
won't wait. 

906
01:16:39,234 --> 01:16:41,234
Web styles have to be 
different. They have to be 

907
01:16:41,234 --> 01:16:43,234
contextual. Even static sites 
aren't static.

908
01:16:46,137 --> 01:16:48,137
What we ship is not always what
our audience sees

909
01:16:49,545 --> 01:16:52,748
. So styles must adapt to all 
of the different situations 

910
01:16:52,748 --> 01:16:54,758
where they might show up 
because the web is responsive 

911
01:16:54,758 --> 01:16:56,856
to context. And that's a 
political vision from the 

912
01:16:56,856 --> 01:16:58,856
beginning. 

913
01:17:01,249 --> 01:17:03,249
Not just the width of the 
viewport, but user needs

914
01:17:04,349 --> 01:17:06,349
and preferences, device 
interfaces, and changing 

915
01:17:06,349 --> 01:17:08,349
capabilities over time. In 
other words, we're not alone.

916
01:17:10,971 --> 01:17:12,971
We're part of an ecosystem here
and our decisions impact other 

917
01:17:12,971 --> 01:17:17,277
people. We don't get final say.
We're collaborating with the 

918
01:17:17,277 --> 01:17:19,277
browsers who are

919
01:17:20,685 --> 01:17:22,685
instructed to ignore us when we
go off the rails. 

920
01:17:24,990 --> 01:17:26,990
And we're also collaborating 
with the people who interact 

921
01:17:26,990 --> 01:17:28,990
with our sites

922
01:17:28,990 --> 01:17:31,404
on their chosen devices with 
varying capabilities , with a 

923
01:17:31,404 --> 01:17:33,404
browser that they choose, and 
wearing

924
01:17:34,506 --> 01:17:38,111
these handy little tool belts 
that I think are very cute. And

925
01:17:38,111 --> 01:17:40,111
we're probably also 
collaborating with aliens, 

926
01:17:40,111 --> 01:17:42,111
maybe, who knows, if they're 
around, we should collaborate 

927
01:17:42,111 --> 01:17:44,111
with them. They're just trying 
to get home. 

928
01:17:46,832 --> 01:17:48,832
The CHSS proposal is

929
01:17:48,832 --> 01:17:52,040
explicitly designed around this
collaboration. That's how the 

930
01:17:52,040 --> 01:17:54,040
document starts

931
01:17:55,246 --> 01:17:57,659
. This proposal tries to soften
the tension between the author 

932
01:17:57,659 --> 01:17:59,659
and the reader.

933
01:18:00,164 --> 01:18:02,164
It's specifically for that.

934
01:18:03,857 --> 01:18:05,857
And, if conflicts arise, the 
user should have the last word.

935
01:18:08,653 --> 01:18:10,653
And that is built into the 
cascade itself.

936
01:18:14,568 --> 01:18:17,772
It's the first step of the 
cascade is that the user styles

937
01:18:17,772 --> 01:18:22,183
can override the author styles 
when it's important from step 

938
01:18:22,183 --> 01:18:24,183
one, origins important, when 
the user

939
01:18:24,183 --> 01:18:26,785
marks sometime important, they 
take priority over everything. 

940
01:18:26,785 --> 01:18:28,785
That's the purpose of 
importance.

941
01:18:30,079 --> 01:18:32,079
It's not for us to get into 
petty

942
01:18:33,173 --> 01:18:36,268
squabbles, but to maintain 
balance in the universe and 

943
01:18:36,268 --> 01:18:38,268
give power back to the...  I 
don't know...

944
01:18:39,562 --> 01:18:41,562
rebel users, I don't know. 
Analogies are hard.

945
01:18:45,450 --> 01:18:48,056
A Jedi uses importance for 
knowledge for defense, never 

946
01:18:48,056 --> 01:18:52,461
for attack. This also becomes a
core W3C principle.

947
01:18:55,658 --> 01:18:57,658
If a tradeoff needs to be made 
in the design of the platform 

948
01:18:57,658 --> 01:18:59,658
itself, always put user needs 
above all. 

949
01:19:02,474 --> 01:19:04,474
So under these sort of absurd 
constraints,

950
01:19:06,082 --> 01:19:08,082
design seemed almost impossible
on the web

951
01:19:09,690 --> 01:19:11,690
. If we want this political 
vision, how are we going to 

952
01:19:11,690 --> 01:19:13,690
control fonts and colors, for 
example, we can't

953
01:19:13,690 --> 01:19:15,982
. 
But nobody was happy with that 

954
01:19:15,982 --> 01:19:17,982
outcome.

955
01:19:19,482 --> 01:19:22,579
When every site looks the same,
that's not just boring for 

956
01:19:22,579 --> 01:19:24,579
people who are trying to brand 
their product, it's kind of 

957
01:19:24,579 --> 01:19:26,579
boring for everybody. People 
like design.

958
01:19:30,880 --> 01:19:32,880
The turning point came in 1993 
when

959
01:19:33,287 --> 01:19:36,580
Mosaic added the image tag to 
HTML. This was before web 

960
01:19:36,580 --> 01:19:38,580
standards, web styles were 
suddenly possible

961
01:19:38,585 --> 01:19:40,977
through the image tag. 
You could just throw everything

962
01:19:40,977 --> 01:19:42,977
into an image.

963
01:19:45,267 --> 01:19:47,267
And then, when it breaks, 
there's no content to protect.

964
01:19:48,874 --> 01:19:51,968
This fundamentally breaks 
everything that was special 

965
01:19:51,968 --> 01:19:53,968
about the political

966
01:19:53,968 --> 01:19:57,396
vision of HTML. If it doesn't 
load, it's just lost. This was 

967
01:19:57,396 --> 01:19:59,396
a real risk to the platform.

968
01:20:00,890 --> 01:20:02,890
The web could've become a giant
fax machine where pictures

969
01:20:03,384 --> 01:20:06,776
of text would be passed along. 
So there's a real race

970
01:20:09,878 --> 01:20:13,080
between 1993 and 1994, a rush 
of different proposals trying 

971
01:20:13,080 --> 01:20:16,685
to figure out how are we going 
to get styles on the web is 

972
01:20:16,685 --> 01:20:18,685
that that don't

973
01:20:18,685 --> 01:20:20,814
break what makes the web 
special? 

974
01:20:20,814 --> 01:20:22,814
I recommend checking out a 
bunch of these. They're really 

975
01:20:22,814 --> 01:20:25,911
fascinating. But all of them 
talk about this problem.

976
01:20:29,316 --> 01:20:31,316
Allow the authors, that's us, 
building the web.

977
01:20:34,320 --> 01:20:36,823
To attach style hints. Styles, 
not rules, but hints and 

978
01:20:36,823 --> 01:20:38,823
suggestions.

979
01:20:40,536 --> 01:20:42,536
This phrase shows up over and 
over in many of the proposals.

980
01:20:44,239 --> 01:20:46,450
Provide hints that the browser 
may or may not use. Again, 

981
01:20:46,450 --> 01:20:48,450
we're drawing from HTML's rules
there.

982
01:20:53,215 --> 01:20:55,215
A set of hints or suggestions 
to the renderer, which might be

983
01:20:55,215 --> 01:20:57,215
used .

984
01:20:59,723 --> 01:21:02,820
In Hokum's proposal, authors 
and publishers have stylistic 

985
01:21:02,820 --> 01:21:04,928
influence without resorting to 
page description languages. 

986
01:21:04,928 --> 01:21:08,036
That's called out specifically.
We're not giving us full 

987
01:21:08,036 --> 01:21:11,640
control. Only the ability to 
provide some

988
01:21:13,550 --> 01:21:17,158
influence. 
And this uses the same 

989
01:21:17,158 --> 01:21:19,158
resilient logic as HTML

990
01:21:21,766 --> 01:21:23,766
. And we can see that, again, 
did I leave that tab open?

991
01:21:23,975 --> 01:21:25,975
I did not. Let's go back to it.

992
01:21:29,599 --> 01:21:31,599
In CSS, I've done the same 
thing. Calling colors that 

993
01:21:31,599 --> 01:21:33,599
don't exist.

994
01:21:34,425 --> 01:21:36,735
Oh, my I must have -- that 
became content.

995
01:21:42,146 --> 01:21:44,146
I'm using colors that don't 
exist.

996
01:21:45,447 --> 01:21:47,550
I'm useing entire declarations 
that don't exist. 

997
01:21:47,550 --> 01:21:49,550
Selectors that don't exist.

998
01:21:51,054 --> 01:21:53,054
Everything can just

999
01:21:53,862 --> 01:21:56,472
be ignored and it's fine. 
That's how CSS is designed. We 

1000
01:21:56,472 --> 01:21:58,472
can be ignored.

1001
01:22:00,175 --> 01:22:02,175
And this is the reason that the
default overflow is visible.

1002
01:22:04,687 --> 01:22:07,894
If we get cocky and make a box 
too small for our text, 

1003
01:22:07,894 --> 01:22:12,301
browsers will try to bail us 
out. Not because it's the 

1004
01:22:12,301 --> 01:22:14,301
best-looking solution, but 
because the web will

1005
01:22:15,401 --> 01:22:17,401
try to protect content whenever

1006
01:22:18,407 --> 01:22:21,815
it can, browsers are helping us
out here. 

1007
01:22:21,815 --> 01:22:23,815
This is another design 
principle of the W3C.

1008
01:22:24,117 --> 01:22:27,620
Content should be viewable and 
accessible by default. And the 

1009
01:22:27,620 --> 01:22:29,620
browser ensures that's the case
unless

1010
01:22:29,620 --> 01:22:32,333
we go in and mess it up. 
Indesign doesn't have to worry 

1011
01:22:32,333 --> 01:22:34,333
about

1012
01:22:34,333 --> 01:22:36,838
this. Accidental overflow can 
be found and fixed before we 

1013
01:22:36,838 --> 01:22:38,838
hit publish or after

1014
01:22:38,838 --> 01:22:41,444
we get a proof and fix it. 
And then, once it's fixed, it 

1015
01:22:41,444 --> 01:22:43,444
stays the way we designed it. 
It's not going to change.

1016
01:22:43,444 --> 01:22:47,659
It's not going to move. But 
we're doing graphic design of 

1017
01:22:47,659 --> 01:22:49,659
unknown

1018
01:22:50,761 --> 01:22:52,761
content with unknown 
collaborators on an infinite 

1019
01:22:52,761 --> 01:22:56,577
and unknowable canvas across 
operating systems, interfaces, 

1020
01:22:56,577 --> 01:22:58,577
languages, writing modes.

1021
01:22:58,577 --> 01:23:00,577
It's absurd what we're trying 
to do here. What this language 

1022
01:23:00,577 --> 01:23:02,577
is trying to accomplish. 

1023
01:23:03,962 --> 01:23:06,462
I don't know any other tool 
that is trying to do this in 

1024
01:23:06,462 --> 01:23:08,462
design.

1025
01:23:09,071 --> 01:23:12,366
There are too many variables to
consider. The point of CSS is 

1026
01:23:12,366 --> 01:23:14,366
to make it so we don't

1027
01:23:14,366 --> 01:23:16,366
have to worry about all of 
them. 

1028
01:23:19,677 --> 01:23:21,677
We have We hand some of that 
over to the browser, that's why

1029
01:23:21,677 --> 01:23:23,677
CSS is a declarative language.

1030
01:23:23,677 --> 01:23:25,677
We literally write our hints as
declarations of property and 

1031
01:23:25,677 --> 01:23:27,677
value.

1032
01:23:28,678 --> 01:23:31,774
And some of those can seem like
simple concepts, the width of a

1033
01:23:31,774 --> 01:23:33,774
box, 500

1034
01:23:34,781 --> 01:23:37,085
pixels, some are more abstract.
Wrapping text so it looks 

1035
01:23:37,085 --> 01:23:39,085
pretty, whatever that means. 

1036
01:23:42,084 --> 01:23:44,084
Even the concepts that

1037
01:23:44,785 --> 01:23:48,084
seem simple, hide a deeper 
complexity. Should the box be 

1038
01:23:48,084 --> 01:23:50,982
smaller on a higher resolution?
What do we mean by a pixel?

1039
01:23:54,181 --> 01:23:56,181
And how does the unit respond 
to zooming in or out?

1040
01:23:58,891 --> 01:24:00,891
And are we talking about the 
width of the content where the 

1041
01:24:00,891 --> 01:24:02,891
padding and border are 
additional to that width?

1042
01:24:03,290 --> 01:24:06,885
Or the width of the whole box 
with the borders and padding? 

1043
01:24:06,885 --> 01:24:08,885
There's not one universal 
answer.

1044
01:24:08,885 --> 01:24:11,783
It depends on what we're doing.
And maybe we really don't want 

1045
01:24:11,783 --> 01:24:13,783
the width at all, we're 
thinking about the in line 

1046
01:24:13,783 --> 01:24:15,783
size. The size available to a 
line of text.

1047
01:24:19,994 --> 01:24:21,994
Or maybe we should be sizing 
the box based

1048
01:24:22,667 --> 01:24:27,064
on its contents, the min size 
or max size. 

1049
01:24:27,064 --> 01:24:29,064
Or the size of a character in 
the font we're using, or

1050
01:24:30,163 --> 01:24:32,163
based on context, parent

1051
01:24:33,254 --> 01:24:35,254
element, viewport, container, 
some combination of those, the 

1052
01:24:35,254 --> 01:24:37,254
minimum of two values.

1053
01:24:39,045 --> 01:24:42,252
Everything in CSS is based on 
this constant back and forth, 

1054
01:24:42,252 --> 01:24:44,252
context pushing in, defining 
the

1055
01:24:45,351 --> 01:24:47,351
space variable, and content 
pushing out, taking up space, 

1056
01:24:47,351 --> 01:24:49,351
and

1057
01:24:49,351 --> 01:24:52,178
we're trying to make those two 
always work together. 

1058
01:24:52,178 --> 01:24:54,178
How do we ensure that our 
content will fit

1059
01:24:54,272 --> 01:24:57,663
any container that we put it 
in? We can't. We don't have all

1060
01:24:57,663 --> 01:24:59,663
of that information.

1061
01:25:00,951 --> 01:25:02,951
We don't know but the browser 
does have that information. 

1062
01:25:04,828 --> 01:25:07,918
So if we want this power, we 
have to give up some control . 

1063
01:25:07,918 --> 01:25:13,100
The most useful parts
of CSS express this kind of 

1064
01:25:13,100 --> 01:25:16,712
abstract behavior, letting the 
browser work out the details. 

1065
01:25:16,712 --> 01:25:18,712
If we can avoid touching it, we
should. 

1066
01:25:18,715 --> 01:25:22,808
The browser knows more than we 
do. So, we're using an 

1067
01:25:22,808 --> 01:25:26,014
expressive language, not 
describing the page in step by 

1068
01:25:26,014 --> 01:25:28,014
step de

1069
01:25:28,422 --> 01:25:31,717
tail, but expressing high-level
concepts. Our job is poetic, 

1070
01:25:31,717 --> 01:25:33,717
providing subtext

1071
01:25:34,812 --> 01:25:37,830
for the browser, no the just 
the resulting style, but the 

1072
01:25:37,830 --> 01:25:42,905
purpose of a style choice. And 
units are great for this. 

1073
01:25:42,905 --> 01:25:45,110
And it's why CSS has so many 
units because they help convey 

1074
01:25:45,110 --> 01:25:47,110
this meaning and intent.

1075
01:25:48,607 --> 01:25:52,108
So, 1em and 16 pixels may in 
some cases by default look the 

1076
01:25:52,108 --> 01:25:54,108
same.

1077
01:25:54,367 --> 01:25:56,367
But they have very different 
meanings.

1078
01:25:58,624 --> 01:26:01,426
They adapt differently in 
different context. 

1079
01:26:01,426 --> 01:26:03,426
So our job is not to make it 
look good on my device.

1080
01:26:06,130 --> 01:26:08,130
But to make sure it adapts to 
different contexts as needed.

1081
01:26:11,632 --> 01:26:13,632
Adapting to unexpected changes 
in the

1082
01:26:13,632 --> 01:26:15,632
context. Similar with layout 
methods.

1083
01:26:18,632 --> 01:26:20,632
Flex and grid can give us the 
same result in a static 

1084
01:26:20,632 --> 01:26:22,719
setting. But they move 
differently. They behave 

1085
01:26:22,719 --> 01:26:26,908
differently. 
It's useful to learn both 

1086
01:26:26,908 --> 01:26:28,908
because they're going to

1087
01:26:30,114 --> 01:26:32,114
act differently in different 
contexts.

1088
01:26:34,421 --> 01:26:36,421
Even when we can get the same 
result, they have different 

1089
01:26:36,421 --> 01:26:38,421
meanings, and that's worth 
paying attention to.

1090
01:26:39,014 --> 01:26:41,014
We're trying to express more 
meaning with fewer constraints.

1091
01:26:43,915 --> 01:26:45,915
Expressing our intent clearly 
using hints and suggestions for

1092
01:26:45,915 --> 01:26:47,915
the browser.

1093
01:26:50,227 --> 01:26:52,227
So, to me, this meme, the CSS 
is awesome box breaking meme.

1094
01:26:55,154 --> 01:26:57,154
It actually perfectly captures 
what is awesome about

1095
01:26:58,356 --> 01:27:01,457
CSS and how much can go wrong 
when we try to control things 

1096
01:27:01,457 --> 01:27:03,457
that

1097
01:27:03,557 --> 01:27:05,557
we shouldn't necessarily 
control. When we add too many 

1098
01:27:05,557 --> 01:27:07,557
constraints at once. 

1099
01:27:09,058 --> 01:27:11,058
So how can we loosen our grip 
on this?

1100
01:27:18,765 --> 01:27:20,765
There are several things we can
do.

1101
01:27:25,867 --> 01:27:27,867
We could change

1102
01:27:29,273 --> 01:27:31,658
the -- we could remove the 
width and height constraints . 

1103
01:27:31,658 --> 01:27:33,658
And oh, we could keep that font
size.

1104
01:27:34,357 --> 01:27:37,657
Let's see. Yeah, we could -- 
the height's not going to do 

1105
01:27:37,657 --> 01:27:39,657
much in this case,

1106
01:27:39,657 --> 01:27:41,657
but the width there, that's 
going to help. 

1107
01:27:43,268 --> 01:27:46,474
We could even say the min width
is min content and otherwise, 

1108
01:27:46,474 --> 01:27:48,474
we leave the max height and 
width.

1109
01:27:51,582 --> 01:27:53,582
We could change this to

1110
01:27:53,682 --> 01:27:57,082
overflow, wrap break word. We 
could play with hyphens, or we

1111
01:28:00,392 --> 01:28:03,001
could, yeah, if we're going to 
break word there, we want to 

1112
01:28:03,001 --> 01:28:06,296
get rid of the max height. We 
could decide if we want the 

1113
01:28:06,296 --> 01:28:08,296
height to move or the width to 
move.

1114
01:28:08,296 --> 01:28:10,296
We can change overflow to clip 
or scroll.

1115
01:28:15,877 --> 01:28:17,877
Get all sorts of different ways
that we can mess with this box.

1116
01:28:19,481 --> 01:28:22,405
I mean, I think the most fun is
just, there we go . CSS is rad.

1117
01:28:24,810 --> 01:28:26,810
That fits perfectly in our box.

1118
01:28:36,038 --> 01:28:38,038
Yeah, so I love that meme for 
the wrong reasons.

1119
01:28:40,235 --> 01:28:42,235
To avoid harm, we don't want to
describe a static

1120
01:28:43,846 --> 01:28:46,940
page but express a design 
vision through hints and 

1121
01:28:46,940 --> 01:28:48,940
suggestions, help the browser

1122
01:28:50,147 --> 01:28:52,147
understand the constraints that
are important for our de sign.

1123
01:28:54,650 --> 01:28:56,650
So that when things change, 
browsers can adapt

1124
01:28:58,856 --> 01:29:01,253
to -- can adapt our design to 
those changes.

1125
01:29:04,454 --> 01:29:06,454
We're designing systems, in 
facts I would say cascade

1126
01:29:07,953 --> 01:29:09,953
ing style sheet is a designing 
system, it's a set of guides 

1127
01:29:09,953 --> 01:29:11,953
for maintaining cohesive design
across a variety of contexts. 

1128
01:29:14,881 --> 01:29:16,881
It's the kind of design system 
that a browser can read and do 

1129
01:29:16,881 --> 01:29:18,881
something with.

1130
01:29:19,596 --> 01:29:22,885
To avoid harm, we use a light 
touch. We define the outer 

1131
01:29:22,885 --> 01:29:26,090
boundaries, the constraints of 
our design, rather than every 

1132
01:29:26,090 --> 01:29:28,090
little detail.

1133
01:29:29,690 --> 01:29:33,099
We provide hints that help the 
browser understand our goals 

1134
01:29:33,099 --> 01:29:35,099
that let the browser take care 
of the details. 

1135
01:29:38,297 --> 01:29:40,297
This is our job as designers, 
design engineers, whatever we 

1136
01:29:40,297 --> 01:29:42,297
want to call ourselves.

1137
01:29:43,500 --> 01:29:46,715
Everything else in CSS is built
around this political vision to

1138
01:29:46,715 --> 01:29:48,715
protect the content, protect 
the

1139
01:29:49,926 --> 01:29:51,926
user, and our first 
responsibility is not to break 

1140
01:29:51,926 --> 01:29:53,926
that . 

1141
01:29:53,926 --> 01:29:58,035
Thanks. 
â‰« MIKE: That was incredible.

1142
01:30:00,846 --> 01:30:02,846
You just blew my mind.

1143
01:30:04,344 --> 01:30:07,646
I think that, like, just that 
mind set of writing CSS

1144
01:30:13,357 --> 01:30:17,515
hinting at the browser, rather 
than telling it what to do. It 

1145
01:30:17,515 --> 01:30:19,515
makes doing websites so much 
more enjoyable . 

1146
01:30:19,515 --> 01:30:21,515
â‰« MIRIAM: It does. Yeah, I feel
the same way.

1147
01:30:26,808 --> 01:30:28,808
I think for me, it's kind of a 
fun -- I work in theater, too, 

1148
01:30:28,808 --> 01:30:30,808
I think there's a fun sort of 
like -- it's different in every

1149
01:30:30,808 --> 01:30:32,808
venue, different on every 
night.

1150
01:30:35,017 --> 01:30:37,017
That sort of, yeah, the 
performance, there's

1151
01:30:38,219 --> 01:30:40,905
the script and the performance 
of the script. 

1152
01:30:40,905 --> 01:30:42,905
â‰« MIKE: And your point about it
being poetry.

1153
01:30:48,197 --> 01:30:51,287
That's a fantastic analogy, as 
web designers, we're writing 

1154
01:30:51,287 --> 01:30:53,287
poetry, we're not

1155
01:30:54,495 --> 01:30:56,495
designing pixel perfect layouts
on screens. Very cool.

1156
01:31:00,098 --> 01:31:02,098
And I think the other thing I'm
taking away from that talk is

1157
01:31:03,184 --> 01:31:06,790
just what a miracle CSS is with
its ambition that it actually 

1158
01:31:06,790 --> 01:31:08,790
works and -- 

1159
01:31:10,484 --> 01:31:12,484
â‰« Yeah 
â‰« MIRIAM: Yeah, and look 

1160
01:31:12,484 --> 01:31:14,484
through that original document.

1161
01:31:14,870 --> 01:31:16,870
The ambition was so much 
higher, even.

1162
01:31:18,154 --> 01:31:20,154
They were imagining wild media 
queries right from the 

1163
01:31:20,154 --> 01:31:22,154
beginning. So media queries 
didn't actually land in 

1164
01:31:22,154 --> 01:31:24,154
browsers for another

1165
01:31:26,028 --> 01:31:28,028
five or six years, but they 
were part of the original 

1166
01:31:28,028 --> 01:31:31,044
design of it . 
And there was also -- there was

1167
01:31:31,044 --> 01:31:33,044
this whole thing about the 
collaboration was even more 

1168
01:31:33,044 --> 01:31:36,136
intense. So, you could say 
instead of

1169
01:31:39,126 --> 01:31:43,148
a binary importance, importance
was a percentage , so you could

1170
01:31:43,148 --> 01:31:46,757
want something 60 % importance,
and somebody else could want 

1171
01:31:46,757 --> 01:31:48,757
something 40% importance

1172
01:31:50,365 --> 01:31:52,365
, and then, the browser would 
give you a weighted average of 

1173
01:31:52,365 --> 01:31:54,365
the two results.

1174
01:31:54,365 --> 01:31:56,561
So you would get a font size 
between the two weighted based 

1175
01:31:56,561 --> 01:31:58,561
on their importance. 

1176
01:32:00,545 --> 01:32:02,545
That became a little absurd if 
you, like, you

1177
01:32:03,748 --> 01:32:05,748
request yellow, I request blue,
and were we're going to get a 

1178
01:32:05,748 --> 01:32:07,748
weighted average of those.

1179
01:32:09,248 --> 01:32:11,761
I don't know if that's what 
anybody wants, but yeah, a lot 

1180
01:32:11,761 --> 01:32:13,761
of real cool ideas in there.

1181
01:32:14,264 --> 01:32:17,658
â‰« MIKE: It's like hitting that 
balance of giving

1182
01:32:20,651 --> 01:32:22,962
web developers enough control 
but not too much , it's -- 

1183
01:32:23,562 --> 01:32:25,562
â‰« MIRIAM: Right. 
â‰« MIKE: Such a delicate balance

1184
01:32:25,562 --> 01:32:27,562
.

1185
01:32:28,270 --> 01:32:30,572
Yeah, I'm going to rewatch that
talk, it was amazing. Thank you

1186
01:32:30,572 --> 01:32:32,572
so much for joining us today, 
Miriam. 

1187
01:32:32,572 --> 01:32:34,572
â‰« MIRIAM: Thank you. 

1188
01:32:34,572 --> 01:32:36,572
â‰« MIKE: All right. What was 
everyone's favorite part of 

1189
01:32:36,572 --> 01:32:38,572
that talk?

1190
01:32:39,774 --> 01:32:41,774
Yeah, I'm seeing a lot of 
claps.

1191
01:32:43,672 --> 01:32:45,778
Yeah, reach out to Miriam, I 
think it was a Twitter link? X,

1192
01:32:45,778 --> 01:32:47,778
I should say.

1193
01:32:48,277 --> 01:32:50,277
If you want to find out and 
talk about it more.

1194
01:32:54,178 --> 01:32:57,970
So we've got our next speaker 
lined up. Paul Everett who is 

1195
01:32:57,970 --> 01:32:59,975
going to be talking about 11ty 
and large project tooling. 

1196
01:33:03,773 --> 01:33:08,083
Paul is a Python web developer 
advocate at Jet Brands

1197
01:33:11,391 --> 01:33:13,391
, desperately trying to put the

1198
01:33:13,391 --> 01:33:15,391
web back into the web.

1199
01:33:18,376 --> 01:33:21,581
Paul has bootstrap Python 
Software Foundation, prior to 

1200
01:33:21,581 --> 01:33:23,581
that, Paul was an officer in 
the US Navy

1201
01:33:27,395 --> 01:33:29,395
. 

1202
01:33:37,818 --> 01:33:39,921
[ Applause ] 
Welcome, Paul, great to have 

1203
01:33:39,921 --> 01:33:42,635
you on. 
â‰« PAUL: Thanks a lot, Mike.

1204
01:33:44,844 --> 01:33:47,064
What a talk that was by Miriam.
â‰« MIKE: Yeah, mind blowing. 

1205
01:33:50,263 --> 01:33:52,263
â‰« PAUL: It's one of those 
perfect combinations of the 

1206
01:33:52,263 --> 01:33:54,263
first principles that we all 
need to get back to.

1207
01:33:55,867 --> 01:33:57,867
And, unfortunately, a beautiful
slide deck, as well.

1208
01:34:02,261 --> 01:34:04,261
Mine shall not be quite as 
attractive. 

1209
01:34:06,079 --> 01:34:08,079
â‰« MIKE: Looking forward to 
this, Paul, over to you. 

1210
01:34:08,079 --> 01:34:12,099
â‰« PAUL: Yeah, sure. And I'll go
ahead and proceed. I'm Paul 

1211
01:34:12,099 --> 01:34:14,099
Everett, developer advocate as 
Mike mentioned.

1212
01:34:16,202 --> 01:34:18,202
We're going to talk about using
11ty on larger

1213
01:34:19,405 --> 01:34:22,610
projects, but first, I wanted 
to give a big thank you to all 

1214
01:34:22,610 --> 01:34:24,610
of you to you,

1215
01:34:24,610 --> 01:34:27,219
especially to Zach for this 
conference. It's like you 

1216
01:34:27,219 --> 01:34:29,219
crawled inside my brain and 
found the

1217
01:34:30,423 --> 01:34:32,423
exact speakers and the exact 
topics that I would be 

1218
01:34:32,423 --> 01:34:34,423
interested in seeing. 

1219
01:34:37,306 --> 01:34:39,306
And not only that, Zach created
this community

1220
01:34:39,306 --> 01:34:41,306
around 11ty, which is 
fantastic.

1221
01:34:43,815 --> 01:34:46,629
I'm just such a supporter and 
advocate for everything he's 

1222
01:34:46,629 --> 01:34:48,629
doing.

1223
01:34:50,126 --> 01:34:52,126
And like was mentioned before, 
trying to put the web back in 

1224
01:34:52,126 --> 01:34:54,126
the web. So let's begin.

1225
01:34:54,126 --> 01:34:57,330
We have a website called the

1226
01:35:01,101 --> 01:35:03,101
JetBrains guide.

1227
01:35:06,207 --> 01:35:08,207
It has content, we've been 
working on it for a while

1228
01:35:08,215 --> 01:35:11,517
while with a big friend of 
11ty. And when I started this, 

1229
01:35:11,517 --> 01:35:13,517
in 2018

1230
01:35:14,619 --> 01:35:17,428
, I used Gatsby. No, seriously,
please, stay.

1231
01:35:24,642 --> 01:35:26,642
We all make decisions, just 
like getting beat up on the

1232
01:35:27,742 --> 01:35:29,742
playground as a kid, you can 
learn from your mistakes, but 

1233
01:35:29,742 --> 01:35:31,742
we also can learn some of the 
things that can take us 

1234
01:35:31,742 --> 01:35:33,742
forward.

1235
01:35:33,742 --> 01:35:37,045
I learned a lot about modern 
web, good and the bad. 

1236
01:35:37,045 --> 01:35:39,045
Learned a lot about I come from

1237
01:35:40,150 --> 01:35:42,150
a CMS background, I learned a 
lot about modern CMSs.

1238
01:35:44,149 --> 01:35:47,956
And there was a point when 
Collin came to me and said, you

1239
01:35:47,956 --> 01:35:51,055
know, really everyone hates you
about this Gatsby thing and so,

1240
01:35:51,055 --> 01:35:53,055
you really got to make a change
here.

1241
01:35:54,844 --> 01:35:58,143
Let's go to 11ty. But we wanted
to keep the developer 

1242
01:35:58,143 --> 01:36:01,147
experience we had from the 
tooling . We wanted to keep 

1243
01:36:01,147 --> 01:36:03,147
some of the author experience 
that we had. 

1244
01:36:04,448 --> 01:36:06,448
So we went away and added some 
of the

1245
01:36:07,667 --> 01:36:09,667
things to 11ty and 
realistically, that's the talk 

1246
01:36:09,667 --> 01:36:11,667
for today, what did we do with 
11ty to support things that

1247
01:36:14,840 --> 01:36:16,840
you might want to do with a 
Gatsby

1248
01:36:18,242 --> 01:36:20,848
. Things you might want to do 
with a CMS. Things you might 

1249
01:36:20,848 --> 01:36:22,848
want to do with a larger 
system. 

1250
01:36:25,953 --> 01:36:27,953
What do I mean?

1251
01:36:29,255 --> 01:36:31,255
We rolled out a codebase that 
used typescript and used a 

1252
01:36:31,255 --> 01:36:33,255
templating language, TSX.

1253
01:36:33,569 --> 01:36:37,371
JSX, TSX. As an 11ty template

1254
01:36:41,080 --> 01:36:43,080
ing language, not as a browser 
rendered templating language. 

1255
01:36:45,888 --> 01:36:47,888
We also added in, I like to do 
tests

1256
01:36:48,987 --> 01:36:50,987
-first development, we added in
V test, and friends, the 

1257
01:36:50,987 --> 01:36:52,987
friends we'll cover in a 
moment.

1258
01:36:54,553 --> 01:36:57,760
And some other stuff I hope 
we'll have time to get to about

1259
01:36:57,760 --> 01:37:00,969
improving the author experience
with automatically generating 

1260
01:37:00,969 --> 01:37:02,969
JSON schema, and then, one of 
the things I kind

1261
01:37:04,070 --> 01:37:06,277
of was intrigued about from 
Gatsby was its GraphQL query 

1262
01:37:06,277 --> 01:37:08,277
model. 

1263
01:37:10,873 --> 01:37:12,873
One little point, if you're 
ever doing GraphQL

1264
01:37:13,974 --> 01:37:17,071
and you -- and Gatsby, and you 
think you want to do custom 

1265
01:37:17,071 --> 01:37:19,071
GraphQL schema extensions, 
don't. 

1266
01:37:19,681 --> 01:37:21,681
All right.

1267
01:37:24,787 --> 01:37:27,997
The real philosophy P behind 
this is, doing your web 

1268
01:37:27,997 --> 01:37:29,997
development in small little 
chunks so you can stay in the 

1269
01:37:29,997 --> 01:37:33,069
flow. And you're not like doing
a whole build with console

1270
01:37:36,171 --> 01:37:38,171
logs and poking around hoping 
to stumbling across the problem

1271
01:37:38,171 --> 01:37:40,590
that you're having. 
Instead, it feels like 

1272
01:37:40,590 --> 01:37:42,590
development with joy.

1273
01:37:46,097 --> 01:37:48,097
As I go through this, you don't
have to follow

1274
01:37:49,206 --> 01:37:53,011
along too closely, I'm going to
go pretty fast through the how 

1275
01:37:53,011 --> 01:37:55,011
and try to get more to the 
demos that show a little bit 

1276
01:37:55,011 --> 01:37:57,011
more of the why . 
And the reason you don't have 

1277
01:37:57,011 --> 01:37:59,011
to is because we put up

1278
01:37:59,740 --> 01:38:01,740
an 8-part tutorial with text 
and code and

1279
01:38:03,980 --> 01:38:05,980
videos walking through each one
of the steps that I'm going to 

1280
01:38:05,980 --> 01:38:07,980
go through a little bit today.

1281
01:38:09,792 --> 01:38:11,792
I'll take a look over here and 
see if there's anything I need 

1282
01:38:11,792 --> 01:38:13,792
to catch up on in comments, as 
well. 

1283
01:38:15,605 --> 01:38:17,605
With that in mind, let's do a 
quick tour of how we got to 

1284
01:38:17,605 --> 01:38:19,605
tooling.

1285
01:38:20,229 --> 01:38:22,229
For 11ty. First in the package 
.

1286
01:38:25,439 --> 01:38:27,646
json as Zach mentioned in the 
opening remarks, we started 

1287
01:38:27,646 --> 01:38:29,646
with ESM modules.

1288
01:38:29,646 --> 01:38:31,646
This was something in 3. 0 that
we got when we did this in 2.

1289
01:38:34,494 --> 01:38:36,494
0, we had to stick with 
CommonJS. 

1290
01:38:39,495 --> 01:38:42,600
The hero of the show is a 
package called TS X, and it is 

1291
01:38:42,600 --> 01:38:44,600
a layer on top of ES build

1292
01:38:46,008 --> 01:38:48,008
that gives you a bunch of 
sensible defaults so that you 

1293
01:38:48,008 --> 01:38:50,008
don't have to think about it so
much, which is good because I 

1294
01:38:50,008 --> 01:38:52,008
don't really understand a lot 
of these decisions. 

1295
01:38:54,319 --> 01:38:56,319
And it winds up feeling like a 
Node replacement.

1296
01:39:00,033 --> 01:39:02,033
The command node, obviously, 
it's running node under the 

1297
01:39:02,033 --> 01:39:04,033
hood,

1298
01:39:04,033 --> 01:39:06,033
but you run TSX instead and you
inherit all of this stuff.

1299
01:39:08,856 --> 01:39:12,465
Then, we needed something to 
render a VDOM, I guess, is the 

1300
01:39:12,465 --> 01:39:14,465
best way to put it

1301
01:39:15,074 --> 01:39:17,379
into a string, and this is the 
package we used. It had a 

1302
01:39:17,379 --> 01:39:19,379
number of things that we really
needed. 

1303
01:39:19,796 --> 01:39:21,796
Versus a package we were using 
before.

1304
01:39:23,313 --> 01:39:25,313
What this means, we're not 
using React anywhere.

1305
01:39:29,423 --> 01:39:31,423
There's no React, Preact,

1306
01:39:34,228 --> 01:39:36,228
this package renders or JSX 
into a string.

1307
01:39:39,542 --> 01:39:41,542
And then for the component 
driven development workflow, we

1308
01:39:41,542 --> 01:39:43,542
like to sit in tests . So V

1309
01:39:45,550 --> 01:39:48,057
test is a wonderful package and
it's super speedy. Friends came

1310
01:39:48,057 --> 01:39:51,968
along for the ride with V test.
A browser called Happy DOM and

1311
01:39:55,073 --> 01:39:57,073
testing library that has a 
philosophy of testing your site

1312
01:39:57,073 --> 01:39:59,073
the way people use it.

1313
01:40:00,286 --> 01:40:02,286
In an accessibility oriented 
way with rules and stuff like 

1314
01:40:02,286 --> 01:40:04,286
that. 

1315
01:40:04,406 --> 01:40:08,110
And then, finally, in the 
package. json, these are the 

1316
01:40:08,110 --> 01:40:13,123
two build scripts. You notice 
the TSX in front and the

1317
01:40:14,930 --> 01:40:16,930
config file is written in 
typescript.

1318
01:40:18,232 --> 01:40:20,232
I won't go into TS config 
because I frankly don't 

1319
01:40:20,232 --> 01:40:22,232
understand it that way.

1320
01:40:23,231 --> 01:40:26,336
But typescript has support for 
JSX, so we turn it on with the 

1321
01:40:26,336 --> 01:40:28,336
misnamed value React JSX.

1322
01:40:29,451 --> 01:40:33,060
It doesn't actually have any 
React. 

1323
01:40:33,060 --> 01:40:36,567
And then, second, pointing it 
at our package, the JSX async

1324
01:40:39,670 --> 01:40:41,670
runtime which then teaches the 
compiler where everything is so

1325
01:40:41,670 --> 01:40:43,670
we don't have to manually 
import.

1326
01:40:47,930 --> 01:40:51,442
Here is our 11ty config file. 
11ty has support out of the box

1327
01:40:51,442 --> 01:40:53,442
for JavaScript templates.

1328
01:40:54,756 --> 01:40:57,169
And what we want to do is say, 
these file extensions are 

1329
01:40:57,169 --> 01:40:59,169
actually JavaScript.

1330
01:41:00,474 --> 01:41:02,474
Even though it says jsx, 
THOECHB it says ts.

1331
01:41:05,478 --> 01:41:07,478
Because that tsx package is 
going to transparentally 

1332
01:41:07,478 --> 01:41:09,478
convert all of that into 
JavaScript.

1333
01:41:13,800 --> 01:41:15,800
Finally, in the config, this 
was the big breakthrough 

1334
01:41:15,800 --> 01:41:17,800
eleventy.

1335
01:41:18,704 --> 01:41:21,911
config gives us a plug point to
do transforms, and in one 

1336
01:41:21,911 --> 01:41:23,911
central location instead of 
doing it throughout the code, 

1337
01:41:23,911 --> 01:41:25,911
we were able to transform a jsx
node into a

1338
01:41:29,522 --> 01:41:31,522
string asynchronously, and 
then, just for fun, we 

1339
01:41:31,522 --> 01:41:33,522
centralized the placement of

1340
01:41:34,625 --> 01:41:36,625
a dot. 

1341
01:41:38,422 --> 01:41:43,027
One last step, we wanted to do 
testing and so in vtest, it has

1342
01:41:43,027 --> 01:41:46,234
support for the fake browsers, 
out of the box, it supports 

1343
01:41:46,234 --> 01:41:48,234
happy dom, this was the line 
that we put in to get our good 

1344
01:41:48,234 --> 01:41:52,624
testing. I'll take a look over.
And see, no, not a lot

1345
01:41:53,220 --> 01:41:56,129
of dependencies. We removed 
dependencies, in fact, as we 

1346
01:41:56,129 --> 01:41:58,129
went along.

1347
01:41:59,026 --> 01:42:01,026
OK. Over to some demos.

1348
01:42:03,622 --> 01:42:07,321
I'll go ahead and switch over 
to...  the sample repository, 

1349
01:42:07,321 --> 01:42:09,321
and then, I'll go back to our

1350
01:42:09,332 --> 01:42:12,918
repository to show some of this
in action. 

1351
01:42:12,918 --> 01:42:14,918
I'm going to show you an 
end-to-end of the smallest 

1352
01:42:14,918 --> 01:42:16,918
possible thing without a lot of
extra concepts.

1353
01:42:19,420 --> 01:42:22,827
Here is the home page or my 
site, and you see that it's got

1354
01:42:22,827 --> 01:42:25,922
layout, front matter, 
everything we understand, but 

1355
01:42:25,922 --> 01:42:27,922
because I've switched over to 
this tooling

1356
01:42:29,016 --> 01:42:31,016
friendly approach, I don't have
to think too much about files

1357
01:42:33,228 --> 01:42:36,720
anymore, and I can think about 
symbols. 

1358
01:42:36,720 --> 01:42:38,720
And so every page on the site 
has a main layout, and I can

1359
01:42:38,937 --> 01:42:42,042
navigate to this main layout. 
This is what the file looks 

1360
01:42:42,042 --> 01:42:44,042
like.

1361
01:42:45,336 --> 01:42:47,336
If you've done any of the ESM 
stuff, this line will look 

1362
01:42:47,336 --> 01:42:49,336
familiar to you.

1363
01:42:49,443 --> 01:42:51,443
You need to export a named 
export called render. 

1364
01:42:54,341 --> 01:42:57,442
I rename everything so that I 
can have similar bombsymbols so

1365
01:42:57,442 --> 01:42:59,442
everything isn't

1366
01:42:59,442 --> 01:43:02,988
named render. I've got a 
function called main layout. 

1367
01:43:02,988 --> 01:43:06,488
This might look a little 
React-y to you. And what it's 

1368
01:43:06,488 --> 01:43:08,488
doing is saying, hey, I'm going
to

1369
01:43:10,698 --> 01:43:12,698
be passed these two things, I 
know what I'm going to get 

1370
01:43:12,698 --> 01:43:14,698
passed,

1371
01:43:14,698 --> 01:43:17,194
and any caller can get 
auto-complete for this . 

1372
01:43:17,194 --> 01:43:19,194
You can get auto-complete 
because we

1373
01:43:20,806 --> 01:43:22,806
do props and prompts in a 
typescript type.

1374
01:43:23,911 --> 01:43:27,212
And now, tooling can help me. I
can mouse over this and see 

1375
01:43:27,212 --> 01:43:29,212
what is the

1376
01:43:29,212 --> 01:43:31,414
contract that needs to be 
obeyed? And what I can 

1377
01:43:31,414 --> 01:43:33,414
destructure from it?

1378
01:43:35,916 --> 01:43:37,916
I can get auto-complete, 
obviously.

1379
01:43:39,520 --> 01:43:42,720
I can get a squiggle if I make 
a mistake . I could even 

1380
01:43:42,720 --> 01:43:44,720
decide, no, really, I want this
to be

1381
01:43:44,720 --> 01:43:47,429
called "heading. " And 
everywhere in my project that 

1382
01:43:47,429 --> 01:43:49,429
uses that will

1383
01:43:50,530 --> 01:43:52,530
now use heading, including

1384
01:43:53,937 --> 01:43:55,937
the prompts because there's 
great tooling support for 

1385
01:43:55,937 --> 01:43:57,937
typescript. 
There's great tooling support 

1386
01:43:57,937 --> 01:44:01,545
for jsx, and if I don't like 
that, I undo it. And everything

1387
01:44:01,545 --> 01:44:03,545
in the universe goes back to 
what I had

1388
01:44:04,151 --> 01:44:07,452
before I did the refactoring. 
Again, this is stuff that 

1389
01:44:07,452 --> 01:44:09,452
people are familiar

1390
01:44:10,548 --> 01:44:12,548
with in the frontend

1391
01:44:13,645 --> 01:44:15,645
world, and we're getting the 
good parts of that while 

1392
01:44:15,645 --> 01:44:18,255
leaving the whole agenda of 
client-side rendering. 

1393
01:44:21,455 --> 01:44:23,455
I'm returning jsx instead of a 
template, I

1394
01:44:23,750 --> 01:44:27,050
get all of the stuff like 
auto-complete in here. And 

1395
01:44:27,050 --> 01:44:29,050
then, this is a fun one,

1396
01:44:30,461 --> 01:44:32,461
I'm showing -- writing my site 
in

1397
01:44:33,561 --> 01:44:35,866
a reusable component-driven 
fashion . So I do little units 

1398
01:44:35,866 --> 01:44:37,866
of increment.

1399
01:44:39,175 --> 01:44:41,175
And I can get auto-complete of 
my headings. 

1400
01:44:46,381 --> 01:44:48,381
And when I do the 
auto-complete, generates

1401
01:44:49,588 --> 01:44:51,588
the report for me, and I get 
all of the things that you 

1402
01:44:51,588 --> 01:44:53,588
would expect from good tooling.

1403
01:44:54,190 --> 01:44:57,392
I can then navigate to the 
heading, see how it's 

1404
01:44:57,392 --> 01:44:59,392
implemented, and then, I can do
the way I

1405
01:45:00,098 --> 01:45:02,098
do development, which is in a 
test.

1406
01:45:03,390 --> 01:45:06,489
And so, I'm working over here, 
I've got my test over here . 

1407
01:45:06,489 --> 01:45:08,489
And if I

1408
01:45:09,694 --> 01:45:12,998
changed this word to "Zach " 
and run this test, it's going

1409
01:45:16,504 --> 01:45:18,504
to fail, and I might be 
confused why it failed

1410
01:45:19,615 --> 01:45:22,720
. Well, I can go into the 
debugger, stop on this line, 

1411
01:45:22,720 --> 01:45:24,720
that's the first time

1412
01:45:26,127 --> 01:45:28,127
through, and I see, oh, yeah, 
duh, I passed in --

1413
01:45:29,331 --> 01:45:31,331
I didn't pass in tsx, I passed 
in Zach, that's why I ran into 

1414
01:45:31,331 --> 01:45:33,331
the problem. 

1415
01:45:35,035 --> 01:45:37,739
So that's a little bit of a run
through of the test-driven 

1416
01:45:37,739 --> 01:45:42,439
development approach on this. 
I'll look over here. And see. 

1417
01:45:42,439 --> 01:45:44,439
Some comments.

1418
01:45:44,938 --> 01:45:46,938
Hey, Collin, thank you for 
helping me out here.

1419
01:45:48,243 --> 01:45:52,556
I do like the minimum layout in
my IDE in here.

1420
01:45:55,755 --> 01:45:57,755
And with all of that in mind, 
here's the way I actually work.

1421
01:46:00,265 --> 01:46:02,387
I run vtest in watch mode. 
Because it's so fast. 

1422
01:46:05,394 --> 01:46:07,394
And I run it in watch mode 
under the debugger.

1423
01:46:08,697 --> 01:46:12,302
And so, I've got my entire 11ty
development that is running at 

1424
01:46:12,302 --> 01:46:14,302
all times

1425
01:46:14,302 --> 01:46:16,913
whenever I make a change. And 
so, if I fix

1426
01:46:20,233 --> 01:46:22,737
this, that's my turn around 
time. I didn't go to a browser 

1427
01:46:22,737 --> 01:46:27,651
and hit reload. I didn't run an
11ty build. 

1428
01:46:31,456 --> 01:46:33,456
In fact, if I wanted to, and 
I'm like, I'm confused here, I 

1429
01:46:33,456 --> 01:46:37,471
don't have a bug, I just don't 
know what's going on here. Set 

1430
01:46:37,471 --> 01:46:39,471
a break point, press space, and
you will stop there. 

1431
01:46:41,075 --> 01:46:43,075
And sometimes, 11ty hands me a 
lot of

1432
01:46:44,180 --> 01:46:47,283
data, a lot of surface area in 
page, a lot of surface area in 

1433
01:46:47,283 --> 01:46:49,283
data, and I get confused, I'm a
man of a certain age.

1434
01:46:49,692 --> 01:46:53,191
I just want to see what's 
available. And this is what I 

1435
01:46:53,191 --> 01:46:56,601
do to stop at a certain point 
in rendering and see what is 

1436
01:46:56,601 --> 01:46:58,601
available to me at that point. 

1437
01:46:58,605 --> 01:47:00,811
All right. I will continue.

1438
01:47:06,217 --> 01:47:08,217
Obviously, we want to see does 
this

1439
01:47:09,426 --> 01:47:11,426
thing actually render a 
template that can be used in a 

1440
01:47:11,426 --> 01:47:13,426
browser?

1441
01:47:15,634 --> 01:47:17,634
So after I've done all of my 
development, that's when I 

1442
01:47:17,634 --> 01:47:19,634
actually

1443
01:47:19,634 --> 01:47:22,241
go over to a browser and look 
at it . And, yes, actually,

1444
01:47:24,442 --> 01:47:27,734
it is a very nice size. It did 
render, it could use a little 

1445
01:47:27,734 --> 01:47:32,225
bit of help from Miriam on the 
styling, obviously. 

1446
01:47:32,225 --> 01:47:34,225
That's an end-to-end

1447
01:47:35,321 --> 01:47:37,321
tour of the minima with about 5
minutes

1448
01:47:38,529 --> 01:47:40,529
left, I'll take a look at what 
we're doing in our knowledge 

1449
01:47:40,529 --> 01:47:42,529
base . Feel free to ask any 
questions, Collin is show

1450
01:47:44,735 --> 01:47:46,735
runner with me on that project,
and he can answer anything over

1451
01:47:46,735 --> 01:47:48,735
there. 

1452
01:47:49,530 --> 01:47:52,627
I'm going to switch over to our
actual project . This is our 

1453
01:47:52,627 --> 01:47:54,627
knowledge base.

1454
01:47:55,328 --> 01:47:57,328
It's pretty big.

1455
01:47:58,623 --> 01:48:00,807
So this is all the content, or 
all the programming languages 

1456
01:48:00,807 --> 01:48:02,807
that JetBrain supports.

1457
01:48:07,307 --> 01:48:09,307
These are all of the components
that we have that are isolate

1458
01:48:10,714 --> 01:48:12,714
d and easy to test and stuff 
like that we can use wherever. 

1459
01:48:15,602 --> 01:48:17,602
And so, this is, again, test 
driven development

1460
01:48:18,699 --> 01:48:20,699
. What I'm going to do this 
time is I'm going to run all of

1461
01:48:20,699 --> 01:48:22,699
the tests in the entire site 
under the debugger.

1462
01:48:26,199 --> 01:48:28,199
Vtest will fire it up the first
time, it'll take a few seconds

1463
01:48:29,293 --> 01:48:31,293
to fire up the first time vtest
has gotten faster. I could 

1464
01:48:31,293 --> 01:48:33,293
speed this up. 

1465
01:48:34,195 --> 01:48:36,195
Once it's running, all of my 
tests pass, I have 131 tests.

1466
01:48:38,504 --> 01:48:41,302
And I make a mistake. Here is a
usage of a test. I'm calling 

1467
01:48:41,302 --> 01:48:43,302
the heading.

1468
01:48:43,982 --> 01:48:45,982
Passing in the two values. I 
make a mistake.

1469
01:48:48,577 --> 01:48:50,669
And then, my test no longer 
passes, I get a little squiggle

1470
01:48:50,669 --> 01:48:52,669
here.

1471
01:48:53,960 --> 01:48:55,960
I can mouse over it and get 
more information for exactly 

1472
01:48:55,960 --> 01:48:57,960
what the problem is. 

1473
01:48:59,046 --> 01:49:01,046
But that's a pretty fast turn 
around time under the debugger 

1474
01:49:01,046 --> 01:49:03,046
for working with your site.

1475
01:49:04,151 --> 01:49:06,151
And we never went to the 
browser, and we never did 

1476
01:49:06,151 --> 01:49:08,151
console log. 

1477
01:49:10,745 --> 01:49:12,745
The part that I wanted to 
finish with is the other stuff 

1478
01:49:12,745 --> 01:49:15,643
besides just developer 
experience. We also added some 

1479
01:49:15,643 --> 01:49:17,643
stuff from an authoring 
experience.

1480
01:49:19,544 --> 01:49:22,354
So if you were interested in 
leaving Gatsby, these are some 

1481
01:49:22,354 --> 01:49:24,354
of the kinds of things you 
might also be interested in. 

1482
01:49:30,753 --> 01:49:32,753
For example, I'm sitting in a 
markdown file.

1483
01:49:34,044 --> 01:49:36,044
This is actually the tutorial 
that we wrote for this 

1484
01:49:36,044 --> 01:49:38,044
conference . And I have front 
matter up here.

1485
01:49:42,156 --> 01:49:44,156
Well, my front matter actually 
has a schema.

1486
01:49:45,447 --> 01:49:47,447
And so, if I were to write 
author, I get auto-complete.

1487
01:49:51,545 --> 01:49:53,545
But I don't get autocomplete 
just of the keys, I

1488
01:49:55,352 --> 01:49:57,352
get auto-complete of the 
values, that is actually

1489
01:49:58,963 --> 01:50:02,964
i... y...

1490
01:50:04,364 --> 01:50:07,963
markdown file. PWE was the 
thing, it's in content

1491
01:50:11,069 --> 01:50:13,069
space, it's not in software 
space.

1492
01:50:13,576 --> 01:50:17,274
How are we doing that? 
We have a bunch of resources

1493
01:50:20,582 --> 01:50:22,689
that we define in typescript, 
and let me go to tip model.

1494
01:50:24,082 --> 01:50:27,973
Tip models, yeah. We define our
schemas in typescript.

1495
01:50:29,969 --> 01:50:31,969
Here's the schema for a tip.

1496
01:50:33,263 --> 01:50:35,263
And then, we use type box to 
convert that to a JSON schema 

1497
01:50:35,263 --> 01:50:37,263
we can enforce.

1498
01:50:39,821 --> 01:50:43,016
And then, every single time you
hit save, we rerun some

1499
01:50:46,012 --> 01:50:48,012
code that writes a JSON schema.

1500
01:50:48,314 --> 01:50:51,212
We dump all of the schemas to 
disk. And here's what the 

1501
01:50:51,212 --> 01:50:53,212
schema looks like. 

1502
01:50:55,709 --> 01:50:57,709
And so the IDE sees this, it 
sees that

1503
01:50:58,916 --> 01:51:00,916
these are all of the possible 
values, and we give an 

1504
01:51:00,916 --> 01:51:02,916
authoring experience where an 
author.

1505
01:51:03,821 --> 01:51:07,117
This was the thinking that 
killed us in Gatsby. You would 

1506
01:51:07,117 --> 01:51:09,117
put in a wrong value, and you

1507
01:51:09,117 --> 01:51:11,117
would fail.

1508
01:51:13,215 --> 01:51:15,215
And you would fail obscurely, 
and you would have no hope 

1509
01:51:15,215 --> 01:51:17,215
other than coming to me and 
getting me to look at your 

1510
01:51:17,215 --> 01:51:19,215
branch. 

1511
01:51:19,215 --> 01:51:21,602
We really wanted with the 
embrace of 11ty, we really 

1512
01:51:21,602 --> 01:51:23,602
wanted to give a better 
authoring experience on this.

1513
01:51:26,098 --> 01:51:28,098
Some other things we would like
to talk about at a later

1514
01:51:29,203 --> 01:51:31,704
date, things such as the 
content model that has plugable

1515
01:51:31,704 --> 01:51:33,704
resource types and the queries.

1516
01:51:33,805 --> 01:51:37,098
Zach is adding in 3. 0, more 
hook points that are exactly 

1517
01:51:37,098 --> 01:51:39,098
the hook points

1518
01:51:40,506 --> 01:51:42,506
we need for validation, for 
custom collections , and things

1519
01:51:42,506 --> 01:51:44,506
like that. 

1520
01:51:46,092 --> 01:51:48,092
And then, we also were 
confronted with something for 

1521
01:51:48,092 --> 01:51:50,092
client side rendering where we 
wanted to keep the templating 

1522
01:51:50,092 --> 01:51:52,100
that we had and had to do a 
work around for that.

1523
01:51:55,296 --> 01:51:57,296
With that in mind, this has 
been a wonderful experience for

1524
01:51:57,296 --> 01:51:59,296
us.

1525
01:51:59,296 --> 01:52:02,098
Any of you that are interested 
in moving from a larger system 

1526
01:52:02,098 --> 01:52:04,098
with all of this tooling, such 
as Gatsby,

1527
01:52:05,200 --> 01:52:08,102
over to 11ty, please reach out,
let's see what we can do 

1528
01:52:08,102 --> 01:52:13,102
working all of this stuff 
together. 

1529
01:52:13,102 --> 01:52:16,594
. 
â‰« MIKE: Thank you so much, 

1530
01:52:16,594 --> 01:52:18,594
Paul, it's always interesting 
seeing, like,

1531
01:52:20,689 --> 01:52:22,689
how these big use are cases -- 
how 11ty

1532
01:52:24,758 --> 01:52:26,758
can and does a very good job of
it, of adapting to handle 

1533
01:52:26,758 --> 01:52:28,758
something like that.

1534
01:52:29,749 --> 01:52:31,749
It was really interesting 
seeing that workflow.

1535
01:52:35,347 --> 01:52:37,347
Which like a site, the scale of
your knowledge base,

1536
01:52:38,358 --> 01:52:40,659
it makes a lot of sense that 
you need all of that tooling. 

1537
01:52:40,659 --> 01:52:42,659
What was the buildout time?

1538
01:52:44,155 --> 01:52:46,155
And how long did it take you to
transition from Gatsby to the 

1539
01:52:46,155 --> 01:52:48,155
11ty setup? 

1540
01:52:50,751 --> 01:52:52,961
â‰« PAUL: Collin and I did a 
first shot in 11ty 2 and got it

1541
01:52:52,961 --> 01:52:56,459
out the door. And then in the 
second shot, we did a lot of 

1542
01:52:56,459 --> 01:52:58,459
just

1543
01:52:59,664 --> 01:53:01,664
redesign the user design and 
user experience and stuff.

1544
01:53:03,852 --> 01:53:07,161
And along the way, as we really
got into what 11ty

1545
01:53:09,959 --> 01:53:11,959
could do for us, it changed the
idea of the knowledge base 

1546
01:53:11,959 --> 01:53:13,959
completely.

1547
01:53:15,660 --> 01:53:17,660
You know, we'll let authors 
create their own channels, and

1548
01:53:18,756 --> 01:53:20,756
they can write templates 
because this is simple enough 

1549
01:53:20,756 --> 01:53:22,756
that it can be put in the hands
of mere

1550
01:53:23,954 --> 01:53:25,954
mortals. 
â‰« MIKE: That's awesome.

1551
01:53:28,635 --> 01:53:31,426
So the workflow and GitHub 
pulling in those -- 

1552
01:53:31,426 --> 01:53:33,426
â‰« PAUL: Indeed. 
â‰« MIKE: That's awesome. 

1553
01:53:36,521 --> 01:53:38,521
â‰« PAUL: Just -- to reinforce 
the point you're

1554
01:53:39,611 --> 01:53:41,611
making, people might have this 
idea that 11ty is for personal 

1555
01:53:41,611 --> 01:53:43,611
blogs. Let's change that.

1556
01:53:46,103 --> 01:53:48,103
Let's tell people that you can 
do big projects,

1557
01:53:49,198 --> 01:53:52,781
Zach continues to add what's 
needed for that. And let's see 

1558
01:53:52,781 --> 01:53:55,887
how far we can go before 11ty 
runs out of steam. 

1559
01:53:58,483 --> 01:54:00,483
â‰« MIKE: Yeah, it's actually 
ideal for doing something like 

1560
01:54:00,483 --> 01:54:02,483
that. Like, what other kind of 
benefits have you

1561
01:54:05,192 --> 01:54:07,691
seen from move inging from 
Gatsby to 11ty? I imagine your 

1562
01:54:07,691 --> 01:54:09,691
build time came down?

1563
01:54:10,193 --> 01:54:12,193
Yeah, did it come down?

1564
01:54:18,410 --> 01:54:21,713
â‰« PAUL: It came down from 
infinity. What happened was, 

1565
01:54:21,713 --> 01:54:23,713
you couldn't trust the Gatsby 
cache,

1566
01:54:24,917 --> 01:54:26,917
so you had to do a full build 
all the time and in our CI, it 

1567
01:54:26,917 --> 01:54:28,917
would never complete before the
CI canceled the job.

1568
01:54:29,229 --> 01:54:32,233
â‰« MIKE: OK. That's a lot less. 

1569
01:54:33,837 --> 01:54:35,936
[ Laughter ] 
So you'd have to build locally 

1570
01:54:35,936 --> 01:54:38,023
and push it up? 
â‰« PAUL: Yeah, right.

1571
01:54:38,620 --> 01:54:42,611
â‰« MIKE: Wow. Incredible. Yeah, 
that's a big win.

1572
01:54:44,603 --> 01:54:47,618
CI being able to build your 
site. 

1573
01:54:50,810 --> 01:54:52,810
â‰« PAUL: Indeed, and from an 
authoring experience 

1574
01:54:52,810 --> 01:54:54,810
perspective, I know we're going
to be thinking -- actually, the

1575
01:54:54,810 --> 01:54:57,020
talks at this conference are 
very author-focused. And that's

1576
01:54:57,020 --> 01:54:59,020
great.

1577
01:54:59,020 --> 01:55:01,020
It's not just machinery. 

1578
01:55:05,312 --> 01:55:07,312
When you can build sites that 
give you the feedback that 

1579
01:55:07,312 --> 01:55:09,312
instantaneously

1580
01:55:09,312 --> 01:55:11,808
and provide the hook points for
people like me that are 

1581
01:55:11,808 --> 01:55:13,808
interested in content 
management systems, you can 

1582
01:55:13,808 --> 01:55:17,911
have an authoring experience 
that is really fantastic. 

1583
01:55:17,911 --> 01:55:20,906
There's nothing worse than an 
author that feels dumb, right? 

1584
01:55:20,906 --> 01:55:22,906
â‰« MIKE: Yeah.

1585
01:55:24,801 --> 01:55:26,801
And ultimately, like, most 
websites are managed by 

1586
01:55:26,801 --> 01:55:28,801
nontechnical people.

1587
01:55:29,910 --> 01:55:31,910
It's so important to think 
about the workflows and empower

1588
01:55:31,910 --> 01:55:33,910
editors . 

1589
01:55:33,910 --> 01:55:36,217
â‰« PAUL: They're not developers,
they're humans. 

1590
01:55:36,217 --> 01:55:38,217
â‰« MIKE: Thanks, again, for 
joining today, Paul. Fantastic.

1591
01:55:38,217 --> 01:55:40,217
â‰« PAUL: Thanks for having me. 
â‰« MIKE: All right.

1592
01:55:43,606 --> 01:55:46,216
We're coming up, in 5 minutes, 
we're going to have a 15-minute

1593
01:55:46,216 --> 01:55:48,216
silent break.

1594
01:55:48,521 --> 01:55:52,424
I'll explain that in a second. 
But before I do, I want to ask 

1595
01:55:52,424 --> 01:55:54,424
the chat two questions.

1596
01:55:57,743 --> 01:56:03,035
One, when did you start -- why 
did you start using 11ty? What 

1597
01:56:03,035 --> 01:56:06,240
was the feature that -- the 
straw that broke the camel's 

1598
01:56:06,240 --> 01:56:08,240
back that you were

1599
01:56:08,850 --> 01:56:12,144
like, OK, I have to try this 
now? What pain were you feeling

1600
01:56:12,144 --> 01:56:14,144
that 11ty really resolved?

1601
01:56:14,144 --> 01:56:16,651
And then, two, what is

1602
01:56:20,558 --> 01:56:22,558
a technology that you

1603
01:56:24,968 --> 01:56:26,968
think should be bigger or have 
more adoption than it does now?

1604
01:56:29,676 --> 01:56:31,676
Yeah. And why do you -- yeah.

1605
01:56:36,476 --> 01:56:38,476
It'd be interesting, what's 
your take on why is it not 

1606
01:56:38,476 --> 01:56:42,884
bigger? So the 15-minute break,
we're going to split into three

1607
01:56:42,884 --> 01:56:46,477
parts. 
It's going to be silent, so 

1608
01:56:46,477 --> 01:56:48,477
there won't be any captions 
during that time.

1609
01:56:51,382 --> 01:56:53,382
So the first 5 minutes, Zach 
and

1610
01:56:54,584 --> 01:56:56,584
I are going to do a live 
drawing with a prompt.

1611
01:57:01,493 --> 01:57:03,493
And it'll be side by side and 
chat will judge who did it 

1612
01:57:03,493 --> 01:57:05,493
better . 

1613
01:57:08,408 --> 01:57:11,613
And then we'll do a five- minute
quiz, 11ty quiz and 5 minutes 

1614
01:57:11,613 --> 01:57:13,613
of slides and get back into it .
OK. Let's see.

1615
01:57:16,914 --> 01:57:18,914
What chat...

1616
01:57:19,817 --> 01:57:21,817
faster and simpler than Jekyll.
Yeah.

1617
01:57:23,213 --> 01:57:26,218
Adam, yeah, that's what I came 
from, as well. 

1618
01:57:29,409 --> 01:57:32,821
Like, I got into static sites, 
Jekyll was my first site 

1619
01:57:32,821 --> 01:57:36,414
generator. And it has -- it's 
still an amazing tool

1620
01:57:39,415 --> 01:57:42,522
. It does its job really well .
But it just has some, like, 

1621
01:57:42,522 --> 01:57:44,522
legacy structure

1622
01:57:46,329 --> 01:57:48,329
and notorious, like, speed 
issues

1623
01:57:50,537 --> 01:57:52,537
that can really hamper and 
certainly was a breath of fresh

1624
01:57:52,537 --> 01:57:54,537
air for me. 

1625
01:57:55,630 --> 01:57:57,630
-- coming into 11ty.

1626
01:57:59,936 --> 01:58:03,036
Should have more adoption 
static sites. Yes. Exactly.

1627
01:58:03,632 --> 01:58:07,227
I couldn't agree more. Like, 
it's just crazy to me how much

1628
01:58:10,733 --> 01:58:12,733
complexity is added to websites
to

1629
01:58:14,340 --> 01:58:16,340
have dynamic functionality that
is basically

1630
01:58:18,550 --> 01:58:20,550
generating a static page when 
you can avoid a lot of pain.

1631
01:58:23,655 --> 01:58:26,749
And have it a lot simpler, 
better user experience, better 

1632
01:58:26,749 --> 01:58:28,749
developer experience, better 
for everyone, just embracing 

1633
01:58:28,749 --> 01:58:30,955
static. 
I think we need a lot more 

1634
01:58:30,955 --> 01:58:32,955
innovation in the static space.

1635
01:58:33,647 --> 01:58:35,647
Bring your own templating 
language.

1636
01:58:40,748 --> 01:58:42,748
Got stuck in dependency hell 
trying to get to the latest 

1637
01:58:42,748 --> 01:58:48,154
version of Gatsby. Yeah. I 
mean, that's another -- amazing

1638
01:58:48,154 --> 01:58:51,349
thing about 11ty is I saw Zach 
do a demo of a site built

1639
01:58:54,258 --> 01:58:58,254
on pre-1. 011ty, and bring it 
into

1640
01:59:01,360 --> 01:59:03,360
11ty 2 or alpha of 11ty 3. It 
still works.

1641
01:59:06,351 --> 01:59:08,351
And still everything works as 
expected. 

1642
01:59:09,947 --> 01:59:13,152
So, like, not being required to
upgrade and doing it because 

1643
01:59:13,152 --> 01:59:15,152
you want new features is just 
incredible.

1644
01:59:19,654 --> 01:59:22,065
Needed something like Jekyll 
that didn't destroy my soul 

1645
01:59:22,065 --> 01:59:24,065
with Ruby dependencies.

1646
01:59:25,365 --> 01:59:27,365
I'm a Ruby guy, but just 
getting Ruby set

1647
01:59:29,172 --> 01:59:32,859
up on a new machine is always ,
always a problem. 

1648
01:59:32,859 --> 01:59:34,859
It's always -- it's never 
simple. OK.

1649
01:59:38,858 --> 01:59:42,556
Zach, let's bring you on, and 
let's get this drawing set up.

1650
01:59:46,558 --> 01:59:48,558
â‰« ZACH: Break time.

1651
01:59:49,350 --> 01:59:51,350
â‰« MIKE: Put on a little 
background. Here we go.

1652
01:59:56,644 --> 01:59:58,644
And yeah.

1653
01:59:58,644 --> 02:00:02,743
Just share the screen. I came 
to it from Hugo when I got fed

1654
02:00:04,348 --> 02:00:07,640
up with how Hugo manages 
things. And stuck around 

1655
02:00:07,640 --> 02:00:09,640
because it's just

1656
02:00:09,640 --> 02:00:12,848
so easy. Yeah, I really like 
Hugo, but you really have to

1657
02:00:16,353 --> 02:00:18,353
fit your site into the way that
Hugo wants to build it.

1658
02:00:20,874 --> 02:00:22,874
Whereas 11ty just gives you so 
much more flexibility.

1659
02:00:23,569 --> 02:00:26,656
â‰« ZACH: All right, Mike, no 
more speaking. 

1660
02:00:26,656 --> 02:00:28,656
â‰« MIKE: All right.

1661
02:00:34,367 --> 02:00:36,367
I should say our prompt, our 
prompt is a possum. 

1662
02:15:21,656 --> 02:15:23,656
â‰« MIKE: That was so cool. Just 
seeing, like, the impact of 

1663
02:15:23,656 --> 02:15:27,588
this project. Yeah. Incredible.
All right. We're back in 

1664
02:15:27,588 --> 02:15:29,588
action.

1665
02:15:29,588 --> 02:15:33,099
Back on schedule. So we're 
going to do a short segment

1666
02:15:36,204 --> 02:15:38,204
on a project that I've been 
working

1667
02:15:39,607 --> 02:15:42,423
on called the Future of 
Jamstack . Jamstack was coined 

1668
02:15:42,423 --> 02:15:44,423
in 2016. 

1669
02:15:47,221 --> 02:15:49,221
And really created a lot of

1670
02:15:49,221 --> 02:15:53,024
awareness and brought the 
community together. Around 

1671
02:15:53,024 --> 02:15:56,424
static websites. And recent 
years, it's got a

1672
02:16:00,135 --> 02:16:02,135
little muddied about what 
Jamstack means.

1673
02:16:03,431 --> 02:16:07,424
And the community is like a 
shadow of what it once was. 

1674
02:16:07,424 --> 02:16:09,424
So, what the future of Jamstack
is

1675
02:16:10,628 --> 02:16:12,928
, is a project that's trying to
figure out, how do we get back 

1676
02:16:12,928 --> 02:16:16,424
to the good stuff that Jamstack
was? So here's a highlight 

1677
02:16:16,424 --> 02:16:18,424
video of that project. 

1678
02:16:25,355 --> 02:16:27,355
â‰« Welcome to the future of 
Jamstack, the community-led

1679
02:16:28,260 --> 02:16:31,560
project that's figuring out 
what's next for Jamstack. Over 

1680
02:16:31,560 --> 02:16:33,560
20 interviews, three panels, 
and over

1681
02:16:33,968 --> 02:16:37,075
100 clips of Jamstack goodness.
Here are some of the highlights

1682
02:16:37,075 --> 02:16:39,075
of what the community has been 
discussing. 

1683
02:16:43,372 --> 02:16:45,372
â‰« It's become a radical idea 
somehow to build close to the 

1684
02:16:45,372 --> 02:16:47,372
middle of the web. 

1685
02:16:48,572 --> 02:16:50,572
â‰« You build as many things as 
statically as possible up 

1686
02:16:50,572 --> 02:16:52,572
front, and then you pull in 
data and new things as needed. 

1687
02:16:54,703 --> 02:16:56,708
â‰« At its base, there needs to 
be pregenerated HTML. 

1688
02:16:56,708 --> 02:16:58,708
â‰« I like saying a folder full 
of files.

1689
02:16:58,708 --> 02:17:02,013
â‰« Just because it's simple, 
doesn't

1690
02:17:03,722 --> 02:17:06,525
mean it's technically worse. 
â‰« It's built on the 

1691
02:17:06,525 --> 02:17:08,525
fundamentals of the web.

1692
02:17:09,436 --> 02:17:12,736
HTML CSS JavaScript, it's 
pretty fundamental. And so, 

1693
02:17:12,736 --> 02:17:14,946
regardless of what happens 
going forward, in many ways, 

1694
02:17:14,946 --> 02:17:16,946
it's kind of future proof. 

1695
02:17:18,539 --> 02:17:21,635
â‰« The people who have been 
enthusiastic about Jamstack, 

1696
02:17:21,635 --> 02:17:23,635
typically, I've found, people 
who care about the fundamentals

1697
02:17:25,276 --> 02:17:27,381
of the web and the behaviors of
the web that certainly I hope. 

1698
02:17:29,990 --> 02:17:31,990
â‰« Can I take my site and easily
deploy it on a different 

1699
02:17:31,990 --> 02:17:33,990
provider? 

1700
02:17:34,390 --> 02:17:36,390
â‰« When we didn't put strong 
enough guardrails on what is or

1701
02:17:36,390 --> 02:17:38,390
isn't Jamstack, then it gets 
really easy to start to add

1702
02:17:40,687 --> 02:17:42,792
more things in it, and then, 
all of a sudden, it kind of 

1703
02:17:42,792 --> 02:17:46,372
loses some of the potency. 
â‰« We start out with a term and 

1704
02:17:46,372 --> 02:17:48,372
setup tools and it's very , 
very narrow.

1705
02:17:50,562 --> 02:17:52,562
And then, we start to kind of 
grow as

1706
02:17:53,655 --> 02:17:55,655
we try to meet the needs of 
various people in the 

1707
02:17:55,655 --> 02:17:57,655
community, what they're trying 
to build . And it's naturally 

1708
02:17:57,655 --> 02:17:59,655
going to kind of expand. 

1709
02:18:00,948 --> 02:18:02,948
â‰« Single page applications, 
multi-

1710
02:18:04,157 --> 02:18:07,367
page applications, SSG, SSR, 
progressive hydration, island 

1711
02:18:07,367 --> 02:18:09,367
architecture, progressive 
enhancement, incremental static

1712
02:18:10,572 --> 02:18:12,572
generation, streaming SSR, 
resumability, hedge rendering. 

1713
02:18:14,859 --> 02:18:17,952
Someone entering the field and 
hearing Jamstack and being 

1714
02:18:17,952 --> 02:18:22,265
presented that Tweet is going 
to think like what is this ? 

1715
02:18:25,460 --> 02:18:27,460
â‰« We pulled in a whole lot of 
things saying, yes, that counts

1716
02:18:27,460 --> 02:18:29,460
. Yes, that counts.

1717
02:18:29,651 --> 02:18:32,351
For the shareholders, because 
if it counts, then that means 

1718
02:18:32,351 --> 02:18:34,351
it can be hosted on this thing.

1719
02:18:35,647 --> 02:18:37,647
And if we end up saying, these 
are the guarantees you have, 

1720
02:18:37,647 --> 02:18:39,647
these are the rules

1721
02:18:42,060 --> 02:18:44,060
then, yes, it gets rid of 
things, but it's better for the

1722
02:18:44,060 --> 02:18:46,060
community and learners and not 
necessarily the companies that 

1723
02:18:46,060 --> 02:18:48,060
host it. 

1724
02:18:49,154 --> 02:18:53,159
â‰« Because SSR capabilities have
been built into frameworks 

1725
02:18:53,159 --> 02:18:57,350
nowadays, people are doing that
more and more because they can,

1726
02:18:57,350 --> 02:18:59,350
not because they need to.

1727
02:18:59,843 --> 02:19:03,133
But because it's available to 
them. 

1728
02:19:03,133 --> 02:19:05,133
â‰« A lot of the frameworks 
started to kind of sneaking in 

1729
02:19:05,133 --> 02:19:07,133
things that weren't static 
without being

1730
02:19:09,147 --> 02:19:12,439
really good about saying that 
it wasn't static. 

1731
02:19:12,439 --> 02:19:14,439
â‰« The community, therefore, got
broader and bigger

1732
02:19:16,249 --> 02:19:18,249
, to a point where there was no
real semblance of any 

1733
02:19:18,249 --> 02:19:22,256
relationships anymore. 
â‰« It was 11ty and Gatsby were 

1734
02:19:22,256 --> 02:19:24,256
the two, like,

1735
02:19:24,256 --> 02:19:26,361
strong sides to it, right? 
Everything HTML or everything 

1736
02:19:26,361 --> 02:19:28,361
client rendered. 

1737
02:19:29,852 --> 02:19:32,459
â‰« Because the Jamstack seems to
be somewhat of an identity 

1738
02:19:32,459 --> 02:19:34,459
crisis, this is actually the 
time to create a community 

1739
02:19:34,459 --> 02:19:37,957
around it. Because in many 
ways, projects, they survive 

1740
02:19:37,957 --> 02:19:41,745
and thrive based on community. 
â‰« It's the cross tooling 

1741
02:19:41,745 --> 02:19:43,745
community sharing that 
happened. 

1742
02:19:46,334 --> 02:19:48,334
â‰« I

1743
02:19:49,738 --> 02:19:52,147
do agree with the static first,
it does not necessarily mean it

1744
02:19:52,147 --> 02:19:54,147
can't be done any other way. 

1745
02:19:55,735 --> 02:19:57,735
â‰« Static rendering

1746
02:19:58,938 --> 02:20:00,938
, that's a great approach for 
me and out allows me so many 

1747
02:20:00,938 --> 02:20:02,938
other things we've said. 

1748
02:20:03,641 --> 02:20:05,641
â‰« Static first is about what we
are, it's not about what we've 

1749
02:20:05,641 --> 02:20:07,641
done. 
â‰« For me, the static first is 

1750
02:20:07,641 --> 02:20:09,641
something that really appeals 
to me.

1751
02:20:11,126 --> 02:20:13,126
Because I think that it kind of
directs

1752
02:20:14,332 --> 02:20:17,934
the discussion and thinking 
towards this kind of mindset 

1753
02:20:17,934 --> 02:20:22,209
that you can start by building 
things statically . And that 

1754
02:20:22,209 --> 02:20:24,209
you can add on to it when you 
need. 

1755
02:20:25,797 --> 02:20:27,797
â‰« The thing I think is really 
important

1756
02:20:28,892 --> 02:20:31,985
for us is the education around 
the word static, because static

1757
02:20:31,985 --> 02:20:33,985
is a virtual, but it doesn't 
describe the experience

1758
02:20:35,082 --> 02:20:37,082
. And that's the kind

1759
02:20:38,890 --> 02:20:40,890
of misunderstanding, I think, 
that was at the heart of this 

1760
02:20:40,890 --> 02:20:42,890
way back when when people were 
like, I'm not having a static 

1761
02:20:42,890 --> 02:20:46,382
site. 
â‰« Join the movement and have 

1762
02:20:46,382 --> 02:20:48,382
your say at the future
ofJamstack.

1763
02:20:48,382 --> 02:20:50,382
org.

1764
02:20:55,276 --> 02:20:58,070
â‰« MIKE: Yeah, it's a project 
I'm really passionate about.

1765
02:20:59,665 --> 02:21:03,161
And it's just -- it's been so 
cool. Just getting to talk to a

1766
02:21:03,161 --> 02:21:07,169
bunch of people about static 
websites and, you know, the 

1767
02:21:07,169 --> 02:21:09,169
space that we're

1768
02:21:09,169 --> 02:21:12,769
all passionate about. So, yeah,
excited to see

1769
02:21:15,369 --> 02:21:17,369
where we take that in the 
coming months. 

1770
02:21:17,369 --> 02:21:19,369
All right.

1771
02:21:19,651 --> 02:21:21,651
We're ready to move on to our 
next speaker, which is

1772
02:21:23,860 --> 02:21:26,157
Henry Desroches, creative 
technologist based out of 

1773
02:21:26,157 --> 02:21:28,157
Denver, Colorado.

1774
02:21:29,451 --> 02:21:32,546
He's been designing and coding 
the front of the frontend for 

1775
02:21:32,546 --> 02:21:34,546
the web on nearly a decade

1776
02:21:36,349 --> 02:21:38,349
. Specializing in CSS

1777
02:21:39,436 --> 02:21:41,436
necromanicy, and the dark magic
of design systems.

1778
02:21:44,133 --> 02:21:47,540
He's worked for some incredible
clients, including YouTube and 

1779
02:21:47,540 --> 02:21:49,540
"New York Times", can kickflip,

1780
02:21:50,747 --> 02:21:52,747
citation needed, loves

1781
02:21:53,849 --> 02:21:57,354
keeping the web strange, and 
beaten ELDen

1782
02:22:01,661 --> 02:22:03,661
Elden Ring without leveling up .
I imagine it's extremely hard. 

1783
02:22:06,854 --> 02:22:08,854
Henry's -- 

1784
02:22:08,953 --> 02:22:12,250
[ Laughter ]
Digital frontiers, a place 

1785
02:22:12,250 --> 02:22:14,250
online to call your own.

1786
02:22:14,250 --> 02:22:16,250
Hit it. 

1787
02:22:19,044 --> 02:22:21,939
[ Applause ] 
We got there. Henry, welcome. 

1788
02:22:21,939 --> 02:22:23,939
Great to see you.

1789
02:22:23,939 --> 02:22:27,138
â‰« HENRY: Hey, how's it going? 
â‰« MIKE: Excited to hear your 

1790
02:22:27,138 --> 02:22:29,138
talk.

1791
02:22:29,476 --> 02:22:31,968
Let's get your slides going. 
Yeah. 

1792
02:22:31,968 --> 02:22:33,968
â‰« HENRY: Sweet. 
â‰« MIKE: Over to you.

1793
02:22:33,968 --> 02:22:37,249
â‰« HENRY: Thank you. Just off 
the rip, I've also beaten Dark 

1794
02:22:37,249 --> 02:22:39,249
Souls

1795
02:22:39,249 --> 02:22:41,460
without leveling up. I wanted 
to put that out there.

1796
02:22:43,255 --> 02:22:46,550
Hella multitudes. Hey, my 
name's Henry, the font's name 

1797
02:22:46,550 --> 02:22:48,550
is

1798
02:22:50,355 --> 02:22:52,355
Manuka, I'm a creative 
technologist.

1799
02:22:54,152 --> 02:22:57,449
I also spent time in New York 
City, based in Denver. Super 

1800
02:22:57,449 --> 02:22:59,449
into hand crafted web code, 
poetic

1801
02:23:00,652 --> 02:23:02,652
computation, CSS, and most 
importantly for today, also, 

1802
02:23:02,652 --> 02:23:04,652
shit posting. So thanks for 
coming to the talk.

1803
02:23:04,652 --> 02:23:07,334
Digital frontiers,

1804
02:23:11,637 --> 02:23:13,637
Indie web cowboys, owning your 
post with posse.

1805
02:23:14,945 --> 02:23:16,945
I'm super excited to get 
started with this one.

1806
02:23:23,051 --> 02:23:25,051
We were given this vast realm 
of self-discovery , philosophy 

1807
02:23:25,051 --> 02:23:27,840
and joy and community. But most
of us spend most of our time in

1808
02:23:27,840 --> 02:23:31,144
the bad lands of brain rot and 
attention farming and

1809
02:23:33,542 --> 02:23:36,836
doom scrolling and general bad 
vibes. 

1810
02:23:36,836 --> 02:23:38,836
We break our backs, the foundry

1811
02:23:41,047 --> 02:23:43,047
of algorithmic content as 
endeavoring of our

1812
02:23:44,449 --> 02:23:47,543
sharing our interests corrupted
into the hollow twin of content

1813
02:23:47,543 --> 02:23:49,543
creation, to trap attention

1814
02:23:50,748 --> 02:23:52,748
spans, list

1815
02:23:54,153 --> 02:23:56,952
the thread emoji digital dams 
to harvest scroll inertia. 

1816
02:23:56,952 --> 02:23:58,952
However, it's not all bad. 

1817
02:24:00,854 --> 02:24:02,854
There's plenty of folks who 
oppose this mundane and 

1818
02:24:02,854 --> 02:24:04,854
uninspirational for profit 
corporate web, folks who 

1819
02:24:04,854 --> 02:24:07,358
instead believe in the strange 
and surprising web, hand built,

1820
02:24:07,358 --> 02:24:09,358
cell phone web.

1821
02:24:09,358 --> 02:24:12,049
The battle for the soul of the 
net is fought upon three 

1822
02:24:12,049 --> 02:24:14,049
particular

1823
02:24:15,141 --> 02:24:17,346
stages, well, OK, it's many 
stages, but I'd love to focus 

1824
02:24:17,346 --> 02:24:19,346
on three of them in particular.

1825
02:24:19,346 --> 02:24:21,346
Holy smokes, I'm killing it. 
One, do you own your content?

1826
02:24:24,528 --> 02:24:26,528
If the companies that own the 
platform

1827
02:24:29,937 --> 02:24:33,143
disappeared tomorrow or 
devoured by the board 

1828
02:24:33,143 --> 02:24:35,143
millionaire, would your content
have somewhere to live or also 

1829
02:24:35,143 --> 02:24:37,143
vanish ? Two, can your content 
go anywhere it wants? 

1830
02:24:39,233 --> 02:24:41,233
If I want to find your posts, 
do I need to go to a specific 

1831
02:24:41,233 --> 02:24:43,233
platform? Or can I find and 
reply to and share and

1832
02:24:46,031 --> 02:24:48,031
be delayed by those posts or 
that content wherever

1833
02:24:49,135 --> 02:24:51,135
it prefers to dwell, wherever I
prefer to dwell, rather ? 

1834
02:24:51,135 --> 02:24:53,135
Three, are you in control?

1835
02:24:54,136 --> 02:24:57,230
Can you post anything you want 
or does someone decide, for 

1836
02:24:57,230 --> 02:24:59,230
instance, that you have a 
limited number of characters or

1837
02:25:00,325 --> 02:25:02,325
you can only post images as a 
certain resolution

1838
02:25:04,128 --> 02:25:07,230
? What good is a banger shit 
post, Mr. Anderson if you can't

1839
02:25:07,230 --> 02:25:09,230
pair it with a gif?

1840
02:25:10,520 --> 02:25:12,520
Those are familiar with what 
the heck I'm talking about will

1841
02:25:13,611 --> 02:25:17,117
recognize these as some of the 
core tenets of the IND

1842
02:25:20,031 --> 02:25:22,031
Indie web movement.

1843
02:25:23,320 --> 02:25:25,320
You own your demand and can 
verify and identify yourself 

1844
02:25:25,320 --> 02:25:27,320
across the web, owning your 
content, and the specific

1845
02:25:29,221 --> 02:25:31,221
subject of today's talk, 
publishing on your own site 

1846
02:25:31,221 --> 02:25:33,221
first. 

1847
02:25:33,600 --> 02:25:36,803
So POSSE, or publish on your 
own site syndicate elsewhere, 

1848
02:25:36,803 --> 02:25:38,803
is the idea that for example, 
if I've got a banger

1849
02:25:39,896 --> 02:25:42,984
shit post and I often do, I can
create that post on my website,

1850
02:25:42,984 --> 02:25:46,988
write some software to reformat
and propagate it to other 

1851
02:25:46,988 --> 02:25:48,988
common places of conversation, 
such as

1852
02:25:50,401 --> 02:25:52,401
Mastodon or Blue Sky, no other 
places.

1853
02:25:54,787 --> 02:25:56,787
And use additional tools and 
standards to make the post and 

1854
02:25:56,787 --> 02:25:58,787
the inevitable content 
surrounding it because I said 

1855
02:25:58,787 --> 02:26:01,800
it was a banger, serialized and
read by anyone in any arena, 

1856
02:26:01,800 --> 02:26:03,800
always

1857
02:26:05,004 --> 02:26:07,004
linking back to the home URL 
post, which by the way, will 

1858
02:26:07,004 --> 02:26:09,004
never change . 

1859
02:26:09,391 --> 02:26:11,391
I'll get a little more in-depth
on this, but right off the rip,

1860
02:26:11,391 --> 02:26:13,391
this solves everything.

1861
02:26:19,580 --> 02:26:23,184
I own it, syndicating to RSS 
and social media that make my 

1862
02:26:23,184 --> 02:26:26,388
posts are good or worthwhile, 
which is everyone, engage with 

1863
02:26:26,388 --> 02:26:28,388
them in the preferred format 
and back feeding

1864
02:26:29,482 --> 02:26:31,482
the conversation that's 
happening in all of those 

1865
02:26:31,482 --> 02:26:33,482
places to my website collects 
all of the great conversation 

1866
02:26:33,482 --> 02:26:35,482
and engagement in one place. 
And there's more wins to be 

1867
02:26:35,482 --> 02:26:37,482
had.

1868
02:26:38,678 --> 02:26:41,874
Storing bangers canonically 
allows you to be a better

1869
02:26:45,177 --> 02:26:47,177
steward of the web because you 
can prevent link rot, thanks,

1870
02:26:48,380 --> 02:26:51,471
Twitter, and then, search 
engines will learn to prefer 

1871
02:26:51,471 --> 02:26:53,471
your site and search results if
they continue following links 

1872
02:26:53,471 --> 02:26:55,960
back to your site . 
So, I can see by your 

1873
02:26:55,960 --> 02:26:57,960
individual faces, which

1874
02:26:59,368 --> 02:27:01,368
I can see that everyone's on 
board with the strategy for 

1875
02:27:01,368 --> 02:27:03,368
posting online.

1876
02:27:03,760 --> 02:27:06,466
In the rest of this talk, I'll 
briefly cover a light technical

1877
02:27:06,466 --> 02:27:08,466
implementation of POSSE.

1878
02:27:09,762 --> 02:27:12,263
If you're feeling stoked on a 
content syndication strategy 

1879
02:27:12,263 --> 02:27:14,263
but not ready to take the leap,
you do have options.

1880
02:27:18,370 --> 02:27:21,762
Such as COPE. So briefly some 
alternative strategies are

1881
02:27:24,271 --> 02:27:26,271
COPE, create once, publish 
everywhere. It's the default 

1882
02:27:26,271 --> 02:27:28,271
strategy.

1883
02:27:28,663 --> 02:27:31,756
The problem with posting the 
same content everywhere, at 

1884
02:27:31,756 --> 02:27:33,756
best, you're growing X number 
of audiences on disparate

1885
02:27:35,561 --> 02:27:37,561
folks' sites, fractured digital
identity, there's

1886
02:27:40,368 --> 02:27:42,368
pesos, publish elsewhere and 
syndicate on your own site. 

1887
02:27:44,358 --> 02:27:47,269
There's actually room for PESOS
as an are archival sense.

1888
02:27:50,467 --> 02:27:52,467
Publishers, the Tweetback 
project allows you to collect

1889
02:27:53,675 --> 02:27:55,675
historical posts from the 
fractured identities and give 

1890
02:27:55,675 --> 02:27:57,675
them a nice forever home 
somewhere with a nice lawn, 

1891
02:27:57,675 --> 02:27:59,675
careful,

1892
02:27:59,675 --> 02:28:01,988
he's a rescue. Also publish 
elsewhere syndicate everything 

1893
02:28:01,988 --> 02:28:03,988
to a silo. 

1894
02:28:05,769 --> 02:28:07,769
Not because it's a good 
strategy but because the

1895
02:28:09,176 --> 02:28:12,786
Indie web folks love a fuckin 
algorithm, and you've got to 

1896
02:28:12,786 --> 02:28:16,079
love them for it. I'm going to 
sprint through building an 

1897
02:28:16,079 --> 02:28:18,079
application that creates and 
reads content.

1898
02:28:18,582 --> 02:28:21,873
P 
We're going to make an app that

1899
02:28:21,873 --> 02:28:23,873
syndicates, capturing 
engagement on

1900
02:28:24,965 --> 02:28:28,056
sites and rendering the 
conversation back on our site .

1901
02:28:28,056 --> 02:28:31,149
Before I get into this, many 
extremely bright people have 

1902
02:28:31,149 --> 02:28:33,149
gone here before, many of them 
aren't speaking today.

1903
02:28:34,334 --> 02:28:37,618
I admire all of these people 
massively. This would not be 

1904
02:28:37,618 --> 02:28:39,618
possible without their talks 
and blog posts and their work.

1905
02:28:41,398 --> 02:28:43,398
There's a bibliography for this
talk, it's coming, I'll make it

1906
02:28:43,398 --> 02:28:47,407
available after I shut the hell
up. 

1907
02:28:47,407 --> 02:28:49,407
Oh, yeah, and the other thing, 
I meant to use this talk as an 

1908
02:28:49,407 --> 02:28:51,407
excuse to rework the publishing
strategy on my actual personal 

1909
02:28:51,407 --> 02:28:53,407
site, but as

1910
02:28:53,715 --> 02:28:55,715
I'm sure many of you can relate
to, I'm still redesigning it.

1911
02:28:58,812 --> 02:29:01,910
That's showbiz, baby, instead ,
we're going to create a 

1912
02:29:01,910 --> 02:29:03,910
distinct and memorable

1913
02:29:05,318 --> 02:29:07,318
domain and that's showbiz, 
baby,

1914
02:29:08,331 --> 02:29:12,023
or showbiz. baby. Don't worry 
about the specific code. It's 

1915
02:29:12,023 --> 02:29:14,023
an 11-minute talk.

1916
02:29:14,123 --> 02:29:16,123
I'm going to make everything 
available after I get off 

1917
02:29:16,123 --> 02:29:18,123
stage. 
We'll start by creating an 11ty

1918
02:29:18,123 --> 02:29:21,213
project with two templates. One
that lists all of the bangers 

1919
02:29:21,213 --> 02:29:23,213
and one that

1920
02:29:24,309 --> 02:29:27,900
creates individual permalinks 
for the bangers. You might be 

1921
02:29:27,900 --> 02:29:29,900
able to see in the market, if 
you can see that, that I'm 

1922
02:29:29,900 --> 02:29:31,908
using a format called Hcard as 
part of microformats 2, which 

1923
02:29:31,908 --> 02:29:33,908
is

1924
02:29:35,006 --> 02:29:37,006
a system of classes that we add
to the HTML to make our

1925
02:29:38,616 --> 02:29:41,624
information structured and 
easily parsed by like crawlers 

1926
02:29:41,624 --> 02:29:43,624
that come to look. 

1927
02:29:45,320 --> 02:29:47,320
This is useful because we can 
indicate who wrote the bangers 

1928
02:29:47,320 --> 02:29:49,320
and what the useful parts of 
each banger are.

1929
02:29:51,021 --> 02:29:53,021
Yeah, microformats  2, I got 
off sync with the tabs.

1930
02:29:55,625 --> 02:29:57,625
All of this stuff is like super
well documented online.

1931
02:30:01,531 --> 02:30:03,531
It's a little bit wild west.

1932
02:30:04,431 --> 02:30:07,728
On the topic of 
aweuthentication. We use the 

1933
02:30:07,728 --> 02:30:09,728
domain as identity and use it 
to

1934
02:30:09,728 --> 02:30:12,737
verify other instances of our 
identity. Since my website and 

1935
02:30:12,737 --> 02:30:15,831
GitHub account are both me, I 
can verify those two identities

1936
02:30:15,831 --> 02:30:17,831
by linking to my GitHub account
from my

1937
02:30:18,931 --> 02:30:22,028
site and linking back to my 
site from my GitHub account 

1938
02:30:22,028 --> 02:30:24,028
useing realm A links . 

1939
02:30:25,929 --> 02:30:27,929
This is the basis for Indie web
authentication

1940
02:30:29,336 --> 02:30:31,336
. Since I'm the only person 
that can edit my website and 

1941
02:30:31,336 --> 02:30:33,336
GitHub account, it's reasonable
to assume that both of those 

1942
02:30:33,336 --> 02:30:37,542
sources are me. 
Once we've verified and back 

1943
02:30:37,542 --> 02:30:39,542
linked ourselves different 
places online, we

1944
02:30:40,746 --> 02:30:42,746
can use a service called

1945
02:30:44,352 --> 02:30:47,557
Indie auth that can handle 
authentication and web mentions

1946
02:30:47,557 --> 02:30:49,557
and add a few lines of code to 
the head of our

1947
02:30:50,654 --> 02:30:52,654
site to tell the services that 
they can go to Indie auth to 

1948
02:30:52,654 --> 02:30:54,654
verify us. 

1949
02:30:55,461 --> 02:30:57,461
Also, oh, there's like -- this 
is off script.

1950
02:30:59,162 --> 02:31:01,162
There are some serious power 
houses of the Indieweb in the 

1951
02:31:01,162 --> 02:31:03,162
chat right now.

1952
02:31:04,070 --> 02:31:06,070
If I'm getting anything wrong, 
feel free to rip me apart.

1953
02:31:11,380 --> 02:31:13,380
I specifically used GitHub in

1954
02:31:14,660 --> 02:31:17,756
the realm example because they 
have a sign-in example that 

1955
02:31:17,756 --> 02:31:20,853
Indie will coopt so you can 
sign in securely as GitHub and 

1956
02:31:20,853 --> 02:31:22,853
verify that I am my GitHub 
account and by extension, also 

1957
02:31:22,853 --> 02:31:25,860
my website. 
But great, so now we've got a 

1958
02:31:25,860 --> 02:31:27,860
website that verifies our 
identity using

1959
02:31:29,665 --> 02:31:31,762
Indieauth and capable of 
telling other services how to 

1960
02:31:31,762 --> 02:31:33,762
authenticationuthenticate us.

1961
02:31:35,059 --> 02:31:37,059
Through publishing, it's 11ty, 
we could create markdown files 

1962
02:31:37,059 --> 02:31:39,059
by hand, but it's still really 
nice, turns out, to go to a 

1963
02:31:39,059 --> 02:31:42,449
website and click post. There's
nothing that clears the ass

1964
02:31:44,558 --> 02:31:47,957
of sending the Tweet. In this 
case, I'm using Erin

1965
02:31:51,063 --> 02:31:53,063
Pereki's micropublish er

1966
02:31:53,871 --> 02:31:56,077
er Quill. This will feel like 
magic the first time you do it.

1967
02:31:59,280 --> 02:32:02,689
We're going to grab a token and
proceed with our micropub end 

1968
02:32:02,689 --> 02:32:04,689
point that Quill will speak to.

1969
02:32:06,886 --> 02:32:08,886
So I'm basically, we need to 
accept publish requests from

1970
02:32:09,696 --> 02:32:12,998
Quill and convert them into 
files that 11ty can build. I'm 

1971
02:32:12,998 --> 02:32:14,998
going to create, I'm using 
Netlify functions for this 

1972
02:32:14,998 --> 02:32:16,998
because it's what I know . 
Create a file function/micropub

1973
02:32:16,998 --> 02:32:18,998
and add the

1974
02:32:19,686 --> 02:32:21,686
corresponding endpoint to the 
head on our in dex.

1975
02:32:24,192 --> 02:32:26,192
HTML, go to this end point to 
make publish requests. 

1976
02:32:29,399 --> 02:32:32,300
Also, I'll be using GitHub's 
octokit tool to converting into

1977
02:32:32,300 --> 02:32:34,300
flat files in the GitHub repo.

1978
02:32:35,398 --> 02:32:37,500
We can grab a quick token from 
there, as well. And we can 

1979
02:32:37,500 --> 02:32:39,500
throw all of the tokens into a 
.

1980
02:32:40,997 --> 02:32:42,997
end file and make them 
available, but not public in 

1981
02:32:42,997 --> 02:32:44,997
your environment. And then, we 
can use them in the micropub 

1982
02:32:44,997 --> 02:32:46,997
function. 
Here's the function.

1983
02:32:49,984 --> 02:32:52,995
This borrows heavily from 
Robert's tutorial publishing VI

1984
02:32:52,995 --> 02:32:57,795
writer. Here's the general 
vibe. One, listen for post 

1985
02:32:57,795 --> 02:33:00,888
requests and check their 
veritoken matches the one from 

1986
02:33:00,888 --> 02:33:02,888
Quill,

1987
02:33:04,508 --> 02:33:06,508
publish the content and 
template them in a way that 

1988
02:33:06,508 --> 02:33:08,508
11ty can work with. I made 
markdown files with a timestamp

1989
02:33:08,508 --> 02:33:11,197
in the front matter. 
And then, commit both the newly

1990
02:33:11,197 --> 02:33:13,197
created file to

1991
02:33:14,294 --> 02:33:17,605
GitHub and then, also, like a 
-- some way to let -- like

1992
02:33:20,601 --> 02:33:22,601
basically a JSON file that 
contains the most recently 

1993
02:33:22,601 --> 02:33:24,601
posted post. I'll use it later.

1994
02:33:27,803 --> 02:33:29,803
But once that function's 
deployed, we can sign into 

1995
02:33:29,803 --> 02:33:31,803
Quill with our website, feels 
amazing, make a post, and then,

1996
02:33:31,803 --> 02:33:33,803
watch

1997
02:33:34,308 --> 02:33:36,308
it magically appear on our site
pending a build set. Publishing

1998
02:33:36,308 --> 02:33:38,308
sorted. 
Next, we've got to talk about 

1999
02:33:38,308 --> 02:33:40,308
web mentions. This is the 
conversation aspects.

2000
02:33:43,239 --> 02:33:48,150
From the Indieweb Wiki, it's a 
super powerful protocol.

2001
02:33:51,556 --> 02:33:53,556
It lets us like, you know, 
lightweight way and

2002
02:33:54,662 --> 02:33:56,662
standardized way tell our 
friends and colleagues that 

2003
02:33:56,662 --> 02:33:58,662
we're referencing their blogs, 
et cetera, and lets us know 

2004
02:33:58,662 --> 02:34:02,778
when folks are referencing or 
talking about our work. 

2005
02:34:02,778 --> 02:34:06,091
There's another service called 
Webmention.

2006
02:34:09,498 --> 02:34:12,593
io, lets us read web mentions 
from all over the web . We'll 

2007
02:34:12,593 --> 02:34:14,593
sign up using the same

2008
02:34:15,799 --> 02:34:17,799
Indieauth steps as Quill, add 
the mention endpoint to the 

2009
02:34:17,799 --> 02:34:19,904
head. If it's feeling 
repetitive, we're establishing 

2010
02:34:19,904 --> 02:34:23,207
patterns, baby, and throw the 
API key on our . end for later.

2011
02:34:23,411 --> 02:34:27,614
We can get web mentions from 
other blogs, et cetera, just 

2012
02:34:27,614 --> 02:34:29,614
like right off the rip.

2013
02:34:30,910 --> 02:34:32,910
But because this talk is 
particularly concerned with 

2014
02:34:32,910 --> 02:34:34,910
posting bangers, we need to 
work out some way to collect 

2015
02:34:34,910 --> 02:34:37,314
and share conversations, likes 
B,

2016
02:34:40,310 --> 02:34:42,321
and replies, et cetera, from 
social media . A free service 

2017
02:34:42,321 --> 02:34:44,321
that does exactly that.

2018
02:34:47,826 --> 02:34:53,132
Con VRTs engagement into web 
mentions.

2019
02:34:53,132 --> 02:34:56,231
Collecting engagement on the 
other sites, et cetera, and 

2020
02:34:56,231 --> 02:34:58,231
then, also to indicate and 
create posts we can track

2021
02:34:59,325 --> 02:35:01,325
web mentions on that was the 
like publish on our own site, 

2022
02:35:01,325 --> 02:35:03,325
bridgy does that. 

2023
02:35:04,633 --> 02:35:06,844
So, OK, once a post is created 
and published on our own site, 

2024
02:35:06,844 --> 02:35:08,844
we need to do the syndicate 
elsewhere part.

2025
02:35:09,147 --> 02:35:11,147
I'm going to use another 
Netlify function, it's what I 

2026
02:35:11,147 --> 02:35:13,147
know. If you're an API genius 
and want to do this a different

2027
02:35:13,147 --> 02:35:16,464
way, you can . The world is 
your oyster. 

2028
02:35:16,464 --> 02:35:18,464
Here's the function.

2029
02:35:19,767 --> 02:35:22,577
Again, TLDR, 11-minute talk, by
the way. We're going to grab 

2030
02:35:22,577 --> 02:35:24,577
the last published note.

2031
02:35:25,685 --> 02:35:27,685
I stored it in the JSON file 
like I said.

2032
02:35:29,190 --> 02:35:32,794
Ping Bridgy with a request to 
publish to Mastodon and this 

2033
02:35:32,794 --> 02:35:35,755
most recent post . 
And that's literally it.

2034
02:35:38,964 --> 02:35:42,367
It'll just like Bridgy will 
automatically post our posts , 

2035
02:35:42,367 --> 02:35:44,367
I've got -- somebody should've 
proofread

2036
02:35:45,463 --> 02:35:47,463
this script, bro, holy smokes, 
to Mastodon and

2037
02:35:48,564 --> 02:35:50,564
it's like four lines of code 
like blue sky, other 

2038
02:35:50,564 --> 02:35:52,564
syndication targets, whatever 
you want. 

2039
02:35:53,369 --> 02:35:55,369
So our flow is now completely 
automated from I thought of a 

2040
02:35:55,369 --> 02:35:57,369
genius post and I posted it via
Quill to having it published

2041
02:36:00,587 --> 02:36:02,587
on our personal site and copy 
out to Mastodon, to whatever, 

2042
02:36:02,587 --> 02:36:04,587
with a link back to our 
original site. 

2043
02:36:05,593 --> 02:36:07,593
So, on to the final step here.

2044
02:36:09,298 --> 02:36:11,298
Oh, crap, I've gone a little 
bit over. I'm sorry.

2045
02:36:13,709 --> 02:36:15,709
Really cool now, the 
conversations from all of these

2046
02:36:15,709 --> 02:36:17,709
different sources are collected
as web mentions.

2047
02:36:18,612 --> 02:36:21,819
So we can show all of those 
conversations from the 

2048
02:36:21,819 --> 02:36:23,819
bluebird, the butterfly, the 
elephant, in one place.

2049
02:36:25,605 --> 02:36:27,605
So folks don't have to miss out
on a reply because

2050
02:36:29,010 --> 02:36:31,010
they prefer Blue Sky, they can 
click back and read everything .

2051
02:36:33,314 --> 02:36:36,519
It's pretty easy to use 11ty 
data files, run me the check, 

2052
02:36:36,519 --> 02:36:38,519
Zach, to collect

2053
02:36:39,612 --> 02:36:41,612
web mentions as JSON from the 
web mention API that I 

2054
02:36:41,612 --> 02:36:43,612
mentioned earlier . And then 
render them into templates,

2055
02:36:45,805 --> 02:36:47,805
Maxbook has a fantastic 
tutorial on this . This borrows

2056
02:36:47,805 --> 02:36:51,802
from that heavily, obviously. 
And I've included 

2057
02:36:51,802 --> 02:36:53,802
implementation of that in the

2058
02:36:53,802 --> 02:36:55,802
GitHub repo, again, available 
after the talk. 

2059
02:36:55,802 --> 02:36:58,089
But that's it. Like, after 
maybe two hours of work, you're

2060
02:37:01,084 --> 02:37:03,084
owning all of your content, 
you're divested from the whims 

2061
02:37:03,084 --> 02:37:06,180
of social media silos and sicko
owners and made the web more 

2062
02:37:06,180 --> 02:37:08,180
kind.

2063
02:37:08,476 --> 02:37:11,776
There's a million enhancements 
that can be made to this. You 

2064
02:37:11,776 --> 02:37:13,776
can follow Cy Sia

2065
02:37:14,869 --> 02:37:17,970
's amazing guide, you could add
media endpoint in case you want

2066
02:37:17,970 --> 02:37:21,162
to post gifs, use microformats 
to let folks find

2067
02:37:23,765 --> 02:37:27,750
a post from your site back on 
to the silo, if you want. 

2068
02:37:27,750 --> 02:37:30,844
All the code for today will be 
examinable, like, under the 

2069
02:37:30,844 --> 02:37:32,844
microscope, whatever, online, 
on my personal website, Henry.

2070
02:37:35,229 --> 02:37:37,229
codes in the next couple of 
days. Oh, I didn't mean to 

2071
02:37:37,229 --> 02:37:39,229
leave that in there. 

2072
02:37:40,520 --> 02:37:42,816
Oh, yeah, no, sorry, first big 
talk, bear with me. And then, 

2073
02:37:42,816 --> 02:37:45,915
yeah, thanks for listening 
today. Thank you for 11ty for 

2074
02:37:45,915 --> 02:37:47,915
having me and all of these 
other amazing speakers.

2075
02:37:50,617 --> 02:37:52,719
I'm literally so honored to be 
sharing the estage to these 

2076
02:37:52,719 --> 02:37:54,719
people.

2077
02:37:55,421 --> 02:37:57,421
I've been looking up to y'all 
since I was a wee child. 

2078
02:37:59,615 --> 02:38:02,715
Last minute plug, if you 11ty 
sickos love personal websites, 

2079
02:38:02,715 --> 02:38:04,715
visit us at

2080
02:38:04,715 --> 02:38:06,715
personalsite. es and share 
yours.

2081
02:38:08,320 --> 02:38:11,522
You can filter by RSS feed, you
can do whatever you want . Find

2082
02:38:11,522 --> 02:38:13,522
me somewhere JAUP line, Free 
Palestine, thanks so much.

2083
02:38:15,628 --> 02:38:17,758
â‰« MIKE: Thank you so much. That
was amazing.

2084
02:38:20,958 --> 02:38:22,958
Those principles of the 
Indieweb are so important

2085
02:38:24,170 --> 02:38:26,170
as we've seen in the past 
decade play out. 

2086
02:38:29,600 --> 02:38:33,303
We really are the ones that 
need to push these ideas and

2087
02:38:36,611 --> 02:38:38,611
, as you showed, like 11ty's a 
great tool to kind

2088
02:38:38,611 --> 02:38:42,740
of be at the core of that 
publishing platform. 

2089
02:38:42,740 --> 02:38:45,738
â‰« HENRY: Yeah, and it's a 
stronger and stronger strategy.

2090
02:38:48,636 --> 02:38:50,636
â‰« MIKE: We're going to move on 
to our next speaker, thanks, 

2091
02:38:50,636 --> 02:38:52,636
again, Henry. 
â‰« HENRY: Thank you so much. 

2092
02:38:52,636 --> 02:38:54,636
â‰« MIKE: All right.

2093
02:38:55,931 --> 02:38:57,931
Next speaker is Sia

2094
02:38:59,539 --> 02:39:03,043
KARM , she's currently working 
on web performance at Shopify.

2095
02:39:06,237 --> 02:39:08,237
She also is an international 
conference speaker, writer,

2096
02:39:09,333 --> 02:39:12,432
Google developer expert in web 
technologies, and member of the

2097
02:39:12,432 --> 02:39:14,432
W3C web performance working 
group. 

2098
02:39:16,324 --> 02:39:18,324
She coorganizes the 11ty 
Meetup,

2099
02:39:19,422 --> 02:39:21,422
which won the 2021

2100
02:39:23,229 --> 02:39:28,138
jammy award for outstanding 
community meet yum up. She's 

2101
02:39:28,138 --> 02:39:30,638
going to talk about probably 
doing web performance wrong. 

2102
02:39:30,638 --> 02:39:32,638
I'm really interested for this 
one. I think it's going to be 

2103
02:39:32,638 --> 02:39:34,638
fascinating. Hit it. 

2104
02:39:40,850 --> 02:39:42,850
[ Applause ]  
â‰« SIA: All right.

2105
02:39:43,450 --> 02:39:46,446
Hello, everyone, I think I'm on
here now. 

2106
02:39:46,446 --> 02:39:48,446
â‰« MIKE: Yeah, welcome, Sia. 
â‰« SIA: Thank you.

2107
02:39:50,554 --> 02:39:52,554
I'm excited to talk to y'all 
today about why you're probably

2108
02:39:52,554 --> 02:39:54,554
doing web performance wrong.

2109
02:39:54,940 --> 02:39:56,940
I will admit it's a little bit 
click baity, you're not 

2110
02:39:56,940 --> 02:39:58,940
actually doing it wrong, but 
maybe you're making your job 

2111
02:39:58,940 --> 02:40:00,940
harder and getting frustrated 
on the way.

2112
02:40:07,243 --> 02:40:09,243
Let me make sure my slides are 
working. 

2113
02:40:09,243 --> 02:40:11,243
All right. If I were to ask 
y'all, what's the number one 

2114
02:40:11,243 --> 02:40:13,243
tool you use for making your 
site faster?

2115
02:40:18,532 --> 02:40:20,843
I would guess that 90% of you 
are going to say lighthouse, 

2116
02:40:20,843 --> 02:40:22,843
right? It's a great tool.

2117
02:40:24,842 --> 02:40:26,842
I credit it with giving

2118
02:40:28,249 --> 02:40:30,249
the web developer community 
more -- or maybe making web 

2119
02:40:30,249 --> 02:40:32,949
performance more visible to 
everyone. Which was great, but 

2120
02:40:32,949 --> 02:40:36,036
what you need to understand is 
it's an algorithm and it's 

2121
02:40:36,036 --> 02:40:38,036
limited and it might point you

2122
02:40:38,731 --> 02:40:40,731
in directions that aren't very 
helpful sometimes. 

2123
02:40:43,918 --> 02:40:45,923
And we're going to talk about 
lighthouse, but also, the tools

2124
02:40:45,923 --> 02:40:47,923
that you're probably more used 
to using.

2125
02:40:48,819 --> 02:40:50,920
What do I mean by that? This is
a real case I was looking at 

2126
02:40:50,920 --> 02:40:52,920
the other day.

2127
02:40:54,212 --> 02:40:57,704
And this was its Lighthouse 
report. On the website, they 

2128
02:40:57,704 --> 02:40:59,704
had a score of 33, and you can 
see,

2129
02:41:01,108 --> 02:41:03,108
there's more than 20 different 
audits here that are flagged. 

2130
02:41:04,898 --> 02:41:08,101
You're probably thinking oh, my
god if this was your site, and 

2131
02:41:08,101 --> 02:41:10,101
the next thing, oh, do I have 
to do all of these things to 

2132
02:41:10,101 --> 02:41:12,101
make my site faster?

2133
02:41:14,894 --> 02:41:16,894
And what I want you to do is 
take a step back and think, 

2134
02:41:16,894 --> 02:41:18,894
what are the primary reasons 
this website is so -- is it 

2135
02:41:18,894 --> 02:41:21,880
really minimize main thread 
work? Let's take a step back.

2136
02:41:25,076 --> 02:41:27,076
Again, my name is Sia,

2137
02:41:30,685 --> 02:41:32,685
Karamalegos, but I help make 
merchant sites

2138
02:41:34,290 --> 02:41:38,075
FAESer onshop faster on 
Shopify. I have a lot of 11ty 

2139
02:41:38,075 --> 02:41:41,167
posts on there, although, I 
haven't done enough lately 

2140
02:41:41,167 --> 02:41:43,167
because I've been working more 
on our Shopify, it's a 

2141
02:41:43,167 --> 02:41:47,047
performance. Shopify. com site,
in case you're interested about

2142
02:41:47,047 --> 02:41:49,047
web performance at Shopify. 

2143
02:41:49,055 --> 02:41:51,055
And yeah, all the things. Let's
keep going.

2144
02:41:53,243 --> 02:41:56,535
Let's talk about speed metrics.
In this presentation, I'm 

2145
02:41:56,535 --> 02:41:58,535
talking mostly about speed 
because that's what we usually 

2146
02:41:58,535 --> 02:42:00,535
think about in performance, but
those other things are really 

2147
02:42:00,535 --> 02:42:02,535
great, too.

2148
02:42:03,249 --> 02:42:06,741
But if this, I'm going to focus
on loading speed. Because the 

2149
02:42:06,741 --> 02:42:08,741
idea is to give you information
about what you could do, which 

2150
02:42:08,741 --> 02:42:11,521
is applicable to other ones, as
well. 

2151
02:42:11,521 --> 02:42:13,521
So when we think about loading 
speed, there's three important 

2152
02:42:13,521 --> 02:42:16,417
metrics. The one that's user 
important

2153
02:42:20,122 --> 02:42:22,122
to real users is contentful 
paint

2154
02:42:23,212 --> 02:42:25,212
. That's when the largest item 
on the screen or the viewport 

2155
02:42:25,212 --> 02:42:27,212
is rendered, which gives the 
user the idea, oh, this page 

2156
02:42:27,212 --> 02:42:29,212
has loaded.

2157
02:42:31,291 --> 02:42:33,291
And the threshold for it is 2.

2158
02:42:33,984 --> 02:42:37,383
5 experience. And this one is 
more, it's about

2159
02:42:40,376 --> 02:42:42,376
human perceptions of 
performance, but also 

2160
02:42:42,376 --> 02:42:44,376
achievability and things like 
that. 

2161
02:42:45,364 --> 02:42:47,364
But we also have a few other 
load

2162
02:42:48,567 --> 02:42:51,658
ing metrics, time to first 
byte, when the first byte comes

2163
02:42:51,658 --> 02:42:53,658
back from the server, user 
doesn't know or care what that 

2164
02:42:53,658 --> 02:42:55,658
is . They don't care. But it 
helps us understand what might 

2165
02:42:55,658 --> 02:42:57,658
be going on.

2166
02:42:58,795 --> 02:43:03,296
First contentful paint is the 
clue something 's happening. 

2167
02:43:03,296 --> 02:43:05,392
That's when the first item is 
rendered. These are the 

2168
02:43:05,392 --> 02:43:07,392
thresholds for good.

2169
02:43:08,886 --> 02:43:12,378
If you've ever used pay speed.

2170
02:43:15,994 --> 02:43:17,994
dev, and you have a site that's
popular enough to have publicly

2171
02:43:17,994 --> 02:43:19,994
available data in this data 
set, you might see something 

2172
02:43:19,994 --> 02:43:22,583
like this. You can see at the 
top it says discover what your 

2173
02:43:22,583 --> 02:43:24,583
real users are experiencing.

2174
02:43:25,962 --> 02:43:27,962
So this is real world data

2175
02:43:29,167 --> 02:43:31,772
or, we call it run data for 
short. 

2176
02:43:35,371 --> 02:43:38,080
It's telling me my largest 
contentful paint is 4.

2177
02:43:39,076 --> 02:43:42,766
8 seconds. Largest of 4. 8 
seconds or faster.

2178
02:43:45,963 --> 02:43:47,963
And so, you can see we have our
core web vitals on the top row,

2179
02:43:49,057 --> 02:43:52,150
and on the bottom row, the 
extra metrics, plus one that's 

2180
02:43:52,150 --> 02:43:54,150
about to be deprecated

2181
02:43:54,150 --> 02:43:56,150
or semideprecated. 
But we can see this data.

2182
02:43:58,608 --> 02:44:00,608
This is how my real users were 
experiencing that same website.

2183
02:44:03,709 --> 02:44:05,918
And this, again, is the Chrome 
user experience support, if you

2184
02:44:05,918 --> 02:44:07,918
don't know much about that. 

2185
02:44:09,513 --> 02:44:11,513
So at the top, I have our same 
little kind of waterfall 

2186
02:44:11,513 --> 02:44:13,513
diagram.

2187
02:44:15,415 --> 02:44:17,415
And at the bottom, we have our 
example with the real user data

2188
02:44:17,415 --> 02:44:19,415
map to it.

2189
02:44:19,415 --> 02:44:21,415
You can see that time to first 
byte, I've extended that row 

2190
02:44:21,415 --> 02:44:23,415
out to 2. 4 seconds, that was 
the number on the previous 

2191
02:44:23,415 --> 02:44:26,871
slide. SEP is 3. 8. And LCP is 
4. 8. 

2192
02:44:29,073 --> 02:44:31,073
So what's the primary 
bottleneck here?

2193
02:44:35,778 --> 02:44:37,880
There is no world in which you 
can achieve a 2. 5-second LCP 

2194
02:44:37,880 --> 02:44:41,278
with a 2. 4 second time to 
first byte. It's just not 

2195
02:44:41,278 --> 02:44:43,278
possible.

2196
02:44:46,973 --> 02:44:48,973
To do your entire first render 
and your largest

2197
02:44:48,980 --> 02:44:50,980
contentful paint within . 1 
seconds, it's not possible. 

2198
02:44:55,269 --> 02:44:57,269
So if I were to, instead, so

2199
02:44:58,359 --> 02:45:01,452
the first two on this screen 
are what you've already seen, 

2200
02:45:01,452 --> 02:45:03,452
and on the bottom, what I've 
done is

2201
02:45:04,543 --> 02:45:06,543
I've presented like I made my 
time to first byte good and 

2202
02:45:06,543 --> 02:45:08,543
then I've met FCP and LCP so 
that you can see, you know,

2203
02:45:11,763 --> 02:45:13,763
what would they look like if 
the time to first byte was 

2204
02:45:13,763 --> 02:45:15,763
faster? Because these are 
sequential. You can't render 

2205
02:45:15,763 --> 02:45:17,763
the page until you get the 
bytes from the server. 

2206
02:45:19,045 --> 02:45:21,045
And you can't render the 
largest thing until you've 

2207
02:45:21,045 --> 02:45:23,045
rendered the page. And 
sometimes, those can happen at 

2208
02:45:23,045 --> 02:45:26,812
the same time. But, we can see 
now that FCP is, it's still a 

2209
02:45:26,812 --> 02:45:28,812
little bit slow, it's only .

2210
02:45:30,100 --> 02:45:32,699
4 seconds slower and LCP is 
about . 7 seconds slower.

2211
02:45:35,101 --> 02:45:37,799
They still have a little bit of
issues. But that biggest 

2212
02:45:37,799 --> 02:45:41,094
contributor was actually time 
to first byte. So looking back 

2213
02:45:41,094 --> 02:45:43,094
at our

2214
02:45:44,302 --> 02:45:46,302
lighthouse report, where would 
we have found that out in here?

2215
02:45:46,302 --> 02:45:48,302
Well, what's really 
interesting, which it took me a

2216
02:45:48,302 --> 02:45:51,176
while to figure this out 
because I was looking for it, I

2217
02:45:51,176 --> 02:45:53,176
ran

2218
02:45:54,384 --> 02:45:56,384
it twice because I was trying 
to explain, essentially, a 

2219
02:45:56,384 --> 02:45:58,384
similar point to someone else, 
and it didn't even pop up in

2220
02:45:58,384 --> 02:46:02,354
this lighthouse run. It 
actually in

2221
02:46:03,752 --> 02:46:05,752
this specific experience, we 
actually had a good time to 

2222
02:46:05,752 --> 02:46:07,752
first byte. So it didn't even 
trigger what is usually

2223
02:46:09,052 --> 02:46:12,545
happening in the real world. 
Additionally, are remember, 

2224
02:46:12,545 --> 02:46:14,545
that was probably our biggest 
issue. 

2225
02:46:16,125 --> 02:46:18,125
But because I know there's a 
little bit of issue with FCP 

2226
02:46:18,125 --> 02:46:22,937
and LCP, my guess is the other 
two are these other two audits,

2227
02:46:22,937 --> 02:46:26,920
that's what I think they call 
these things. 

2228
02:46:26,920 --> 02:46:28,920
But the largest contentful 
paint might have been

2229
02:46:29,933 --> 02:46:31,933
lazy loaded, that happens a lot
on Shopify sites. But this is 

2230
02:46:31,933 --> 02:46:33,933
not a liquid Shopify site.

2231
02:46:35,320 --> 02:46:37,320
And then, render blocking 
resources is a common reason

2232
02:46:38,932 --> 02:46:40,932
why first contentful paint is 
slow. All right. 

2233
02:46:43,732 --> 02:46:45,732
Let's take a step back and 
learn about these two different

2234
02:46:45,732 --> 02:46:47,732
types of testing. So what you 
see on here is what we've just 

2235
02:46:47,732 --> 02:46:49,732
seen.

2236
02:46:49,804 --> 02:46:51,914
On the left is that top part of
PHP web.

2237
02:46:54,915 --> 02:46:58,204
dev which is your real user 
data. And on the right, we have

2238
02:46:58,204 --> 02:47:00,204
our Lighthouse report that 
you've probably seen a lot, 

2239
02:47:00,204 --> 02:47:02,204
right? 

2240
02:47:03,584 --> 02:47:05,584
It's this Lighthouse report, 
you can see in the gray area, 

2241
02:47:05,584 --> 02:47:07,584
you can see that it was run on 
an emulate

2242
02:47:08,478 --> 02:47:10,478
Let's take a step back and 
learn about these two different

2243
02:47:10,478 --> 02:47:12,478
types of testing. So what you 
see on here is what we've just 

2244
02:47:12,478 --> 02:47:14,478
seen. On the left is that top 
part of PHP web.dev which is 

2245
02:47:14,478 --> 02:47:16,478
your real user data. And on the
right, we have our Lighthouse 

2246
02:47:16,478 --> 02:47:18,478
report that you've probably 
seen a lot, right? 

2247
02:47:18,478 --> 02:47:20,478
It's this Lighthouse report, 
you can see in the gray area, 

2248
02:47:20,478 --> 02:47:22,478
you can see that it was run on 
an emulated motoG powered phone

2249
02:47:22,478 --> 02:47:24,478
using a slow 4G connection. And
it's just a single run. It's 

2250
02:47:24,478 --> 02:47:26,478
only a single point of data. 
Whereas on the left, it's 

2251
02:47:26,478 --> 02:47:28,478
aggregated across the user 
experiences. 

2252
02:47:28,478 --> 02:47:30,478
On this page, you can see an 
internal report we used at 

2253
02:47:30,478 --> 02:47:32,478
Shopify that is real user data,
so we collect data with our own

2254
02:47:32,478 --> 02:47:34,478
script. And we can run it 
across our site. 

2255
02:47:34,478 --> 02:47:36,478
So I like showing this because 
it shows, oh, now I'm going to 

2256
02:47:36,478 --> 02:47:38,478
break it down by page and 
device type. So I can see that,

2257
02:47:38,478 --> 02:47:40,656
you know, the collection page 
has a big problem with CLS, 

2258
02:47:40,656 --> 02:47:43,205
which is right down here.

2259
02:47:46,400 --> 02:47:48,400
But the desktop page has less 
of an issue with CLS.

2260
02:47:49,975 --> 02:47:51,975
You can see the differences by 
page and by device, oh, you 

2261
02:47:51,975 --> 02:47:53,975
know what, it's directional 
clues. 

2262
02:47:55,152 --> 02:47:57,152
And on the right, is a network

2263
02:47:58,355 --> 02:48:00,355
diagram from dev tools, which 
if you've ever run, that would 

2264
02:48:00,355 --> 02:48:02,355
be considered lab testing, a 
single run.

2265
02:48:03,452 --> 02:48:05,452
Left is aggregation, right is 
the single run or lab test. 

2266
02:48:09,635 --> 02:48:12,328
Again, on the left, this is 
another way to see Chrome user 

2267
02:48:12,328 --> 02:48:14,328
experience report data, it's a 
cool site called Trio.

2268
02:48:15,625 --> 02:48:17,625
The site speed report uses crux
API. 

2269
02:48:19,414 --> 02:48:21,414
And I like how you can see 
monthly data in there.

2270
02:48:24,121 --> 02:48:27,409
It's aggregated data from 
Chrome specifically. On the 

2271
02:48:27,409 --> 02:48:29,409
right is your performance panel
dev tools, which is another

2272
02:48:29,409 --> 02:48:31,409
lab testing tool. 
So there's two different types 

2273
02:48:31,409 --> 02:48:33,409
of testing.

2274
02:48:35,095 --> 02:48:37,095
There's real user monitoring, 
also called field of data.

2275
02:48:38,588 --> 02:48:40,588
And then there's lab testing, 
which is sometimes called 

2276
02:48:40,588 --> 02:48:42,588
synthetic testing. Neither one 
of these is better than the 

2277
02:48:42,588 --> 02:48:44,588
other. They just have their own
uses. 

2278
02:48:46,256 --> 02:48:48,256
So you wouldn't use a hammer 
when you need a screwdriver, 

2279
02:48:48,256 --> 02:48:50,256
and the reverse. So what are 
those differences?

2280
02:48:53,535 --> 02:48:55,535
Example tools, again, Chrome 
user experience report is for 

2281
02:48:55,535 --> 02:48:57,535
real user data. But you can 
also collect this

2282
02:49:00,525 --> 02:49:02,525
data yourself, a package I use 
for collecting myself is the 

2283
02:49:02,525 --> 02:49:04,525
web vitals

2284
02:49:04,525 --> 02:49:07,030
NPM package, which is 
maintained by the Chrome team. 

2285
02:49:07,030 --> 02:49:09,030
There's also Boomerang, which 
is a pulse product.

2286
02:49:11,131 --> 02:49:13,131
And there's also, if you wanted
like a paid service, there's

2287
02:49:13,339 --> 02:49:15,339
impulse but also speed curve, 
which I really like. 

2288
02:49:20,332 --> 02:49:22,332
Lab testing, the tools like 
Lighthouse you're used to,

2289
02:49:23,739 --> 02:49:26,829
just the bottom section, the 
one with Lighthouse in it, web 

2290
02:49:26,829 --> 02:49:28,829
page test, you know, your 
network diagram, your 

2291
02:49:28,829 --> 02:49:30,829
performance tab in dev tools, 
those are all lab testing. 

2292
02:49:34,027 --> 02:49:36,716
So RUM is great for when you 
want to see how real users are 

2293
02:49:36,716 --> 02:49:38,716
experiencing a site.

2294
02:49:40,809 --> 02:49:42,809
And reveal those real world 
bottlenecks that might be 

2295
02:49:42,809 --> 02:49:45,603
hidden in a lab test. Like we 
just saw. What was actually 

2296
02:49:45,603 --> 02:49:47,603
hidden was there was a time to 
first bite issue.

2297
02:49:49,302 --> 02:49:51,598
Lab testing, though, is great 
for detailed data. And you can 

2298
02:49:51,598 --> 02:49:53,598
more quickly debug and retest. 

2299
02:49:56,587 --> 02:49:58,587
So their cons are kind of the 
mirror of each other.

2300
02:49:59,090 --> 02:50:02,983
RUM, there's going to be 
limited metrics. You only have 

2301
02:50:02,983 --> 02:50:06,175
a handful of metrics and it's 
hard to debug. You can't go 

2302
02:50:06,175 --> 02:50:08,175
make a change and quickly see 
if that probably fixed the 

2303
02:50:08,175 --> 02:50:10,175
issue. 
Instead, you actually have to 

2304
02:50:10,175 --> 02:50:12,175
use lab testing for that.

2305
02:50:13,478 --> 02:50:16,952
But, of course, on, that side, 
it can hide the real world data

2306
02:50:16,952 --> 02:50:18,952
and not representative of real 
user experiences.

2307
02:50:21,253 --> 02:50:23,253
We're using servers to emulate 
and experience or we're using 

2308
02:50:23,253 --> 02:50:25,253
our own powerful desktops and 
whatnot to measure. 

2309
02:50:28,655 --> 02:50:32,749
So what are some of those 
example observations? With RUM,

2310
02:50:32,749 --> 02:50:36,356
I can say, oh, LCP is slow on, 
you know, the product page, or 

2311
02:50:36,356 --> 02:50:38,356
CLS is bad on

2312
02:50:39,365 --> 02:50:42,953
the home page on desktop but 
not mobile. 

2313
02:50:42,953 --> 02:50:46,045
On lab testing, though, what I 
can do is use those what I call

2314
02:50:46,045 --> 02:50:48,045
directional clues to

2315
02:50:49,137 --> 02:50:52,227
figure out if, oh, I can see 
now that LCP is lazy loaded or 

2316
02:50:52,227 --> 02:50:54,227
that 5 files are render

2317
02:50:56,072 --> 02:50:58,072
blocking, maybe I should 
figure, you know, dig in deeper

2318
02:50:58,072 --> 02:51:00,565
on that or that sales banner is
shifting content down. 

2319
02:51:03,755 --> 02:51:06,957
So when I debug, what I do is, 
I use real user data and those 

2320
02:51:06,957 --> 02:51:08,957
gaps between time to

2321
02:51:10,167 --> 02:51:12,573
first bite, first contentful 
paint and largest contentful 

2322
02:51:12,573 --> 02:51:14,573
paint to narrow down the most 
likely issues.

2323
02:51:15,462 --> 02:51:17,462
Very similar content...

2324
02:51:18,753 --> 02:51:22,256
a very similar concept is LCP 
subparts , and

2325
02:51:25,362 --> 02:51:27,362
Estella Frankel had a great 
talk at a conference. 

2326
02:51:29,641 --> 02:51:31,641
I usually have these specific 
metrics at hand. So this is the

2327
02:51:31,641 --> 02:51:33,641
method I used.

2328
02:51:33,641 --> 02:51:37,127
But it's a very similar 
concept. So what do I mean by 

2329
02:51:37,127 --> 02:51:39,127
that

2330
02:51:40,532 --> 02:51:42,532
? When we have the three 
metrics, if you have a problem 

2331
02:51:42,532 --> 02:51:44,532
with one of them, it's usually 
specific to that issue.

2332
02:51:47,320 --> 02:51:49,320
If I have a problem with time 
to first byte, you might ask

2333
02:51:50,216 --> 02:51:53,212
yourself, why might my server 
be responding slowly? 

2334
02:51:56,599 --> 02:51:58,599
If instead, you have an issue 
with first contentful paint, 

2335
02:51:58,599 --> 02:52:00,599
you might want to ask what's 
preventing the render? Do I 

2336
02:52:00,599 --> 02:52:02,599
have a lot of render blocking 
resources?

2337
02:52:03,924 --> 02:52:07,927
Am I using an antiflick r 
snippet because I have AV 

2338
02:52:07,927 --> 02:52:11,804
testing turned on or something 
like that? 

2339
02:52:11,804 --> 02:52:13,804
If your LCP is slow, you might 
ask yourself, why is that

2340
02:52:13,815 --> 02:52:15,815
LCP element showing up faster? 
Is it because the image was 

2341
02:52:15,815 --> 02:52:17,815
lazy loaded?

2342
02:52:20,202 --> 02:52:22,202
Or if it's text, am I blocking 
the font until the web font 

2343
02:52:22,202 --> 02:52:24,202
comes in?

2344
02:52:25,186 --> 02:52:27,186
So there are different issues 
depending on which part of your

2345
02:52:27,186 --> 02:52:29,186
speed is broken.

2346
02:52:29,186 --> 02:52:31,979
All right. So now that you know
that generally, let's take a 

2347
02:52:31,979 --> 02:52:33,979
look the a

2348
02:52:35,900 --> 02:52:38,193
A at some examples. This is 
actually an example of a great 

2349
02:52:38,193 --> 02:52:41,681
hook performance. There's a 
fast time to first byte, first 

2350
02:52:41,681 --> 02:52:43,681
contentful paint and largest 
contentful paint.

2351
02:52:45,061 --> 02:52:47,061
This is crux data from the trio
tool. 

2352
02:52:48,903 --> 02:52:51,997
And this second example, we can
see that this is somewhat 

2353
02:52:51,997 --> 02:52:53,997
similar to the one I've shown 
you is that time to first

2354
02:52:53,997 --> 02:52:55,997
byte is 1. 7 seconds, that's 
pretty slow.

2355
02:52:59,785 --> 02:53:01,785
And so, it's actually impacting
the other two, even though 

2356
02:53:01,785 --> 02:53:03,785
there's only a gap of what .

2357
02:53:03,967 --> 02:53:07,151
6 seconds to first contentful 
paint ? And . 4 seconds to 

2358
02:53:07,151 --> 02:53:09,151
largest contentful paint. 

2359
02:53:10,729 --> 02:53:12,729
While all of these are yellow, 
it's time to first byte that 

2360
02:53:12,729 --> 02:53:14,729
has the bottleneck here. I'd 
look at server issues.

2361
02:53:16,919 --> 02:53:18,919
In this next example, this is 
an easier one because

2362
02:53:20,124 --> 02:53:22,124
the first two were actually 
green, we know it's just the

2363
02:53:23,217 --> 02:53:25,629
largest contentful paint . I'd 
look at that element to look at

2364
02:53:25,629 --> 02:53:27,629
what's going on. 

2365
02:53:29,319 --> 02:53:32,829
This next one, you can see that
FCP or LCP is only . 3 seconds 

2366
02:53:32,829 --> 02:53:36,615
after FCP. So FCP or first 
contentful paint is the primary

2367
02:53:36,615 --> 02:53:38,615
bottleneck.

2368
02:53:44,617 --> 02:53:47,912
Finally, a lot of cases aren't 
going to be so cut and dry. So 

2369
02:53:47,912 --> 02:53:50,207
this one, time to first byte is
good, but FCP and LCP could be 

2370
02:53:50,207 --> 02:53:52,292
worked on. All right. So those 
are some examples.

2371
02:53:55,484 --> 02:53:57,484
Because this is probably the 
stuff you've seen less of and

2372
02:53:58,579 --> 02:54:00,579
in the past, you maybe seen 
more of like just the 

2373
02:54:00,579 --> 02:54:02,579
lighthouse stuff. 

2374
02:54:03,567 --> 02:54:06,269
So I use that information, and 
then, finally bring up my lab 

2375
02:54:06,269 --> 02:54:08,269
tool to dig in deeper.

2376
02:54:10,925 --> 02:54:12,925
So once I have those 
directional clues, I will dig 

2377
02:54:12,925 --> 02:54:16,421
in deeper. So for Shopify 
sites, Shopify uses liquid, but

2378
02:54:16,421 --> 02:54:18,421
of course, there's a lot more.

2379
02:54:19,715 --> 02:54:21,715
We have a server side, it's not
static generated.

2380
02:54:23,315 --> 02:54:25,315
We do use liquid, and I've had 
an article about how to 

2381
02:54:25,315 --> 02:54:27,315
optimize Shopify sites.

2382
02:54:28,426 --> 02:54:30,531
A the lot of these issues are 
going to be similar to the 

2383
02:54:30,531 --> 02:54:32,531
general web if you're not using
a frontend framework. 

2384
02:54:34,334 --> 02:54:37,433
Although, the issues for time 
to first byte being slow on a 

2385
02:54:37,433 --> 02:54:39,433
static

2386
02:54:39,536 --> 02:54:42,837
site might be more, for 
example, around your provider. 

2387
02:54:42,837 --> 02:54:46,042
So like, if you're using GitHub
pages, I don't think that's on 

2388
02:54:46,042 --> 02:54:48,042
a CDN, but if you use Netlify

2389
02:54:51,054 --> 02:54:53,054
, there's a CDN for that and 
also cloud front pages.

2390
02:54:55,367 --> 02:54:57,367
Depending on your service, that
could impact your time to first

2391
02:54:57,367 --> 02:54:59,367
byte.

2392
02:54:59,367 --> 02:55:01,367
But the FCP and LCP, especially
for eCommerce

2393
02:55:03,677 --> 02:55:05,677
sites might be common reasons 
why a site might be slow 

2394
02:55:05,677 --> 02:55:07,677
compared to the Shopify sites. 

2395
02:55:09,182 --> 02:55:11,182
So, of course, this is a whole 
other talk and we only have 22 

2396
02:55:11,182 --> 02:55:13,182
minutes. I'm not going to go 
into the different lab tools.

2397
02:55:15,995 --> 02:55:17,995
But what I'm trying to tell you
is, DOENTS start

2398
02:55:19,197 --> 02:55:22,402
don't start with just 
Lighthouse or your lab tool, 

2399
02:55:22,402 --> 02:55:24,402
you might go down

2400
02:55:25,609 --> 02:55:27,609
the rabbit hole with minimizing
your main thread work, which is

2401
02:55:27,609 --> 02:55:29,609
still important and a

2402
02:55:29,609 --> 02:55:31,609
valid issue, and especially 
considering, because I think 

2403
02:55:31,609 --> 02:55:33,609
this site has INP issues, as 
well. 

2404
02:55:35,219 --> 02:55:37,219
But instead, I want you to 
start with the real user data. 

2405
02:55:37,219 --> 02:55:39,219
Get your directional clues.

2406
02:55:40,818 --> 02:55:42,818
And then, dive deeper with lab,
only on the specific issues

2407
02:55:44,877 --> 02:55:46,877
, essentially, try to get your 
heavy hitters first.

2408
02:55:48,378 --> 02:55:52,454
Don't worry what those 
microoptimizations first. 

2409
02:55:52,454 --> 02:55:54,454
And then, in the end, 
hopefully, you'll have more 

2410
02:55:54,454 --> 02:55:56,454
time to focus on that hobby 
that you've been neglecting.

2411
02:55:58,653 --> 02:56:01,740
So thanks, again, you can find 
out more about me on Sia. codes.

2412
02:56:01,740 --> 02:56:03,740
All right.

2413
02:56:03,934 --> 02:56:05,934
That's all I have, Mike. I have
no idea how we're doing on 

2414
02:56:05,934 --> 02:56:07,934
time. 
[ Laughter ] 

2415
02:56:08,917 --> 02:56:10,917
â‰« MIKE: We've got a few 
minutes. 

2416
02:56:10,917 --> 02:56:12,917
â‰« SIA: All right. Go ahead. 
â‰« MIKE: That was great.

2417
02:56:14,801 --> 02:56:17,891
I think just that context on 
like, I'm definitely guilty of 

2418
02:56:17,891 --> 02:56:20,574
doing Lighthouse and then, I 
love a good to do list. OK. 

2419
02:56:20,574 --> 02:56:22,574
This is my work. I'm going to 
-- 

2420
02:56:24,761 --> 02:56:26,761
â‰« SIA: And it's not bad, it's 
just like a computer looking 

2421
02:56:26,761 --> 02:56:28,761
for common flags . But it can't
necessarily tell you, like, the

2422
02:56:28,761 --> 02:56:31,267
primary reason why your site 
might be slow. So -- 

2423
02:56:31,267 --> 02:56:33,267
â‰« MIKE: That's it.

2424
02:56:34,762 --> 02:56:37,863
So my question is you kind of 
mentioned this in your talk 

2425
02:56:37,863 --> 02:56:42,861
that it'll change per use case,
but what are the most -- where 

2426
02:56:42,861 --> 02:56:47,158
do you typically see the most 
problems? And what are -- is 

2427
02:56:47,158 --> 02:56:49,158
there like a common thread

2428
02:56:49,158 --> 02:56:52,743
in those performance problems? 
â‰« SIA: Oh, well, yeah, I think 

2429
02:56:52,743 --> 02:56:55,948
it really depends on what 
you're looking at, so like I 

2430
02:56:55,948 --> 02:56:57,948
said because I work

2431
02:56:59,046 --> 02:57:02,141
at Shopify and most of our 
sites are on our Shopify 

2432
02:57:02,141 --> 02:57:04,141
liquid, essentially, your 
standard, standard system.

2433
02:57:06,042 --> 02:57:08,042
We also have Hydrogen, which is
a headless tool

2434
02:57:08,741 --> 02:57:12,143
. But there's common thread. We
actually used crux DATD data

2435
02:57:14,947 --> 02:57:17,049
with http archive. It might be 
hard with your personal sites 

2436
02:57:17,049 --> 02:57:19,049
to get in there. 

2437
02:57:20,643 --> 02:57:22,643
But you can also use free tools
like the

2438
02:57:23,848 --> 02:57:27,447
web vitals NPM package to 
collect your own information. 

2439
02:57:27,447 --> 02:57:29,447
But what we saw using that 
information was that on Shopify

2440
02:57:29,447 --> 02:57:31,447
sites, this is not like the 
rest of the web. Like, 80%.

2441
02:57:33,990 --> 02:57:37,994
We hit a peak of 80% of Shopify
liquid sites were lazy loading 

2442
02:57:37,994 --> 02:57:41,191
their contentful paint image .

2443
02:57:43,388 --> 02:57:47,492
The rest of the web was around 
20%. We knew that was a 

2444
02:57:47,492 --> 02:57:49,492
Shopify-specific systemic issue
and it was because in our

2445
02:57:50,628 --> 02:57:52,628
liquid API, we didn't have

2446
02:57:53,721 --> 02:57:56,822
the ability for the way 
Shopify's rendered, we can have

2447
02:57:56,822 --> 02:57:58,822
sections repeat, so 
essentially,

2448
02:57:59,919 --> 02:58:01,919
if you had a template in 
11ty...

2449
02:58:05,035 --> 02:58:07,035
what do we call it?

2450
02:58:08,331 --> 02:58:11,037
A it's not template for the 
whole page, but something 

2451
02:58:11,037 --> 02:58:13,037
you're reusing, but you don't 
know where it is.

2452
02:58:14,334 --> 02:58:16,334
So you know you don't want to 
lazy load above the fold, but 

2453
02:58:16,334 --> 02:58:18,334
you the do -- I'm probably 
going way too in-depth here.

2454
02:58:18,334 --> 02:58:22,952
â‰« MIKE: No. 
â‰« SIA: I added into the API the

2455
02:58:22,952 --> 02:58:26,212
ability to know where your 
section on the page so you can 

2456
02:58:26,212 --> 02:58:28,212
be smarter about how you load 
that thing. 

2457
02:58:28,212 --> 02:58:30,212
â‰« MIKE: Interesting. That's so 
cool.

2458
02:58:33,688 --> 02:58:35,688
Like that work is going to 
influence millions of sites.

2459
02:58:40,393 --> 02:58:42,393
And really shift the 
performance of the web because 

2460
02:58:42,393 --> 02:58:44,393
of that.

2461
02:58:44,393 --> 02:58:46,393
That's -- such important and 
powerful work. 

2462
02:58:48,275 --> 02:58:52,886
â‰« SIA: It's definitely exciting
when you can find something 

2463
02:58:52,886 --> 02:58:56,883
like that and fix it and get 
everyone back on track. 

2464
02:58:56,883 --> 02:58:58,883
â‰« MIKE: Very cool.

2465
02:59:00,177 --> 02:59:02,177
If anyone has anymore questions
or

2466
02:59:03,273 --> 02:59:05,882
wants to talk about what 
performance for Sia, reach out 

2467
02:59:05,882 --> 02:59:07,882
to her on Mastodon. 

2468
02:59:10,273 --> 02:59:12,273
â‰« SIA: Yeah, if you go to sia.

2469
02:59:13,663 --> 02:59:15,968
codes, I'm on Blue Sky, but 
that's mostly for shit posts 

2470
02:59:15,968 --> 02:59:17,968
like Henry was talking about. 

2471
02:59:19,560 --> 02:59:21,560
â‰« MIKE: Thanks, Sia. 
â‰« SIA: Thank you. 

2472
02:59:23,954 --> 02:59:27,251
â‰« MIKE: We're going to roll 
straight into our next speaker.

2473
02:59:27,251 --> 02:59:29,251
Next up, I've got Dan

2474
02:59:30,860 --> 02:59:32,860
Sinker, a designer from 
Chicago.

2475
02:59:34,955 --> 02:59:36,955
He's made a lot of things over 
the years, the underground

2476
02:59:38,562 --> 02:59:41,752
culture magazine, Punk Planet, 
Foul Mouth Twitter Account,

2477
02:59:44,745 --> 02:59:47,937
Mia Emmanuel, the long running 
podcast, and the journal

2478
02:59:50,050 --> 02:59:52,050
ist tech Open News.

2479
02:59:53,345 --> 02:59:56,552
But nothing is quite like 
Question mark, the internet 

2480
02:59:56,552 --> 02:59:58,552
spanning multiple platform 
novel he launched a year ago

2481
02:59:59,757 --> 03:00:01,757
with novelist Joe M eno.

2482
03:00:04,652 --> 03:00:06,652
Today, Dan's going to be 
talking about building a town 

2483
03:00:06,652 --> 03:00:08,652
that doesn't exist. 

2484
03:00:14,356 --> 03:00:17,031
[ Applause ]  
â‰« DAN: Hey. 

2485
03:00:17,031 --> 03:00:19,031
â‰« MIKE: Great to have you here.
â‰« DAN: Thank you so much.

2486
03:00:21,904 --> 03:00:23,904
I feel like I'm a dog in a pair
of pants at this conference

2487
03:00:23,904 --> 03:00:25,904
, but I'm very happy to be 
here. 

2488
03:00:25,904 --> 03:00:27,904
â‰« MIKE: I like pants on dogs.

2489
03:00:28,679 --> 03:00:30,679
And I like, I like hearing from
lots of different points of 

2490
03:00:30,679 --> 03:00:32,679
view about 11ty. So really 
excited for this one. 

2491
03:00:33,252 --> 03:00:36,152
â‰« DAN: Awesome. I'm super 
excited to be here. Let's do 

2492
03:00:36,152 --> 03:00:38,152
it.

2493
03:00:38,402 --> 03:00:40,402
Let's go.

2494
03:00:45,303 --> 03:00:47,303
The town of Question Mark, 
Ohio, is

2495
03:00:48,712 --> 03:00:51,916
located in the Southeast corner
of the state 12 miles north of 

2496
03:00:51,916 --> 03:00:53,916
the Ohio River, nestled

2497
03:00:55,324 --> 03:00:57,324
to woods, next to a 
breathtaking waterfall, a

2498
03:00:58,414 --> 03:01:01,620
monument of battalion of 
British soldiers and the 

2499
03:01:01,620 --> 03:01:03,620
remains of a French settlement 
that disappeared a hundred 

2500
03:01:03,620 --> 03:01:07,700
years before that. 
The quaint downtown of question

2501
03:01:07,700 --> 03:01:09,700
mark features a beautiful town 
hall

2502
03:01:11,107 --> 03:01:13,107
rebuilt three times after fires
destroyed the previous two, a

2503
03:01:14,516 --> 03:01:16,516
magnificent library, and a 
clock tower that stopped 

2504
03:01:16,516 --> 03:01:18,516
working in the 1960s . 

2505
03:01:19,009 --> 03:01:22,815
These were all built from the 
fortunes of the Wylie Family, 

2506
03:01:22,815 --> 03:01:26,011
town founders and creators of 
the Wiley Safety

2507
03:01:30,515 --> 03:01:32,515
Envelope now in the cemetery at
the northwest corner of town

2508
03:01:33,608 --> 03:01:36,913
. The drive-in theater, bowling
alley, convenience store, two

2509
03:01:39,907 --> 03:01:41,907
cults, four murders, and seven

2510
03:01:43,512 --> 03:01:45,512
mysterious voids that sit at 
the spiralling center of a 

2511
03:01:45,512 --> 03:01:47,512
series of mysteries that have 
beset the town over the last 

2512
03:01:47,512 --> 03:01:49,512
year. 

2513
03:01:50,306 --> 03:01:52,306
The town of Question Mark, 
Ohio, doesn't exist.

2514
03:01:54,400 --> 03:01:57,487
It's a creation of myself and 
the novelist Joe Meno, launched

2515
03:01:57,487 --> 03:01:59,487
in April of last year and

2516
03:02:00,185 --> 03:02:02,185
has unfolded on a near daily 
basis in the year since. 

2517
03:02:03,773 --> 03:02:06,980
It wraps, actually, in the next
couple of weeks . The story of 

2518
03:02:06,980 --> 03:02:08,980
Question Mark has been told 
across the internet.

2519
03:02:10,967 --> 03:02:12,967
On Instagram, Twitter threads,
The town of Question Mark, 

2520
03:02:12,967 --> 03:02:14,967
Ohio, doesn't exist. It's a 
creation of myself and the 

2521
03:02:14,967 --> 03:02:16,967
novelist Joe Meno, launched in 
April of last year and has 

2522
03:02:16,967 --> 03:02:18,967
unfolded on a near daily basis 
in the year since. 

2523
03:02:18,967 --> 03:02:20,967
It wraps, actually, in the next
couple of weeks. The story of 

2524
03:02:20,967 --> 03:02:22,967
Question Mark has been told 
across the internet. On 

2525
03:02:22,967 --> 03:02:24,967
Instagram, Twitter threads, 
over email, on the phone, and 

2526
03:02:24,967 --> 03:02:26,967
most immersively, on the web, 
where it's unfolded across a 

2527
03:02:26,967 --> 03:02:28,967
sprawling collection of 
websites, over 40 in all , that

2528
03:02:28,967 --> 03:02:30,967
have played out like chapters 
in a novel, advancing the main 

2529
03:02:30,967 --> 03:02:32,967
story while also telling their 
own at the same time. 

2530
03:02:32,967 --> 03:02:34,967
There's no template for what 
we're doing. I mean that in 

2531
03:02:34,967 --> 03:02:36,967
terms of the fact that nobody 
has told the story like this 

2532
03:02:36,967 --> 03:02:38,967
for this long in realtime 
across so many different 

2533
03:02:38,967 --> 03:02:41,277
spaces. But I also mean it 
literally. 

2534
03:02:41,277 --> 03:02:43,277
Each site is built from 
scratch.

2535
03:02:46,172 --> 03:02:48,172
There's no cookie cutter 
approach to any of it because

2536
03:02:49,576 --> 03:02:52,666
each site is unique, each plays
a singular role in the story 

2537
03:02:52,666 --> 03:02:54,666
and each site also has to stand
alone as something real and

2538
03:02:54,666 --> 03:02:57,245
believable. 
Something that's marked with 

2539
03:02:57,245 --> 03:02:59,245
the

2540
03:03:00,648 --> 03:03:02,648
age and ewe till I

2541
03:03:03,459 --> 03:03:06,746
utility of a work a day 
website. John colton who wrote 

2542
03:03:06,746 --> 03:03:08,746
a song for the story said we 
were

2543
03:03:09,951 --> 03:03:11,951
building things as much 
artifact as they were art. 

2544
03:03:11,951 --> 03:03:13,951
That's exactly right.

2545
03:03:14,416 --> 03:03:16,416
Everything we made in Question 
Mark needed to feel lived in 

2546
03:03:16,416 --> 03:03:18,416
and real. 

2547
03:03:19,214 --> 03:03:21,214
In that way, each site is a 
puzzle, a puzzle for the 

2548
03:03:21,214 --> 03:03:23,214
audience to solve, but also, a 
puzzle for Joe and I as the 

2549
03:03:23,214 --> 03:03:25,809
creators. How to make it work, 
how to tell the right story, 

2550
03:03:25,809 --> 03:03:27,809
how to make

2551
03:03:29,413 --> 03:03:32,315
it happen across multiple 
screen sizes, and how to do it 

2552
03:03:32,315 --> 03:03:34,315
in a turnaround time measured 
in days or sometimes even 

2553
03:03:34,315 --> 03:03:36,315
hours. 
The key was to keep things 

2554
03:03:36,315 --> 03:03:38,315
simple.

2555
03:03:39,604 --> 03:03:41,604
Each site was static, either 
straight HTML, manually 

2556
03:03:41,604 --> 03:03:43,604
deployed on Netlify, or when a 
site required a

2557
03:03:46,818 --> 03:03:48,818
more complicated structure like
the newspaper with over 150

2558
03:03:49,917 --> 03:03:51,917
stories that span 90 years of 
the town's history, that's 

2559
03:03:51,917 --> 03:03:53,917
where 11ty came in. 

2560
03:03:54,521 --> 03:03:56,521
Beyond that, all of our styles,
we're using tail

2561
03:03:58,731 --> 03:04:01,832
wind CSS, most interactions 
were built with Alpine jsx, I 

2562
03:04:01,832 --> 03:04:03,832
needed everything in a single 
index

2563
03:04:04,246 --> 03:04:06,246
file because keeping track of 
anything else was near 

2564
03:04:06,246 --> 03:04:08,246
impossible. 

2565
03:04:09,443 --> 03:04:11,443
While keeping it simple was 
crucial to the endeavor, the 

2566
03:04:11,443 --> 03:04:13,443
reality is a lot of what we did
with Question Mark, we couldn't

2567
03:04:13,634 --> 03:04:15,634
have pulled off a year ago.

2568
03:04:18,330 --> 03:04:20,330
We ended up leaning on 
generative AI tools for imagery

2569
03:04:20,330 --> 03:04:22,330
more than we thought. And some 
of the writing and coding.

2570
03:04:24,615 --> 03:04:26,615
In pushing them to see what was
possible with the tools

2571
03:04:28,229 --> 03:04:30,229
, I actually learned pretty 
clearly they're just like any 

2572
03:04:30,229 --> 03:04:32,229
other. And skilled hands, you 
can do pretty incredible 

2573
03:04:32,229 --> 03:04:34,229
things.

2574
03:04:36,034 --> 03:04:38,034
Of course, they are not perfect
in many, many ways, but for two

2575
03:04:38,034 --> 03:04:40,034
people with no budget to 
imagine a world in near 

2576
03:04:40,034 --> 03:04:42,034
realtime, it was liberating. 

2577
03:04:44,040 --> 03:04:46,247
We used all of this, old 
school, HTML, new school large 

2578
03:04:46,247 --> 03:04:48,247
language models in service of 
story.

2579
03:04:50,544 --> 03:04:52,544
The story of Violet

2580
03:04:54,555 --> 03:04:56,555
Bookman, a 17-year-old trying 
to find her neighbor's cat Mr. 

2581
03:04:56,555 --> 03:04:58,555
Business.

2582
03:04:58,848 --> 03:05:00,848
As readers, that's where we 
meet her and we follow her 

2583
03:05:00,848 --> 03:05:02,848
adventures through town. We 
help her to solve mysteries and

2584
03:05:02,848 --> 03:05:05,535
find allies, even as the story 
grows bigger and darker than a 

2585
03:05:05,535 --> 03:05:07,535
missing cat. 

2586
03:05:10,032 --> 03:05:13,129
But the real story of Question 
Mark is one of grief, of 

2587
03:05:13,129 --> 03:05:16,226
wishing you could return to a 
past that felt better, felt 

2588
03:05:16,226 --> 03:05:18,226
more whole, but realize

2589
03:05:20,432 --> 03:05:22,439
ing that to grieve is really to
move forward in spite of 

2590
03:05:22,439 --> 03:05:24,439
everything.

2591
03:05:24,439 --> 03:05:27,235
That pattern, this is what the 
story's about, and this is what

2592
03:05:27,235 --> 03:05:29,235
it's really about

2593
03:05:30,654 --> 03:05:32,654
. How we approached every site 
that we built.

2594
03:05:35,351 --> 03:05:37,351
There was the garbage dump, one
of the more complicated and

2595
03:05:39,558 --> 03:05:42,659
janky builds that let readers 
dig through hundreds of items 

2596
03:05:42,659 --> 03:05:44,659
of trash to uncover a long 
buried container of

2597
03:05:44,659 --> 03:05:46,858
toxic sludge. But really, the 
dump was the story the town's 

2598
03:05:46,858 --> 03:05:48,858
long time

2599
03:05:49,960 --> 03:05:51,960
mayor finally coming to terms 
with the scale of her dead 

2600
03:05:51,960 --> 03:05:53,960
husband's corruption. 

2601
03:05:55,771 --> 03:05:57,771
There was the experimental crop
stations

2602
03:05:58,866 --> 03:06:00,866
online course catalog, where 
you could actually take an 

2603
03:06:00,866 --> 03:06:02,875
entire course on experimental 
biology if you wanted to, but 

2604
03:06:02,875 --> 03:06:05,961
the real goal was to take and 
fail the employee security exam

2605
03:06:05,961 --> 03:06:07,961
in order to free

2606
03:06:09,054 --> 03:06:11,935
the sentient bean made of light
known as queuey. 

2607
03:06:15,123 --> 03:06:17,123
There was the Question Mark 
motel, which isn't coming up in

2608
03:06:17,123 --> 03:06:19,123
my slides. There it is.

2609
03:06:20,796 --> 03:06:22,796
The Question Mark Motel, which 
actually advanced four 

2610
03:06:22,796 --> 03:06:25,980
different stories on a single 
page. Giving readers back story

2611
03:06:25,980 --> 03:06:27,980
on a number of different 
characters simply by clicking 

2612
03:06:27,980 --> 03:06:29,980
on the room. But really, it was
the story of one room. 

2613
03:06:33,683 --> 03:06:37,794
Room O, and the cult that had 
taken up residence there. And 

2614
03:06:37,794 --> 03:06:41,095
their plan to commit a murder 
on the eclipse. And then, there

2615
03:06:41,095 --> 03:06:43,095
was Bookman's music.

2616
03:06:44,392 --> 03:06:47,488
The music store run by Violet 
Bookman's father . We knew we 

2617
03:06:47,488 --> 03:06:49,488
wanted to bring readers into 
the store

2618
03:06:50,695 --> 03:06:52,695
the same way we brought readers
into the ice cream shop, the

2619
03:06:53,593 --> 03:06:55,593
chicken joint and the pet shop 
and many other locations in 

2620
03:06:55,593 --> 03:06:57,593
town. 
We also wanted to reveal a fun 

2621
03:06:57,593 --> 03:06:59,593
detail about

2622
03:07:00,399 --> 03:07:02,399
Todd Bookman, he was in a one 
hit wonder band

2623
03:07:03,489 --> 03:07:06,874
called Matrix who charted with 
their song called ticking away.

2624
03:07:06,874 --> 03:07:08,874
Jonathan Colton wrote and 
recorded that song for us.

2625
03:07:09,257 --> 03:07:12,550
What was the site really about?
It was about a way to explore 

2626
03:07:12,550 --> 03:07:14,550
the distance between

2627
03:07:16,155 --> 03:07:18,155
Violet and her father that 
emerged in the shadow

2628
03:07:18,564 --> 03:07:22,152
of the death of her mother four
years ago. 

2629
03:07:22,152 --> 03:07:24,152
We hid that story throughout 
the site and encouraged people 

2630
03:07:24,152 --> 03:07:26,738
to interact and explore. Fill 
out the form for music lessons,

2631
03:07:26,738 --> 03:07:28,738
and you

2632
03:07:29,430 --> 03:07:32,724
get an entry from Violet's 
journals. Start inquiring about

2633
03:07:32,724 --> 03:07:34,724
instruments, and you'd get 
another

2634
03:07:34,938 --> 03:07:37,633
entry delivered line by line. 
You learn how distant she and 

2635
03:07:37,633 --> 03:07:39,633
her dad have become.

2636
03:07:40,924 --> 03:07:42,924
She writes, maybe I'm just 
afraid to have a relationship 

2637
03:07:42,924 --> 03:07:44,924
with him because that would 
mean admitting my mom isn't 

2638
03:07:44,924 --> 03:07:47,530
ever coming back. On the about 
page, we

2639
03:07:51,043 --> 03:07:53,043
reversed that point of view and
hear from Violet's father.

2640
03:07:54,337 --> 03:07:57,149
Click on the images of his late
wife and Violet as a child, and

2641
03:07:57,149 --> 03:07:59,149
you learn how he's been dealing
with the death. 

2642
03:08:00,740 --> 03:08:02,740
I know I've been distant, he 
writes, but I know both of

2643
03:08:03,834 --> 03:08:07,222
us needed to find answers in 
our own way. I know I've been 

2644
03:08:07,222 --> 03:08:09,222
afraid to talk about the pain 
both of us are dealing with and

2645
03:08:10,426 --> 03:08:12,426
I know in just a few months, 
she's going to be leaving for 

2646
03:08:12,426 --> 03:08:14,426
college.

2647
03:08:15,616 --> 03:08:17,999
The Bookmans' music site came 
together in two days. We 

2648
03:08:17,999 --> 03:08:20,990
started with the story and all 
grew from there. 

2649
03:08:20,990 --> 03:08:22,990
It launched and we were already
on to the next chapter.

2650
03:08:24,923 --> 03:08:27,621
There are dozens of examples 
like this. Because nothing in 

2651
03:08:27,621 --> 03:08:29,621
Question Mark is what it 
appears.

2652
03:08:30,914 --> 03:08:32,914
Almost everything has a deeper 
connection to the story or to

2653
03:08:33,812 --> 03:08:35,812
the characters or to the theme 
of loss and grief. 

2654
03:08:39,811 --> 03:08:41,811
I have made a lot of websites 
in the last year, and I will be

2655
03:08:41,811 --> 03:08:43,811
honest with you, I code with a 
cat caught in a paper

2656
03:08:43,811 --> 03:08:46,706
bag. I am not here to tell you 
about web standards or creating

2657
03:08:49,700 --> 03:08:52,800
elegant, efficient code, lift 
the hood on any of these sites 

2658
03:08:52,800 --> 03:08:57,996
that I've made, and they are a 
horror show, but that is OK. 

2659
03:08:57,996 --> 03:09:01,089
Because every site worked for 
what it needed to be. A small 

2660
03:09:01,089 --> 03:09:03,089
part in a larger whole.

2661
03:09:04,582 --> 03:09:07,729
Sure, they were janky as hell, 
but they were sites that 

2662
03:09:07,729 --> 03:09:09,729
thousands of people wanted to 
go to and engage

2663
03:09:09,729 --> 03:09:11,729
in. They definitely did not a 
adhere to best

2664
03:09:14,716 --> 03:09:16,716
practices, but instead, they 
offered a doorway into a world 

2665
03:09:16,716 --> 03:09:18,716
that people wanted to live 
inside. 

2666
03:09:21,601 --> 03:09:23,601
I love this post from one of 
the folks on

2667
03:09:24,694 --> 03:09:27,000
the Discord server dead dicated
to unraveling the mysteries.

2668
03:09:30,187 --> 03:09:32,187
I struggle to make my brain 
understand that I can't get on 

2669
03:09:32,187 --> 03:09:34,187
a plane, go over there and sort
it all out myself, it's so real

2670
03:09:34,187 --> 03:09:36,187
to me. 

2671
03:09:38,694 --> 03:09:41,790
This should be the aim of 
anything that you build . 

2672
03:09:41,790 --> 03:09:43,790
Create something that feels so 
real

2673
03:09:43,996 --> 03:09:45,996
that someone has to struggle to
remember that it isn't.

2674
03:09:49,089 --> 03:09:51,089
That is making a website or 40 
of them real good. 

2675
03:09:54,184 --> 03:09:56,184
It doesn't matter if you've got
the latest skills or if you 

2676
03:09:56,184 --> 03:09:58,184
know the cutting edge approach 
to building or the right 

2677
03:09:58,184 --> 03:10:00,972
framework or whatever. I had 
none hof that when I started, 

2678
03:10:00,972 --> 03:10:02,972
and I still do not a year 
later. 

2679
03:10:06,368 --> 03:10:08,368
Instead, have something to say.

2680
03:10:10,268 --> 03:10:12,268
Figure out the best possible 
way to say it. The rest will 

2681
03:10:12,268 --> 03:10:14,268
follow.

2682
03:10:16,248 --> 03:10:18,248
Every day Joe and I got to sit 
down and ask ourselves

2683
03:10:18,248 --> 03:10:20,467
what's the story we want to 
tell? And how can we build 

2684
03:10:20,467 --> 03:10:22,467
something amazing to tell it?

2685
03:10:24,566 --> 03:10:27,259
And then we'd ask, what's the 
real story we're telling? And 

2686
03:10:27,259 --> 03:10:29,259
how does this artifact we've 
created service that? 

2687
03:10:30,055 --> 03:10:32,055
There's that pattern, again, 
right? What's the story? What's

2688
03:10:32,055 --> 03:10:34,055
the real story?

2689
03:10:36,149 --> 03:10:38,149
And that's true with this talk,
too

2690
03:10:39,556 --> 03:10:42,658
. Because, yes, this talk is 
about the work and love and 

2691
03:10:42,658 --> 03:10:44,658
care that went into building

2692
03:10:45,669 --> 03:10:47,669
ing Question Mark for the last 
year. But what it's really 

2693
03:10:47,669 --> 03:10:49,669
about is this.

2694
03:10:49,669 --> 03:10:51,669
The web is still magical. 

2695
03:10:53,256 --> 03:10:55,256
It's still a place where you 
can build everything you want, 

2696
03:10:55,256 --> 03:10:57,256
even a whole town.

2697
03:10:58,764 --> 03:11:00,764
There's no permission to get, 
no hoops to jump through, no 

2698
03:11:00,764 --> 03:11:02,764
risk of a platform shutting you
down, you don't

2699
03:11:05,076 --> 03:11:08,171
need fancy tools or a big team,
you just need your imagination,

2700
03:11:08,171 --> 03:11:12,186
a text file, a doc type HTML 
tag and the whole world is 

2701
03:11:12,186 --> 03:11:14,186
there for you to make. 

2702
03:11:15,975 --> 03:11:17,975
It doesn't matter if it's 
imperfect,

2703
03:11:18,780 --> 03:11:21,483
doesn't matter if the edges are
rough. Rough edges are just our

2704
03:11:21,483 --> 03:11:23,483
humanity showing through.

2705
03:11:24,780 --> 03:11:28,187
When people wax nostalgic for 
the web, for the hamster dance 

2706
03:11:28,187 --> 03:11:31,600
or MySpace profiles, what 
they're nostalgic for is the 

2707
03:11:31,600 --> 03:11:33,600
web

2708
03:11:33,600 --> 03:11:38,100
before it got all sanded down. 
They're nostalgic for a web 

2709
03:11:38,100 --> 03:11:42,202
that could give you splinters, 
for a web with rough edges. For

2710
03:11:42,202 --> 03:11:44,202
a web that was more human.

2711
03:11:45,491 --> 03:11:47,491
But the story of Question Mark,
the real story is that you 

2712
03:11:47,491 --> 03:11:49,491
can't move backwards . 

2713
03:11:51,553 --> 03:11:53,553
That the past is the past, and 
attempting to return to it 

2714
03:11:53,553 --> 03:11:56,889
never works. And that's OK. 
Because we don't have to.

2715
03:12:00,275 --> 03:12:02,275
The tools to make a web that's 
more human,

2716
03:12:03,594 --> 03:12:05,594
more magical, more amazing are 
not the tools of the past but 

2717
03:12:05,594 --> 03:12:07,594
the tools of right now. 

2718
03:12:10,069 --> 03:12:12,069
There's never been a better 
time to make something, 

2719
03:12:12,069 --> 03:12:14,069
anything, on the web.

2720
03:12:17,046 --> 03:12:19,046
You can build a world, tell a 
story, make things happen big 

2721
03:12:19,046 --> 03:12:22,138
and small, the web is still 
vital, it's still exciting, and

2722
03:12:22,138 --> 03:12:24,138
the rules are there for the 
breaking. 

2723
03:12:24,912 --> 03:12:26,912
Thank you so much.

2724
03:12:31,611 --> 03:12:33,611
â‰« MIKE: So cool.

2725
03:12:35,210 --> 03:12:38,089
I've never seen anything like 
that. That was incredible. 

2726
03:12:40,496 --> 03:12:42,496
â‰« DAN: Neither have I, and I 
made it. 

2727
03:12:42,496 --> 03:12:44,496
â‰« MIKE: Yeah.

2728
03:12:44,496 --> 03:12:47,475
So -- how did this start? Why 
did you decide this platform

2729
03:12:48,783 --> 03:12:52,070
? 
â‰« DAN: So, I have worked with 

2730
03:12:52,070 --> 03:12:54,070
Joe

2731
03:12:55,228 --> 03:12:58,119
for many years on and off. He 
worked with me on the magazine 

2732
03:12:58,119 --> 03:13:01,404
Punk Planet, I put out a couple
of books of his. But we have 

2733
03:13:01,404 --> 03:13:03,404
not collaborated in probably 15
years.

2734
03:13:05,699 --> 03:13:07,699
And we went on a walk on a warm
November, and he was like,

2735
03:13:08,784 --> 03:13:10,784
I have this idea for a novel, 
but I don't want to make it as 

2736
03:13:10,784 --> 03:13:12,858
a book. 
Kind of want it to exist on the

2737
03:13:12,858 --> 03:13:14,858
internet. And I was like, just 
stop, let's do it.

2738
03:13:18,645 --> 03:13:20,645
And then, we figured it out 
from there. You know.

2739
03:13:24,226 --> 03:13:26,226
We did not know what we were 
getting into when we got into 

2740
03:13:26,226 --> 03:13:28,226
it . But it's been a ride.

2741
03:13:34,217 --> 03:13:36,217
â‰« MIKE: Is it a sequential 
story? How do I navigate 

2742
03:13:36,217 --> 03:13:38,217
between the parts of the story?

2743
03:13:39,979 --> 03:13:41,979
â‰« DAN: So there are sort of 
three main channels that the 

2744
03:13:41,979 --> 03:13:43,979
story's told in.

2745
03:13:44,673 --> 03:13:46,673
One is Violet Bookman's 
Instagram

2746
03:13:48,682 --> 03:13:53,061
account @violet bookman, I 
don't remember it right now. 

2747
03:13:53,061 --> 03:13:57,354
And then, there's the town 
website, which is questionmark.

2748
03:13:57,354 --> 03:13:59,354
town, and the town 
announcements that are 

2749
03:13:59,354 --> 03:14:01,354
published from there, there 
have been about 170, 180 town 

2750
03:14:01,354 --> 03:14:03,354
announcements at this point.

2751
03:14:04,026 --> 03:14:06,026
Those are almost always the way
you branch into different 

2752
03:14:06,026 --> 03:14:08,026
websites. 
There's also the kind of sad

2753
03:14:10,889 --> 03:14:12,889
dad cop in town Ron

2754
03:14:15,498 --> 03:14:17,498
Deblosky who you can follow on 
threads now, he was on Twitter,

2755
03:14:17,498 --> 03:14:19,498
but why would he still be 
there?

2756
03:14:19,498 --> 03:14:22,174
And then, there's a mailing 
list you can subscribe to, but 

2757
03:14:22,174 --> 03:14:24,174
the

2758
03:14:25,258 --> 03:14:28,170
best way to get into it, 
actually, is questionmark Ohio.

2759
03:14:31,556 --> 03:14:33,556
com, where we are breaking it 
down week by week as

2760
03:14:34,641 --> 03:14:36,641
episodes, there are 42 episodes
you can read summaries for with

2761
03:14:36,641 --> 03:14:38,641
all of the links there. 

2762
03:14:39,029 --> 03:14:42,317
â‰« MIKE: Very cool. Thanks for 
joining, Dan, it's a 

2763
03:14:42,317 --> 03:14:44,317
fascinating project . 

2764
03:14:44,317 --> 03:14:46,317
â‰« DAN: Thanks for having me. 
See you on the web. 

2765
03:14:46,317 --> 03:14:48,317
â‰« MIKE: See ya.

2766
03:14:48,775 --> 03:14:52,062
All right, we're about to enter
our next silent break. Zach's 

2767
03:14:52,062 --> 03:14:54,062
going to come on, we're going 
to

2768
03:14:54,062 --> 03:14:57,447
draw -- what are we going to 
draw? I'm going to draw a CSS 

2769
03:14:57,447 --> 03:14:59,447
logo.

2770
03:14:59,447 --> 03:15:02,801
All right. So we'll be back 
running in 15 minutes. 

2771
03:30:03,548 --> 03:30:05,548
â‰« MIKE: Got to unmute. We're 
back in action. So we've got 

2772
03:30:05,548 --> 03:30:07,548
our next speaker coming in 5 
minutes.

2773
03:30:09,215 --> 03:30:12,912
So before then, I want to ask 
the chat a question. And this 

2774
03:30:12,912 --> 03:30:16,603
is -- this is a household 
question. In the household 

2775
03:30:16,603 --> 03:30:18,603
category. 

2776
03:30:20,496 --> 03:30:22,496
So when I unload the dishwasher
each day and

2777
03:30:23,587 --> 03:30:25,777
I'm always amazed at how many 
cups we use in a day.

2778
03:30:28,966 --> 03:30:32,960
We need a measurement of like 
cups per person. CPP.

2779
03:30:39,766 --> 03:30:41,766
I think our CPP might be 4 or 
5.

2780
03:30:45,465 --> 03:30:47,465
Which, yeah, that feels like a 
lot.

2781
03:30:48,953 --> 03:30:51,740
I'm wondering what everyone's 
CPP is. 

2782
03:30:54,730 --> 03:30:56,730
While we're waiting for 
answers, let's go over some of 

2783
03:30:56,730 --> 03:30:58,730
the other comments.

2784
03:30:58,730 --> 03:31:02,320
So, thanks for everyone to 
getting into the quiz. I put 

2785
03:31:02,320 --> 03:31:04,320
that together last night.

2786
03:31:05,612 --> 03:31:07,612
It's really cool seeing people 
getting into it . 

2787
03:31:21,796 --> 03:31:23,796
Yeah, it's just been -- it's 
been really cool just

2788
03:31:24,885 --> 03:31:26,885
watching all of these, these 
fantastic talks.

2789
03:31:29,384 --> 03:31:31,384
Like Dan's, most of them have 
blown my mind in some way or 

2790
03:31:31,384 --> 03:31:33,384
another . Dan's talk just

2791
03:31:35,881 --> 03:31:37,881
fascinating, seeing how we can,
you know, we

2792
03:31:38,971 --> 03:31:42,776
often think of 11ty as a tool 
for building some sort of 

2793
03:31:42,776 --> 03:31:44,776
either corporate or personal 
website, but being

2794
03:31:46,185 --> 03:31:48,185
-- telling a story through 
websites is fascinating. OK.

2795
03:31:50,768 --> 03:31:52,768
We've got some cup CPP.

2796
03:31:54,264 --> 03:31:57,650
2, 20 to 5,

2797
03:32:00,960 --> 03:32:03,158
1, two, 2. 5, 1, 4.

2798
03:32:05,353 --> 03:32:07,940
5 with kids driving up the 
average. Yeah. Like, I feel 

2799
03:32:07,940 --> 03:32:12,931
you. Three espresso, one big 
coffee, two glasses

2800
03:32:13,319 --> 03:32:15,319
, at least.

2801
03:32:19,618 --> 03:32:23,018
Man, we're at 15CPP, yeah. We 
have a lot of CPPs.

2802
03:32:28,412 --> 03:32:30,823
One, I would love to be in the 
one CPP category, I just can't 

2803
03:32:30,823 --> 03:32:32,823
do it. I lose my cup somewhere.

2804
03:32:43,530 --> 03:32:46,029
I have a reuseable water bottle
I carry everywhere, but forgot 

2805
03:32:46,029 --> 03:32:48,029
it today. Yeah, that's the 
smart way.

2806
03:32:51,628 --> 03:32:53,628
One cup over multiple days. 
Keep improving the flavor of 

2807
03:32:53,628 --> 03:32:56,313
the coffee. That would be 
interesting.

2808
03:33:04,111 --> 03:33:06,111
Three to four CPP, the real 
measure of our home is BPP, 

2809
03:33:06,111 --> 03:33:08,111
bowls per person.

2810
03:33:09,609 --> 03:33:13,209
We eat bowls of cereal around 
here. Yeah, what's your BPP?

2811
03:33:17,001 --> 03:33:19,001
Zero for me, I use the same 
coffee mug and water and

2812
03:33:19,013 --> 03:33:23,130
tea mug for at least a week at 
a time. 

2813
03:33:23,130 --> 03:33:28,120
Yeah, that's impressive. So, 
yeah, I have

2814
03:33:31,224 --> 03:33:33,224
a friend who, I kind of like 
this philosophy,

2815
03:33:34,311 --> 03:33:37,398
where they just had everyone in
the house just had one cup and 

2816
03:33:37,398 --> 03:33:39,398
one plate and

2817
03:33:39,405 --> 03:33:41,405
one set of cutlery.

2818
03:33:43,903 --> 03:33:45,903
And you were responsible for 
washing your own stuff. 

2819
03:33:49,491 --> 03:33:51,491
And then you never have a dish 
load of, sink full of dishes or

2820
03:33:51,491 --> 03:33:53,491
anything.

2821
03:33:53,491 --> 03:33:55,491
Just sorted. But I don't know 
if I could do that.

2822
03:34:02,835 --> 03:34:04,835
Two per person, three.

2823
03:34:12,138 --> 03:34:14,138
Yeah BPP and PPP, plates per 
person.

2824
03:34:14,138 --> 03:34:16,138
I think I'm good on plates. 
It's the cups that get away on 

2825
03:34:16,138 --> 03:34:18,196
me. OK.

2826
03:34:21,752 --> 03:34:23,752
Let's get into our next 
speaker.

2827
03:34:25,045 --> 03:34:27,045
So it's Adrianna Tan.

2828
03:34:28,342 --> 03:34:30,565
So Adrianna's the director of 
product management San 

2829
03:34:30,565 --> 03:34:32,565
Francisco Digital Services.

2830
03:34:34,055 --> 03:34:36,055
In her free time, she likes to 
build websites for friends and 

2831
03:34:36,055 --> 03:34:38,055
family.

2832
03:34:40,054 --> 03:34:42,054
And causes close to her heart. 

2833
03:34:43,638 --> 03:34:45,638
She's talking about 11ty sites 
for people who don't think 

2834
03:34:45,638 --> 03:34:47,638
they're web developers. 

2835
03:34:49,835 --> 03:34:51,835
[ Applause ] 

2836
03:35:02,362 --> 03:35:04,362
Let me get rid of -- welcome

2837
03:35:04,362 --> 03:35:07,345
, Adrianna. 
â‰« ADRIANNA: I'm excited to be 

2838
03:35:07,345 --> 03:35:09,345
here. 

2839
03:35:09,345 --> 03:35:11,345
â‰« MIKE: I'm really looking 
forward to this one. 

2840
03:35:11,345 --> 03:35:13,345
â‰« ADRIANNA: Great.

2841
03:35:14,196 --> 03:35:17,288
So as I was just introduced, 
I'm the director of product 

2842
03:35:17,288 --> 03:35:19,288
management, I've never been a 
professional web developer but 

2843
03:35:19,288 --> 03:35:21,784
always worked with developers. 
I've always loved hacking web 

2844
03:35:21,784 --> 03:35:23,784
stuff, and I think that --

2845
03:35:24,872 --> 03:35:26,872
for people like me, who have 
always been sort of adjacent to

2846
03:35:28,775 --> 03:35:30,775
technology but not like always 
like knee deep in it, this is 

2847
03:35:30,775 --> 03:35:32,775
sort of like who it's for. 
Some interesting stats.

2848
03:35:35,756 --> 03:35:37,756
Before I started learning 11ty

2849
03:35:38,843 --> 03:35:41,931
, I had maybe built one site 
over five years . It was a 

2850
03:35:41,931 --> 03:35:43,931
Gatsby site, and it made me

2851
03:35:44,940 --> 03:35:48,228
cry, and I just sort of like --
never went back to it. Never 

2852
03:35:48,228 --> 03:35:52,923
wanted to do anything. Didn't 
want to update it, I was 

2853
03:35:52,923 --> 03:35:57,506
fearful  I would break stuff. 
And for various reasons, I 

2854
03:35:57,506 --> 03:35:59,506
started following Zach on 
Twitter and

2855
03:36:00,397 --> 03:36:02,397
I was like, well, this seems 
cool, I should give it a shot. 

2856
03:36:03,887 --> 03:36:05,983
And I've actually built maybe 5
sites over 5 months. So that's 

2857
03:36:05,983 --> 03:36:07,983
been really, really fun. And I 
started thinking, why is that ?

2858
03:36:10,765 --> 03:36:12,765
Why is it I got so far with one
tool but not others?

2859
03:36:15,747 --> 03:36:17,747
I've tried tons of different 
frameworks, site

2860
03:36:19,151 --> 03:36:22,244
generators, and I think for me,
it's that it was just -- it 

2861
03:36:22,244 --> 03:36:24,244
feels so much

2862
03:36:25,326 --> 03:36:27,326
harder, not easier to build a 
site in

2863
03:36:28,531 --> 03:36:32,538
2024 compared to 2000 when, I 
guess, I built my very first 

2864
03:36:32,538 --> 03:36:34,538
website, you know, hacking 
around, changing HTML

2865
03:36:35,427 --> 03:36:37,427
and the CSS and stuff and being
like, this is really fun. 

2866
03:36:40,405 --> 03:36:42,405
But then, at some point, it 
stopped feeling

2867
03:36:43,493 --> 03:36:45,493
fun or it started to feel like 
it was harder to find fun 

2868
03:36:45,493 --> 03:36:48,292
things. And getting to build 
sites with 11ty

2869
03:36:50,599 --> 03:36:52,599
brought back some of that joy.

2870
03:36:54,310 --> 03:36:56,310
So then I started thinking, why
is that? And how can we help 

2871
03:36:56,310 --> 03:36:58,310
other people feel that way?

2872
03:36:58,895 --> 03:37:00,895
The same sense of, OK, this is 
something cool I want to learn,

2873
03:37:00,895 --> 03:37:02,895
again. 

2874
03:37:03,282 --> 03:37:06,374
And my theory is that there's 
probably too much to learn, 

2875
03:37:06,374 --> 03:37:08,374
people are not sure where to 
pick up if you're not in 

2876
03:37:08,374 --> 03:37:10,374
industry, there's so many 
tools, so many frameworks, you 

2877
03:37:10,374 --> 03:37:13,030
need to know a bit of JS to get
going to get anything done at 

2878
03:37:13,030 --> 03:37:17,015
all. 
There's also a lot of conflicts

2879
03:37:17,015 --> 03:37:19,015
advice on what you should do 
and a lot of

2880
03:37:20,106 --> 03:37:23,193
this advice is about how to get
into the industry and how to be

2881
03:37:23,193 --> 03:37:26,178
a web developer ? How to make 
money? And many of us got into 

2882
03:37:26,178 --> 03:37:28,178
it because it was fun. So can 
it be fun, again?

2883
03:37:29,965 --> 03:37:31,965
So I actually really think so. 

2884
03:37:34,154 --> 03:37:36,154
I think that we can sort of 
tweak maybe through 

2885
03:37:36,154 --> 03:37:38,154
documentation and through the 
way we like approach

2886
03:37:40,333 --> 03:37:42,333
tutorials to make 11ty

2887
03:37:43,419 --> 03:37:45,419
approachable to people who are 
not web developers who don't 

2888
03:37:45,419 --> 03:37:47,419
think they are . And, you know,
sometimes,

2889
03:37:49,712 --> 03:37:52,803
I don't like the word like 
nontechnical because it feels 

2890
03:37:52,803 --> 03:37:54,803
like it excludes people who 
don't feel they're technical 

2891
03:37:54,803 --> 03:37:56,803
enough and certainly, for me, I
think one of the reasons why I 

2892
03:37:56,803 --> 03:37:58,803
didn't really

2893
03:37:59,814 --> 03:38:03,219
like go knee deep into web dev 
because growing up, I was told,

2894
03:38:03,219 --> 03:38:05,716
you're a girl, you can't do 
math, you don't know how to do 

2895
03:38:05,716 --> 03:38:07,716
stuff, you shouldn't be a web 
developer. 

2896
03:38:09,293 --> 03:38:12,498
I do think having more 
inclusive approach to things 

2897
03:38:12,498 --> 03:38:14,498
will

2898
03:38:17,903 --> 03:38:21,886
help other people want to learn
this and this seems doable. 

2899
03:38:21,886 --> 03:38:23,886
And when I announced I'm moving
off my

2900
03:38:25,290 --> 03:38:27,290
microblog, I was using a 
microblog thing, which is good,

2901
03:38:27,290 --> 03:38:29,290
by the

2902
03:38:29,290 --> 03:38:31,290
way, I recommend that to people
who don't know how to build 

2903
03:38:31,290 --> 03:38:33,290
sites from scratch.

2904
03:38:33,860 --> 03:38:36,950
For my photography website, and
someone emailed me and said, I 

2905
03:38:36,950 --> 03:38:38,950
want to microblog because you 
used it, it was really cool,

2906
03:38:38,950 --> 03:38:40,950
now 11ty, I also want to try 
that. But I really don't know 

2907
03:38:40,950 --> 03:38:42,950
where to start.

2908
03:38:43,545 --> 03:38:45,545
So how do we get people to 
start here with 11ty?

2909
03:38:48,439 --> 03:38:50,439
So I think that this was the 
right tool because a lot of 

2910
03:38:50,439 --> 03:38:52,439
things are like you said, like

2911
03:38:53,336 --> 03:38:56,720
Zach said earlier, HTML first. 
Many things work like expected.

2912
03:38:56,720 --> 03:38:58,720
It's not filtered through some 
opinionated thing. 

2913
03:38:59,320 --> 03:39:02,812
You can learn as much or as 
little as you want. So could we

2914
03:39:02,812 --> 03:39:06,021
find a way to help people like 
go, here's a bunch of starters,

2915
03:39:06,021 --> 03:39:08,021
here's where you deploy it and 
if you want to know more, 

2916
03:39:08,021 --> 03:39:12,416
figure it out later. And we 
already have friendly 

2917
03:39:12,416 --> 03:39:14,416
communities.

2918
03:39:15,709 --> 03:39:17,709
So how do we, then, sort of 
take that and go maybe a 

2919
03:39:17,709 --> 03:39:19,709
different set

2920
03:39:19,709 --> 03:39:22,407
of people who see themselves as
not web developers need 

2921
03:39:22,407 --> 03:39:24,407
different sort of, like, 
knowledge base or different 

2922
03:39:24,407 --> 03:39:27,906
sort of documentation or 
simplified versions of it. 

2923
03:39:27,906 --> 03:39:31,110
Or they need to ask questions 
at sort of happy hour thing 

2924
03:39:31,110 --> 03:39:33,110
maybe on Discord,

2925
03:39:33,323 --> 03:39:36,417
maybe these are things we can 
do. And I started thinking that

2926
03:39:36,417 --> 03:39:38,417
what would have helped me?

2927
03:39:39,709 --> 03:39:42,798
Even just how I got started in 
January when I was learning 

2928
03:39:42,798 --> 03:39:44,798
11ty, I found

2929
03:39:45,889 --> 03:39:47,889
that I was referencing 
Stephanie

2930
03:39:50,098 --> 03:39:52,187
, I was referencing Bob, like 
11ty from scratch. 

2931
03:39:56,179 --> 03:39:58,179
So there's a lot of stuff that,
you know, I kind of have to put

2932
03:39:58,179 --> 03:40:00,877
together and figure out what 
worked for me. But maybe we can

2933
03:40:00,877 --> 03:40:02,877
sort of help

2934
03:40:04,678 --> 03:40:06,678
curate them for someone that 
feels like an absolute 

2935
03:40:06,678 --> 03:40:08,678
beginner. Maybe we could have a
far more opinionated walk 

2936
03:40:08,678 --> 03:40:10,755
through. Here's a bunch of 
starters, click here, host 

2937
03:40:10,755 --> 03:40:12,755
here, you know,

2938
03:40:14,362 --> 03:40:16,362
sometimes there's decision 
paralysis if we could sort of 

2939
03:40:16,362 --> 03:40:18,362
help to recuse that, maybe 
people could get further with 

2940
03:40:18,362 --> 03:40:22,278
the idea that they can, if they
can get early success, then

2941
03:40:25,274 --> 03:40:27,274
they might be inclined to want 
to try to learn even more.

2942
03:40:28,970 --> 03:40:32,066
I also think it would be cool 
to write more blog posts about 

2943
03:40:32,066 --> 03:40:34,066
things that I learned when I 
was

2944
03:40:34,278 --> 03:40:36,278
learning web dev as well as 
11ty. 

2945
03:40:39,685 --> 03:40:41,685
Really, just beginners, there's
a lot of content out there 

2946
03:40:41,685 --> 03:40:43,685
obviously is very centered at 
web developers.

2947
03:40:44,680 --> 03:40:47,778
But what if we could talk about
why we picked this thing, why 

2948
03:40:47,778 --> 03:40:49,778
we used this tool, what you can
do, and really

2949
03:40:49,778 --> 03:40:52,684
simplify accessible ways. I 
think that would be very 

2950
03:40:52,684 --> 03:40:54,684
explanatory and

2951
03:40:54,684 --> 03:40:56,684
reach a far bigger audience. 

2952
03:40:58,666 --> 03:41:01,759
Maybe there could be pairing or
like buddy system and we could 

2953
03:41:01,759 --> 03:41:03,759
have a special channel just for

2954
03:41:05,765 --> 03:41:07,765
like newbies to get help

2955
03:41:08,861 --> 03:41:12,864
. Those were just ideas that 
came to mind, and I'm 

2956
03:41:12,864 --> 03:41:17,066
presenting this so we can 
discuss what possible paths we 

2957
03:41:17,066 --> 03:41:19,066
could pick up in the future, I

2958
03:41:19,066 --> 03:41:22,541
certainly volunteer myself for 
a part of it. 

2959
03:41:22,541 --> 03:41:24,541
And, you know, really, I'm 
interested in doing this 

2960
03:41:24,541 --> 03:41:26,647
because I think it's important 
to spark joy, again, with the

2961
03:41:29,963 --> 03:41:31,963
web, that right now, if

2962
03:41:33,969 --> 03:41:35,969
the default option for someone 
who doesn't perceive themselves

2963
03:41:35,969 --> 03:41:37,969
to be a developer is to put up 
a squarespace site.

2964
03:41:38,906 --> 03:41:40,906
They don't have very much 
control.

2965
03:41:43,599 --> 03:41:47,008
I think it's hard to go from 
that squarespace pipeline to 

2966
03:41:47,008 --> 03:41:49,008
I'm actually going to learn to 
become a web developer

2967
03:41:49,008 --> 03:41:51,883
or build stuff for fun 
pipeline. 

2968
03:41:51,883 --> 03:41:53,883
And so, how can we sort of help
give people

2969
03:41:54,892 --> 03:41:56,892
the tools or at least 
handlebars to get started, 

2970
03:41:56,892 --> 03:41:58,892
again? On this sort of journey?

2971
03:42:00,677 --> 03:42:02,677
So I personally want to see a 
world in which I

2972
03:42:03,880 --> 03:42:07,882
can build things that are fun, 
maybe even pointless. I don't 

2973
03:42:07,882 --> 03:42:09,882
want to just be productive, I 
don't want to just build work 

2974
03:42:09,882 --> 03:42:11,882
things. I also want to build 
websites, too, for example,

2975
03:42:18,082 --> 03:42:20,082
I'm someone that documents a 
lot of Asian Potato chips I 

2976
03:42:20,082 --> 03:42:23,293
eat. And someone would love an 
Asian potato chip website.

2977
03:42:27,484 --> 03:42:29,484
If I genuinely believe that 
11ty empowers me

2978
03:42:30,093 --> 03:42:32,093
to do fun stuff like this, I 
think it'll be the same for 

2979
03:42:32,093 --> 03:42:34,093
other people. 

2980
03:42:34,093 --> 03:42:37,477
So I'm putting myself out there
as someone who wants to sort of

2981
03:42:37,477 --> 03:42:39,477
help bridge this divide and to 
maybe work on new stuff with

2982
03:42:40,560 --> 03:42:42,770
the team, either in like 
writing more blogs or blog 

2983
03:42:42,770 --> 03:42:44,770
posts to help other people get 
started. 

2984
03:42:46,351 --> 03:42:48,351
So that's all I have.

2985
03:42:49,644 --> 03:42:53,034
â‰« MIKE: Yeah, thanks,

2986
03:42:54,739 --> 03:42:58,033
Adrianna, that was great. And I
think you highlighted that step

2987
03:42:58,033 --> 03:43:01,941
really well where going from

2988
03:43:04,933 --> 03:43:08,021
Squarespace where everything's 
taking care of you to 

2989
03:43:08,021 --> 03:43:10,021
understanding some of the 
fundamentals and being able to 

2990
03:43:10,021 --> 03:43:12,021
build your own site and through
that, having more control, it's

2991
03:43:12,021 --> 03:43:14,021
such an important

2992
03:43:14,525 --> 03:43:16,525
one that we need to figure out 
how we can help people make 

2993
03:43:16,525 --> 03:43:18,525
that jump.

2994
03:43:19,312 --> 03:43:21,312
â‰« ADRIANNA: Yeah, exactly. 

2995
03:43:23,591 --> 03:43:27,080
â‰« MIKE: The web's for everyone,
it's an open platform. And if 

2996
03:43:27,080 --> 03:43:29,080
you're confined to the CMS 
platforms, you don't get to 

2997
03:43:29,080 --> 03:43:32,624
experience that. 
â‰« ADRIANNA: Yeah and it's part 

2998
03:43:32,624 --> 03:43:34,624
of taking back control aspect 
of, you know,

2999
03:43:35,833 --> 03:43:37,833
building an open web that so 
many of us are really big fans 

3000
03:43:37,833 --> 03:43:41,530
of . 
â‰« MIKE: Yeah, and it's so cool 

3001
03:43:41,530 --> 03:43:43,530
hearing about your journey, as 
well,

3002
03:43:45,339 --> 03:43:47,617
like five sites in five months?
â‰« ADRIANNA: Five months. 

3003
03:43:48,808 --> 03:43:51,503
â‰« MIKE: Really cool. I hope you
keep doing that and posting 

3004
03:43:51,503 --> 03:43:53,503
them. 

3005
03:43:53,882 --> 03:43:57,463
â‰« ADRIANNA: Yeah, I definitely 
will, thank you. 

3006
03:43:57,463 --> 03:43:59,463
â‰« MIKE: Thanks for joining us 
today, Adrianna

3007
03:44:00,472 --> 03:44:02,472
. All right.

3008
03:44:03,362 --> 03:44:07,960
So we've got our next talk 
coming up. In five minutes.

3009
03:44:11,546 --> 03:44:13,546
So, yeah, that was --

3010
03:44:14,750 --> 03:44:16,750
I feel like Adrianna really hit
it on the head there.

3011
03:44:19,337 --> 03:44:22,426
Like it's a big -- ask that 
question to the chat . I think 

3012
03:44:22,426 --> 03:44:24,426
she had good ideas

3013
03:44:25,514 --> 03:44:27,514
. But how do we make 
technologies in

3014
03:44:28,523 --> 03:44:33,016
and the web as a platform more 
accessible? Outside of like web

3015
03:44:33,016 --> 03:44:35,016
developers?

3016
03:44:38,707 --> 03:44:40,707
I think,

3017
03:44:44,113 --> 03:44:46,724
I think learning computer 
science and web development at 

3018
03:44:46,724 --> 03:44:48,724
high school should be 
mandatory. 

3019
03:44:54,453 --> 03:44:57,540
It's such an important part of 
the world now that, like, 

3020
03:44:57,540 --> 03:44:59,540
understanding these 
technologies, at least to the 

3021
03:44:59,540 --> 03:45:03,243
high level how they work is 
really important. And it would 

3022
03:45:03,243 --> 03:45:06,431
just give a lot more knowledge 
and control to everyone .

3023
03:45:08,539 --> 03:45:11,928
As a nondeveloper, use GitHub 
is

3024
03:45:14,240 --> 03:45:17,529
not an answer that speaks to 
nondevelopers. Yeah, it's like 

3025
03:45:17,529 --> 03:45:19,529
they can be a big -- it can be 
a

3026
03:45:19,529 --> 03:45:23,126
big jump, for sure. A lot of 
the, I think,

3027
03:45:26,828 --> 03:45:28,828
that's the other thing about 
Git is

3028
03:45:29,917 --> 03:45:33,222
, like, where else do you have 
a workflow

3029
03:45:36,125 --> 03:45:38,125
that -- that Git can do?

3030
03:45:41,427 --> 03:45:43,427
Google Docs, you can have some 
of those elements

3031
03:45:44,639 --> 03:45:48,052
of a Git workflow, you have 
some sort of versioning, yeah, 

3032
03:45:48,052 --> 03:45:51,031
and like a history of changes. 
You can collaborate with other 

3033
03:45:51,031 --> 03:45:53,031
people. 
Those are great.

3034
03:45:55,294 --> 03:45:57,294
And like a lot of those ideas 
come from

3035
03:45:59,204 --> 03:46:01,204
collaboration sort of workflows
from a version control system.

3036
03:46:04,702 --> 03:46:06,702
But when you get into branching
and merge

3037
03:46:08,908 --> 03:46:10,908
ing and pull requests where you
don't necessarily have 

3038
03:46:10,908 --> 03:46:12,908
permission on that document, 
but you can still contribute to

3039
03:46:12,908 --> 03:46:17,235
it, like, Google Docs falls 
down there immediately. 

3040
03:46:21,227 --> 03:46:23,227
So, like for the web and

3041
03:46:24,314 --> 03:46:26,314
for Git, how do we enable these
technologies

3042
03:46:30,521 --> 03:46:32,521
for technical people

3043
03:46:33,613 --> 03:46:37,215
? Git is terrible for new 
folks. Yeah, it can be.

3044
03:46:41,604 --> 03:46:43,604
It can be, like, it can be 
scary

3045
03:46:46,205 --> 03:46:48,205
. You can

3046
03:46:49,295 --> 03:46:52,383
compare Git to DropBox, it's 
easy to get your head around, a

3047
03:46:52,383 --> 03:46:54,383
magical folder, whereas Git,

3048
03:46:55,791 --> 03:46:57,791
I'm suddenly introduced to the 
terminal or some sort

3049
03:46:58,871 --> 03:47:00,871
of application, is like these 
branching lines everywhere, 

3050
03:47:00,871 --> 03:47:02,871
there's like a lot of concepts 
that you have to be introduced 

3051
03:47:02,871 --> 03:47:08,142
to.
Getting comfortable with the 

3052
03:47:08,142 --> 03:47:12,129
terminal interfaces is a hurdle
in my opinion. I'm fine with 

3053
03:47:12,129 --> 03:47:14,129
it, but it can be a challenge 
for newcomers. 

3054
03:47:14,129 --> 03:47:17,011
Yeah, well said. Maybe we can 
show nondevs how to run build 

3055
03:47:17,011 --> 03:47:19,011
scripts

3056
03:47:20,616 --> 03:47:22,616
inside VSCode, yeah, that's 
true, but still

3057
03:47:23,704 --> 03:47:26,911
need VSCode and, like, to use 
the terminal and, I mean, it's 

3058
03:47:26,911 --> 03:47:28,911
also not

3059
03:47:28,911 --> 03:47:31,519
an all or nothing approach. 
Like, if we can make it...

3060
03:47:35,620 --> 03:47:37,620
every step we can make it a 
little bit easier, then more 

3061
03:47:37,620 --> 03:47:39,620
people can access this 
technology. 

3062
03:47:45,201 --> 03:47:47,912
So many don't (inaudible) with 
Git.

3063
03:47:54,708 --> 03:47:58,014
I agree, it's hard to get 
folks,

3064
03:48:02,119 --> 03:48:04,119
I love when all this Git stuff 
involved, running commands and 

3065
03:48:04,119 --> 03:48:06,119
CLI.

3066
03:48:09,625 --> 03:48:11,625
Git is awesome, but 
intimidating, maybe 11ty 

3067
03:48:11,625 --> 03:48:13,625
community can provide a real 
simple introduction.

3068
03:48:16,132 --> 03:48:18,132
Yeah, it's like something we're
thinking about a lot is how can

3069
03:48:20,342 --> 03:48:22,342
we give the power of Git

3070
03:48:24,746 --> 03:48:28,151
abstract a lot of the 
complexity and then introduce, 

3071
03:48:28,151 --> 03:48:31,241
we've had a big debate whether 
we introduce new terms or 

3072
03:48:31,241 --> 03:48:33,350
educate on Git terminology.

3073
03:48:33,936 --> 03:48:37,926
So, like, think of a save 
versus a commit.

3074
03:48:42,919 --> 03:48:46,523
I think it would be more ideal 
if everyone used the same 

3075
03:48:46,523 --> 03:48:48,523
language, which would be 
commit, then there's

3076
03:48:48,938 --> 03:48:50,938
no ambiguity or confusion 
between those.

3077
03:49:00,836 --> 03:49:02,836
Trust me, it would be better, 
too many ideas where the 

3078
03:49:02,836 --> 03:49:04,836
product is harder to understand
and use, we've got to speak to 

3079
03:49:04,836 --> 03:49:06,836
direct impact. For sure. 

3080
03:49:13,608 --> 03:49:15,608
Nice. Yeah, good ideas there.

3081
03:49:19,790 --> 03:49:21,790
DropBox is file storage first,

3082
03:49:23,601 --> 03:49:27,294
yeah, that's a good way to put 
it. And different tradeoffs 

3083
03:49:27,294 --> 03:49:29,294
because

3084
03:49:30,502 --> 03:49:32,502
of that.

3085
03:49:35,079 --> 03:49:37,079
I worked with

3086
03:49:39,680 --> 03:49:41,680
norm engineers at previous jobs
and they used Git GUI.

3087
03:49:43,778 --> 03:49:45,778
I mean, I use a Git GUI. 

3088
03:49:48,363 --> 03:49:51,768
I just like seeing on the 
screen exactly what's happening

3089
03:49:51,768 --> 03:49:53,768
and, like, I use the GitHub 
desktop and

3090
03:49:55,180 --> 03:49:57,180
that gives me confidence I'm 
not going to miss something.

3091
03:50:03,276 --> 03:50:05,276
Welcome to the terminal, it 
doesn't say anything if you get

3092
03:50:05,276 --> 03:50:07,665
it right and screams at you if 
you get it wrong. And also, you

3093
03:50:07,665 --> 03:50:09,665
completely break your computer.
Good luck. 

3094
03:50:09,665 --> 03:50:12,924
[ Laughter ]
That's good. All right, we're 

3095
03:50:12,924 --> 03:50:16,714
ready for our next speaker. We 
have Mayank

3096
03:50:20,020 --> 03:50:22,309
. They're a designer, design 
engineer who cares deeply about

3097
03:50:22,309 --> 03:50:24,309
accessibility and inclusivity.

3098
03:50:26,800 --> 03:50:28,800
They enjoy working with new 
revolutionary web tech such as

3099
03:50:29,605 --> 03:50:31,605
HTML and CSS, hell yeah.

3100
03:50:33,497 --> 03:50:35,497
In their free time, they run 
their mouth on their personal 

3101
03:50:35,497 --> 03:50:38,195
blog. 
So Mayank's talking about Don't

3102
03:50:41,307 --> 03:50:43,307
Fear the Cascade. 
[ Applause ] 

3103
03:50:51,206 --> 03:50:53,206
Mayank, welcome. Great to have 
you here. 

3104
03:50:53,482 --> 03:50:57,863
â‰« MAYANK: Great to be here. 
â‰« MIKE: I sometimes fear the 

3105
03:50:57,863 --> 03:50:59,863
cascade, so I'm interested to 
hear this talk. Over to you. 

3106
03:50:59,863 --> 03:51:01,863
â‰« MAYANK: All right.

3107
03:51:04,005 --> 03:51:06,005
So this talk is titled don't 
fear the cascade.

3108
03:51:08,298 --> 03:51:13,109
And I want to talk about not 
the dish soap, I want to talk 

3109
03:51:13,109 --> 03:51:16,910
about CSS, specifically , CSS.

3110
03:51:20,100 --> 03:51:22,100
The cascade is probably the 
reason why CSS gets such a

3111
03:51:23,306 --> 03:51:27,018
bad on developers.

3112
03:51:28,412 --> 03:51:31,705
That's why I'm giving this 
talk. The cascade doesn't have 

3113
03:51:31,705 --> 03:51:33,705
to be this unknown, scary 
thing. 

3114
03:51:35,490 --> 03:51:37,490
If you haven't been keeping up,
CSS has legitimately become 

3115
03:51:37,490 --> 03:51:39,490
awesome.

3116
03:51:40,594 --> 03:51:42,594
We have the half serial class 
and

3117
03:51:43,797 --> 03:51:45,797
nesting built into CSS now and 
scope styling, how awesome is 

3118
03:51:45,797 --> 03:51:47,797
that?

3119
03:51:49,897 --> 03:51:52,991
And for the first time ever, we
have the tools to manage the 

3120
03:51:52,991 --> 03:51:54,991
cascade in a way that feels 
more hinged for lack of a 

3121
03:51:54,991 --> 03:51:58,370
better word. 
Yeah, this is a

3122
03:51:59,963 --> 03:52:03,251
topic with multiple layers of 
rabbit holes. To keep things 

3123
03:52:03,251 --> 03:52:05,864
digestible, I'll simplify my 
explanations and provide 

3124
03:52:05,864 --> 03:52:07,864
practical suggestions along the
way. 

3125
03:52:10,753 --> 03:52:12,753
So to understand the cascade, 
we're going to start with a 

3126
03:52:12,753 --> 03:52:14,753
completely blank

3127
03:52:14,753 --> 03:52:16,753
slate with minimum amount of 
HTML required to file a page or

3128
03:52:16,753 --> 03:52:18,753
create a page, rather, not even
style it. 

3129
03:52:21,630 --> 03:52:23,630
And let's put a humble button 
element in there. And 

3130
03:52:23,630 --> 03:52:25,723
immediately, we can see that 
this button element still has 

3131
03:52:25,723 --> 03:52:27,836
default styling, even though 
there's not CSS on the page.

3132
03:52:30,633 --> 03:52:32,633
Earlier Miriam explained this 
in more detail.

3133
03:52:34,730 --> 03:52:36,730
But these styles come from the 
user style sheet. 

3134
03:52:38,315 --> 03:52:40,315
And yes, these default styles 
do respect the light and dark 

3135
03:52:40,315 --> 03:52:42,315
team . So my system, operating

3136
03:52:44,809 --> 03:52:46,809
system uses dark theme, this 
button is styled in a dark 

3137
03:52:46,809 --> 03:52:48,809
theme . I won't spoil the 
surprise, because

3138
03:52:50,596 --> 03:52:52,596
I'm sure Sara's going to talk 
about this later today.

3139
03:52:53,887 --> 03:52:55,887
But yeah, you can have dark 
theme without writing CSS . 

3140
03:53:00,184 --> 03:53:03,192
Yeah, the user style sheet is 
literally CSS style but built 

3141
03:53:03,192 --> 03:53:05,192
into the browser, this is where
the cascade starts.

3142
03:53:08,279 --> 03:53:10,592
On this slide, I have a screen 
shot of style sheet.

3143
03:53:13,589 --> 03:53:17,174
I went to their source code and
found it there. 

3144
03:53:17,174 --> 03:53:19,174
It's like hundred lines long.

3145
03:53:20,458 --> 03:53:22,458
Specifically, I'm showing a 
small subsection

3146
03:53:24,354 --> 03:53:27,440
where this affects input, text 
areas, and buttons . And this 

3147
03:53:27,440 --> 03:53:29,440
rule sets up font property, 
this

3148
03:53:31,043 --> 03:53:33,043
font property is probably the 
reason why every CSS reset

3149
03:53:34,127 --> 03:53:37,433
that you see is something like 
inherit, buttons

3150
03:53:40,540 --> 03:53:42,540
just so these elements will 
match their

3151
03:53:43,948 --> 03:53:47,650
font size and font family of 
their surroundings . 

3152
03:53:47,650 --> 03:53:49,650
So, yeah, this is the first 
step in the cascade.

3153
03:53:50,548 --> 03:53:53,045
And then, come author styles. 
This is the more interesting 

3154
03:53:53,045 --> 03:53:55,045
part. This is where the party 
happens.

3155
03:53:58,639 --> 03:54:02,833
Before that, I want to talk 
about shadow DOM really quick.

3156
03:54:06,623 --> 03:54:08,623
Shadow DOM allows you to attach
an internal

3157
03:54:11,030 --> 03:54:13,030
, and it can have hidden from 
the main DOM.

3158
03:54:16,726 --> 03:54:18,726
And that unlocks cool things 
like encapsulate styling.

3159
03:54:20,307 --> 03:54:22,307
Even if you don't like using 
Shadow DOM directly, which is 

3160
03:54:22,307 --> 03:54:24,307
totally

3161
03:54:24,307 --> 03:54:26,887
understandable, it's still good
to know because many built-in 

3162
03:54:26,887 --> 03:54:28,887
elements use Shadow DO,

3163
03:54:28,897 --> 03:54:30,897
M underneath.

3164
03:54:33,672 --> 03:54:37,880
And I attached this blog post 
if you want to learn more. I 

3165
03:54:37,880 --> 03:54:39,880
explain how Shadow DOM works 
here and this animation showing

3166
03:54:39,880 --> 03:54:42,678
how the light DOM and Shadow 
DOM are interlinked together. 

3167
03:54:47,881 --> 03:54:52,375
I explained, cool. I have a 
screen shot of the detailed 

3168
03:54:52,375 --> 03:54:54,375
element, which is

3169
03:54:55,465 --> 03:54:57,465
built into HTML itself, also 
uses Shadow DOM.

3170
03:54:59,971 --> 03:55:01,971
Even if you don't use it 
directly, you are using it 

3171
03:55:01,971 --> 03:55:03,971
indirectly.

3172
03:55:03,971 --> 03:55:06,652
And yeah, the reason I bring 
this up is Shadow DOM styles

3173
03:55:09,646 --> 03:55:13,158
cascade after the user spells, 
if you have ha

3174
03:55:16,463 --> 03:55:18,463
my button component which is a 
regular button and

3175
03:55:19,667 --> 03:55:21,667
style both from inside and 
outside Shadow DOM, the outside

3176
03:55:21,667 --> 03:55:23,667
styles will win. 

3177
03:55:24,959 --> 03:55:26,959
So the overall cascade order, 
so far, goes something

3178
03:55:28,059 --> 03:55:32,502
like user agent styles, author 
styles, Shadow DOM styles and 

3179
03:55:32,502 --> 03:55:34,502
the rest of the page styles. 

3180
03:55:35,799 --> 03:55:38,009
There's also the inline style 
attribute which comes after 

3181
03:55:38,009 --> 03:55:40,009
these. But that's not part of 
cascade.

3182
03:55:43,397 --> 03:55:47,006
The browser doesn't need to 
resolve the cascade in order to

3183
03:55:47,006 --> 03:55:49,006
get the style attribute.

3184
03:55:50,308 --> 03:55:52,308
It's literally attached to the 
element itself. 

3185
03:55:55,288 --> 03:55:57,288
But yeah, now that

3186
03:55:59,498 --> 03:56:01,498
we understand Shadow DOM, we 
can talk about the rest of the 

3187
03:56:01,498 --> 03:56:03,498
page. The most simple concept 
is order of appearance.

3188
03:56:05,375 --> 03:56:07,375
So for example, you can style a
button using

3189
03:56:08,911 --> 03:56:10,911
an element selector and you can
make it pretty straight 

3190
03:56:10,911 --> 03:56:12,911
forward. But what happens when 
there's two of the rules?

3191
03:56:14,101 --> 03:56:17,591
The last one wins, this makes 
sense. CSS written, top to 

3192
03:56:17,591 --> 03:56:19,591
bottom and the last one

3193
03:56:19,591 --> 03:56:23,071
overrides anything before it. 
But these element selectors 

3194
03:56:23,071 --> 03:56:25,071
aren't super useful on their 
own. What if you only want to 

3195
03:56:25,071 --> 03:56:27,071
style this one particular 
button?

3196
03:56:29,407 --> 03:56:31,407
This is where I would use a 
class instead of an element 

3197
03:56:31,407 --> 03:56:33,407
selector . But when we do this,
we find that

3198
03:56:35,107 --> 03:56:37,107
the order of appearance seems 
to not matter anymore.

3199
03:56:39,399 --> 03:56:41,409
The class selector wins over 
the element selector even if it

3200
03:56:41,409 --> 03:56:43,409
comes before. 
So what's going on here?

3201
03:56:46,487 --> 03:56:48,487
And thens a to that is 
specificity.

3202
03:56:48,580 --> 03:56:52,970
Hopefully, I said that right. 
Specificity. I'm not going to 

3203
03:56:52,970 --> 03:56:55,264
go into too much detail here 
because it's a complex, but 

3204
03:56:55,264 --> 03:56:57,264
pretty easily understood topic.

3205
03:57:00,457 --> 03:57:02,457
Just Specificity is a score 
made of three parts.

3206
03:57:05,642 --> 03:57:07,642
Starting from the right side, 
elements and pseudo element

3207
03:57:08,848 --> 03:57:10,848
selectors contribute to the 
least significant part, 

3208
03:57:10,848 --> 03:57:12,848
classes, and attribute 
selectors and pseudo classes go

3209
03:57:12,848 --> 03:57:14,852
in the middle and IDs go in the
most significant part. 

3210
03:57:18,845 --> 03:57:20,943
So the browser will take the 
score and use it to determine 

3211
03:57:20,943 --> 03:57:22,943
which selector wins.

3212
03:57:25,439 --> 03:57:27,439
Chrome dev tools even shows you
the specificity when you hover 

3213
03:57:27,439 --> 03:57:29,439
selector.

3214
03:57:30,336 --> 03:57:32,336
If I go and inspect this,

3215
03:57:33,427 --> 03:57:37,653
and I hover over selector, you 
can see it says, 201, that's 

3216
03:57:37,653 --> 03:57:39,653
the specificity score. 

3217
03:57:44,038 --> 03:57:46,038
Yeah, you don't have to 
calculate it by hand, 

3218
03:57:46,038 --> 03:57:48,038
essentially.

3219
03:57:51,429 --> 03:57:53,429
So in the previous example, 
specificity of the button

3220
03:57:54,831 --> 03:57:57,924
selector, the button class was 
0 10, but the specificity of 

3221
03:57:57,924 --> 03:58:02,841
the element was 001, so it's 
more specific, it's by order of

3222
03:58:02,841 --> 03:58:07,419
appearance. 
As you can imagine, with really

3223
03:58:07,419 --> 03:58:09,419
large selectors, the

3224
03:58:10,625 --> 03:58:12,625
specificity would become a bit 
cumbersome

3225
03:58:13,753 --> 03:58:15,753
to manage and that's why the 
general advice given to us is 

3226
03:58:15,753 --> 03:58:17,753
keep specificity low. 
And this is good advice.

3227
03:58:19,256 --> 03:58:21,256
We should almost certainly 
avoid ID selectors, for 

3228
03:58:21,256 --> 03:58:23,256
example. And we can still use 
them.

3229
03:58:27,049 --> 03:58:29,049
We can still use them instead

3230
03:58:30,659 --> 03:58:32,659
of #ID, we can use a natural 
selector

3231
03:58:33,751 --> 03:58:35,751
. Or we can make a class 
specifically for the thing 

3232
03:58:35,751 --> 03:58:38,228
you're selecting. 
So it's easy to understand the 

3233
03:58:38,228 --> 03:58:42,833
problem with high specificity, 
but keeping specificity low can

3234
03:58:42,833 --> 03:58:46,039
sometimes be challenging, 
especially when you want to 

3235
03:58:46,039 --> 03:58:48,039
share styles between different 
elements

3236
03:58:49,644 --> 03:58:52,835
, so you might, like, you might
be tempted to make

3237
03:58:55,940 --> 03:58:58,133
a single class or every bend of
the button.

3238
03:59:01,324 --> 03:59:03,324
But each shares the base cloud

3239
03:59:05,135 --> 03:59:07,135
of the button and that gets 
complicated. 

3240
03:59:08,720 --> 03:59:12,125
Sometimes, we tend to go too 
far with this advice . Where we

3241
03:59:12,125 --> 03:59:14,125
want to keep specificity, not 
just low, but

3242
03:59:15,219 --> 03:59:17,219
totally flat, by only using 
single class selectors.

3243
03:59:19,309 --> 03:59:21,915
This usually is done through a 
convention or tooling like CSS 

3244
03:59:21,915 --> 03:59:23,915
Modules. 

3245
03:59:25,498 --> 03:59:27,498
And yeah, I've always just 
found this kind

3246
03:59:28,309 --> 03:59:31,005
of advice restrictive. It feels
like using CSS without the 

3247
03:59:31,005 --> 03:59:33,005
cascade.

3248
03:59:34,294 --> 03:59:36,294
So, yeah, for the rest of the 
presentation, I want to show 

3249
03:59:36,294 --> 03:59:38,294
you how much better things can 
be with modern CSS . 

3250
03:59:41,367 --> 03:59:43,367
The two topics that I would 
broadly cover are

3251
03:59:43,775 --> 03:59:46,874
controlling specificity and 
controlling the cascade itself.

3252
03:59:46,874 --> 03:59:48,874
Let's start with the easy one.

3253
03:59:50,166 --> 03:59:52,166
You might already know you can 
increase the specificity of a 

3254
03:59:52,166 --> 03:59:54,166
class selector by chaining it 
to itself. 

3255
03:59:56,754 --> 03:59:58,754
You can even use CSS nesting to

3256
04:00:02,161 --> 04:00:04,161
chain ampersands, this can

3257
04:00:05,366 --> 04:00:07,366
be pretty useful when you need 
it, but only increases the 

3258
04:00:07,366 --> 04:00:09,366
middle portion of the 
specificity. 

3259
04:00:10,782 --> 04:00:12,782
Now, this next part might kind 
of blow your mind, but you can 

3260
04:00:12,782 --> 04:00:14,782
use the is

3261
04:00:14,895 --> 04:00:16,895
pseudo class to make a huge 
jump in specificity.

3262
04:00:18,790 --> 04:00:21,882
This is pseudo class, it's 
interesting, lets you group 

3263
04:00:21,882 --> 04:00:23,882
multiple selectors into a 
select

3264
04:00:26,094 --> 04:00:28,094
single selector, but changes 
the specificity of the whole 

3265
04:00:28,094 --> 04:00:32,286
thing so only the strongest 
selector in the group counts. 

3266
04:00:32,286 --> 04:00:34,286
What this means is, you can 
have a class selector act

3267
04:00:35,375 --> 04:00:37,375
like it has the specificity of 
the ID selector. 

3268
04:00:39,978 --> 04:00:42,280
And this ID selector doesn't 
need to exist. It can just be 

3269
04:00:42,280 --> 04:00:44,280
there hanging by itself.

3270
04:00:47,179 --> 04:00:49,179
You can do the same thing even 
easier using the not pseudo 

3271
04:00:49,179 --> 04:00:52,262
class. So this one requires you
to use

3272
04:00:55,247 --> 04:00:57,247
the impossible selector where 
you can use

3273
04:00:58,856 --> 04:01:02,724
two IDs because, remember, an 
element can only have one ID. 

3274
04:01:02,724 --> 04:01:04,724
So this selector would never 
match, and we're saying,

3275
04:01:04,724 --> 04:01:07,926
never not match this selector. 
So this will match the thing

3276
04:01:08,317 --> 04:01:13,006
you chain it to. I love this 
because you can chain it to 

3277
04:01:13,006 --> 04:01:16,410
anything to scope it down, just
how much you want while 

3278
04:01:16,410 --> 04:01:18,410
retaining the super high 
specificity . 

3279
04:01:20,000 --> 04:01:23,206
And if you chain it to the 
universal selector, it'll match

3280
04:01:23,206 --> 04:01:25,598
everything by having the high 
specificity that we want. You 

3281
04:01:25,598 --> 04:01:27,598
shouldn't need this very often.

3282
04:01:28,895 --> 04:01:31,592
But it's so handy when you just
want to have certain styles, 

3283
04:01:31,592 --> 04:01:33,592
have the highest priority.

3284
04:01:35,886 --> 04:01:37,886
So with that out of the way, 
let's talk about decreasing 

3285
04:01:37,886 --> 04:01:39,886
specificity. 
We know how to increase it, how

3286
04:01:39,886 --> 04:01:41,886
do we decrease it? Because 
that's kind of the goal, right?

3287
04:01:44,777 --> 04:01:46,777
We want to keep specificity 
low, at least that's what 

3288
04:01:46,777 --> 04:01:48,777
everybody tells us . So that's 
where the rare pseudo class 

3289
04:01:48,777 --> 04:01:51,182
comes in . 
There is except it doesn't add 

3290
04:01:51,182 --> 04:01:53,182
to the specificity.

3291
04:01:54,476 --> 04:01:56,476
We can put an ID selector in 
there, and it'll have zero 

3292
04:01:56,476 --> 04:01:58,476
specificity.

3293
04:01:58,779 --> 04:02:00,779
And just like is, you can chain
it to other selectors

3294
04:02:03,332 --> 04:02:07,342
. So you can have some parts 
inside that don't count towards

3295
04:02:07,342 --> 04:02:09,342
the specificity, but the things
outside

3296
04:02:09,342 --> 04:02:12,033
do count. 
There's one restriction

3297
04:02:15,033 --> 04:02:18,129
here you can't put a pseudo 
element selector inside, but 

3298
04:02:18,129 --> 04:02:21,719
that's just a thing that you'll
get used to. But yeah, in other

3299
04:02:21,719 --> 04:02:23,719
words, we now have a CSS

3300
04:02:24,812 --> 04:02:26,812
native way of writing any kind 
of selector you want with just 

3301
04:02:26,812 --> 04:02:28,812
the right amount of 
specificity. That's awesome. 

3302
04:02:31,848 --> 04:02:33,848
CSS is awesome.

3303
04:02:35,147 --> 04:02:38,049
The most obvious way to use 
where is when you want to 

3304
04:02:38,049 --> 04:02:40,049
create select this for CSS 
preset. This kind of makes 

3305
04:02:40,049 --> 04:02:42,049
sense.

3306
04:02:43,839 --> 04:02:45,839
You want the reset to have the 
lowest cascade priority. You 

3307
04:02:45,839 --> 04:02:47,839
put everything in where.

3308
04:02:48,428 --> 04:02:51,521
And I built my own reset that 
uses this technique . And you 

3309
04:02:51,521 --> 04:02:53,521
can find it on NPM under

3310
04:02:56,535 --> 04:02:58,535
the end cap name space.

3311
04:02:59,832 --> 04:03:01,832
With where, you can make zero 
specificity, but many don't do 

3312
04:03:01,832 --> 04:03:03,832
that.

3313
04:03:05,048 --> 04:03:07,048
I would actually suggest coming
up with a desire specificity 

3314
04:03:07,048 --> 04:03:09,048
for all of your other styles. 

3315
04:03:10,934 --> 04:03:12,934
So you might want your global 
style to be no higher than 

3316
04:03:12,934 --> 04:03:15,662
0,0,1. And you can still use 
longer selectors there,

3317
04:03:18,657 --> 04:03:21,752
like restricting the 
specificity . And yeah, you can

3318
04:03:21,752 --> 04:03:23,752
--

3319
04:03:24,858 --> 04:03:26,858
the point here is you can kind 
of

3320
04:03:29,532 --> 04:03:31,532
just control the specificity 
while not having restrictions 

3321
04:03:31,532 --> 04:03:33,532
on how you're writing your CSS.

3322
04:03:34,497 --> 04:03:37,900
One thing I like to do is, 
like, put everything that is 

3323
04:03:37,900 --> 04:03:41,609
nested inside the main rule . 
Put where so that the whole

3324
04:03:44,604 --> 04:03:46,604
block has a flat specificity, 
and everything inside it has 

3325
04:03:46,604 --> 04:03:48,604
zero specificity.

3326
04:03:49,799 --> 04:03:52,892
So you're like going top to 
down, everything is like using 

3327
04:03:52,892 --> 04:03:56,100
source order or order of 
appearance and, like, 

3328
04:03:56,100 --> 04:03:58,100
everything inside is flat. 

3329
04:04:02,084 --> 04:04:04,084
So you have some specificity, 
but just not too much

3330
04:04:05,890 --> 04:04:07,890
. So yeah, if you haven't use

3331
04:04:09,893 --> 04:04:13,101
d where, give it a shot, it'll 
solve your headaches and it's 

3332
04:04:13,101 --> 04:04:16,292
back all the way back to Safari
14 . Ask And that brings us to

3333
04:04:19,397 --> 04:04:22,979
my favorite topic, controlling 
the cascade using layers. 

3334
04:04:22,979 --> 04:04:24,979
If you have a CSS rule, you can
wrap it in a layer, an 

3335
04:04:24,979 --> 04:04:26,979
anonymous layer, and you can 
give it a name, and you can put

3336
04:04:26,979 --> 04:04:28,979
other styles in it, too.

3337
04:04:28,979 --> 04:04:32,056
So far, so good. But the 
interesting part is when you 

3338
04:04:32,056 --> 04:04:34,056
use multiple layer statements 
and

3339
04:04:35,261 --> 04:04:37,261
put different -- or multiple 
layer blocks and put different 

3340
04:04:37,261 --> 04:04:39,261
styles in them.

3341
04:04:40,163 --> 04:04:42,163
So here, the second layer will 
always be the first layer.

3342
04:04:44,065 --> 04:04:46,065
It's kind of like order of 
appearance, but without 

3343
04:04:46,065 --> 04:04:48,065
specificity part. 

3344
04:04:49,458 --> 04:04:51,458
So here in the second layer, 
we're using

3345
04:04:53,670 --> 04:04:57,451
where pseudo class, but the 
first one still wins. Or 

3346
04:04:57,451 --> 04:04:59,451
actually, I misspoke.

3347
04:05:00,769 --> 04:05:02,769
So in the second one, we're 
using the

3348
04:05:03,861 --> 04:05:05,861
pseudo class with a lower 
specificity but still wins 

3349
04:05:05,861 --> 04:05:07,861
because it's in a layer that 
comes later. 

3350
04:05:13,048 --> 04:05:15,253
So the layer order is kind of 
resolved in the way in the 

3351
04:05:15,253 --> 04:05:17,253
order that is defined.

3352
04:05:18,543 --> 04:05:20,543
And then, there's on layer 
styles which always have the 

3353
04:05:20,543 --> 04:05:22,543
highest priority. It'll win 
over all layer styles.

3354
04:05:24,745 --> 04:05:27,334
This might not feel intuitive, 
but it kind of makes sense. 

3355
04:05:27,334 --> 04:05:29,334
You'll get used to it.

3356
04:05:30,626 --> 04:05:32,626
The way I think about it, you 
want to start with you lower 

3357
04:05:32,626 --> 04:05:34,626
priority

3358
04:05:34,626 --> 04:05:36,626
layer so you can put your CSS 
reset in a layer and leave 

3359
04:05:36,626 --> 04:05:38,626
everything else unlayered. 

3360
04:05:39,522 --> 04:05:41,522
This kind of allows you to 
slowly add layers to your 

3361
04:05:41,522 --> 04:05:43,522
codebase . Yeah, that's

3362
04:05:44,628 --> 04:05:47,923
kind of my introduction to 
layer. I still have some time 

3363
04:05:47,923 --> 04:05:49,923
so I'm going to dive a little 
bit deeper. I mentioned layer 

3364
04:05:49,923 --> 04:05:51,923
order.

3365
04:05:54,212 --> 04:05:56,212
It's the layers are prioritized
in the order that they first 

3366
04:05:56,212 --> 04:05:58,212
appear . So if you have layer A
and layer B and

3367
04:06:00,410 --> 04:06:02,410
write layer A, again, the rules

3368
04:06:03,818 --> 04:06:05,818
inside the second appearance of
layer A will still lose to 

3369
04:06:05,818 --> 04:06:07,818
layer B . The layer A was 
already defined all the way up 

3370
04:06:07,818 --> 04:06:12,715
there. To make this more 
predictable, you can separate 

3371
04:06:12,715 --> 04:06:14,715
layer statements from layer 
blocks.

3372
04:06:14,715 --> 04:06:17,828
The layer statement will define
the order and the layer blocks 

3373
04:06:17,828 --> 04:06:23,128
will contain the actual rules.
And you probably want to define

3374
04:06:23,128 --> 04:06:25,831
the layer order up front 
because all of your other 

3375
04:06:25,831 --> 04:06:27,831
styles or before all of your 
other styles.

3376
04:06:30,732 --> 04:06:32,732
You can put the layer 
statements in the

3377
04:06:33,831 --> 04:06:37,433
beginning of your first style 
sheet, but what I like to do is

3378
04:06:37,433 --> 04:06:39,433
put it in style tag, and put 
the style tag all the way up in

3379
04:06:39,433 --> 04:06:41,539
the head. 
Because I don't trust

3380
04:06:44,144 --> 04:06:47,437
bundlers to put my first style 
sheet in the correct place. So 

3381
04:06:47,437 --> 04:06:49,437
I just like doing it myself 
before any

3382
04:06:49,437 --> 04:06:53,351
other style sheets are linked. 
So, yeah. Let's go even deeper.

3383
04:06:56,547 --> 04:06:58,547
So we can nest layers, this 
functionality is built into 

3384
04:06:58,547 --> 04:07:02,558
layers. So it's separate from 
CSS nesting. You can nest 

3385
04:07:02,558 --> 04:07:04,558
layers without using CSS 
nesting. 

3386
04:07:06,957 --> 04:07:08,957
And if you only want to 
reference a nested

3387
04:07:10,052 --> 04:07:12,556
sublayer, you can use the dot 
syntax.

3388
04:07:15,757 --> 04:07:17,757
But it gets even more 
interesting when you do use CSS

3389
04:07:18,959 --> 04:07:22,166
nesting, because you can put a 
layer block inside another

3390
04:07:24,875 --> 04:07:28,046
CSS rule, like a class 
selector. You want to style 

3391
04:07:28,046 --> 04:07:30,046
different parts of the same 
component using different 

3392
04:07:30,046 --> 04:07:32,046
layers. 

3393
04:07:33,645 --> 04:07:35,645
I want to point out that this 
is a CSS nesting is a 

3394
04:07:35,645 --> 04:07:37,645
relatively new feature, so you 
might want to use preprocessors

3395
04:07:39,941 --> 04:07:43,250
, SaaS to trans

3396
04:07:44,354 --> 04:07:47,655
get this part out for you. I 
find this useful especially 

3397
04:07:47,655 --> 04:07:49,655
when different part of the 
components need to have

3398
04:07:49,655 --> 04:07:52,555
different priorities. For 
example, I might have overrides

3399
04:07:52,555 --> 04:07:54,555
as a sublayer where I put

3400
04:07:54,963 --> 04:07:57,759
my scaler styles and print 
styles. 

3401
04:07:57,759 --> 04:07:59,759
These should always be all of 
the other styles of the 

3402
04:07:59,759 --> 04:08:01,759
component.

3403
04:08:04,070 --> 04:08:07,366
Moving on to layer strengths 
and the idea of style sheets. 

3404
04:08:07,366 --> 04:08:09,366
You can reference the same 
layer name in multiple CSS

3405
04:08:10,466 --> 04:08:12,466
files and they'll work just 
like you expect regardless of 

3406
04:08:12,466 --> 04:08:14,466
how they're imported.

3407
04:08:14,976 --> 04:08:16,976
So you might have a giant 
components layer that is 

3408
04:08:16,976 --> 04:08:18,976
referenced in every single one 
of your components and within

3409
04:08:21,485 --> 04:08:23,485
single file components,

3410
04:08:26,497 --> 04:08:28,497
in Vue or Astro, you can import
into a layer. 

3411
04:08:33,715 --> 04:08:37,013
The external CSS pod doesn't 
need to contain any layers. And

3412
04:08:37,013 --> 04:08:39,013
I want to give a shout out to 
CSS

3413
04:08:40,114 --> 04:08:42,114
import here, it can transform 
the import statements to

3414
04:08:43,318 --> 04:08:45,318
layer block statements and 
inline all of the contents of 

3415
04:08:45,318 --> 04:08:47,318
the style sheet and even works 
for remote URLs.

3416
04:08:49,011 --> 04:08:51,011
This is great for performance, 
mainly. 

3417
04:08:54,310 --> 04:08:56,310
And I want to talk about SAUTSZ
SaaS real quick.

3418
04:08:58,734 --> 04:09:00,734
Layers were just like you 
expect in SaaS, but when you 

3419
04:09:00,734 --> 04:09:02,734
want to combine multiple SaaS 
files into a single layer, you 

3420
04:09:02,734 --> 04:09:04,734
need

3421
04:09:04,931 --> 04:09:07,228
to use metaupload CSS, you 
can't use the use statement. 

3422
04:09:10,424 --> 04:09:12,424
This was a recent update made 
to SaaS to ensure that meta.

3423
04:09:14,418 --> 04:09:17,022
load CSS is a canonical way to 
use layers in SaaS. 

3424
04:09:20,216 --> 04:09:22,216
And finally, the most important
slide, you might have used

3425
04:09:23,312 --> 04:09:25,312
the important keyword to win 
specificity battles in the 

3426
04:09:25,312 --> 04:09:27,508
past. But we all know it's a 
shameful hack and the general 

3427
04:09:27,508 --> 04:09:29,508
advice is to

3428
04:09:29,508 --> 04:09:32,312
avoid important. And earlier, I
already showed various ways

3429
04:09:33,615 --> 04:09:36,912
to increase specificity. So if 
you want to just win a 

3430
04:09:36,912 --> 04:09:38,912
specificity battle, then

3431
04:09:39,519 --> 04:09:43,113
use one of those techniques 
instead of important. 

3432
04:09:43,113 --> 04:09:46,124
But the reason why important is
interesting here is emerges 

3433
04:09:46,124 --> 04:09:48,124
kind of differently in layers.

3434
04:09:49,417 --> 04:09:51,417
The important keyword is more 
important when used in lower 

3435
04:09:51,417 --> 04:09:53,417
priority layers.

3436
04:09:53,525 --> 04:09:56,732
This feels strange, but I think
Miriam was explaining earlier 

3437
04:09:56,732 --> 04:09:58,732
that

3438
04:09:59,938 --> 04:10:01,938
user agents and preferences 
might declare some styles that 

3439
04:10:01,938 --> 04:10:03,938
are legitimately important. 

3440
04:10:03,938 --> 04:10:05,938
So even though all of the other
user styles are less important,

3441
04:10:05,938 --> 04:10:07,938
they want to say this 
particular thing should be more

3442
04:10:07,938 --> 04:10:09,938
important . So works similarly 
in layers.

3443
04:10:13,342 --> 04:10:15,342
So CSS reset, you might have a 
rule that says,

3444
04:10:18,360 --> 04:10:22,166
may not be important if the 
dialog is not open. 

3445
04:10:22,166 --> 04:10:24,166
This helps ensure that 
subsequent layers can't

3446
04:10:25,269 --> 04:10:27,269
accidentally override the 
display when it's always meant 

3447
04:10:27,269 --> 04:10:29,269
to be hidden

3448
04:10:29,269 --> 04:10:32,078
. I've done that accidentally 
so many times where I set a 

3449
04:10:32,078 --> 04:10:34,078
display grid

3450
04:10:34,985 --> 04:10:36,985
on the dialog and it shows when
it's not supposed to be 

3451
04:10:36,985 --> 04:10:38,985
showing. So now I handle that 
in my reset.

3452
04:10:40,400 --> 04:10:42,400
If you take everything we've 
seen about layers so far, our 

3453
04:10:42,400 --> 04:10:44,400
cascade

3454
04:10:44,400 --> 04:10:47,307
overlooks something like the 
user styles and the page styles

3455
04:10:47,307 --> 04:10:49,307
and the Shadow DOM styles ask

3456
04:10:50,513 --> 04:10:52,720
and and unlayered styles and 
the important styles come after

3457
04:10:52,720 --> 04:10:54,720
all of that. 

3458
04:10:56,737 --> 04:10:58,737
And since I'm running out of 
time, I won't go into too much 

3459
04:10:58,737 --> 04:11:00,737
detail here, but important 
style also have their own 

3460
04:11:00,737 --> 04:11:02,737
quirks. In that, the user agent
important

3461
04:11:05,466 --> 04:11:07,466
styles are more important than 
inline style attributes, for 

3462
04:11:07,466 --> 04:11:09,466
example. 

3463
04:11:11,077 --> 04:11:13,077
But yeah, I'm going to talk 
about browser support real 

3464
04:11:13,077 --> 04:11:17,880
quick. Browser, I think, 2022, 
February, is when all browsers 

3465
04:11:17,880 --> 04:11:21,096
shipped cascade layers. It was 
a coordinated rollout and very 

3466
04:11:21,096 --> 04:11:23,096
impressive to watch.

3467
04:11:24,597 --> 04:11:27,698
But if that still makes you 
uneasy, there's post cascade 

3468
04:11:27,698 --> 04:11:29,698
layers, which polyfills 
everything

3469
04:11:30,507 --> 04:11:32,507
we've talked about so far. 

3470
04:11:34,114 --> 04:11:37,320
And then, there's revert layer,
I haven't talked about it so 

3471
04:11:37,320 --> 04:11:39,320
far because it's such

3472
04:11:40,530 --> 04:11:42,939
a broad topic. You might not 
want to use it yet.

3473
04:11:45,146 --> 04:11:47,146
I have a blog post on this 
topic.

3474
04:11:48,445 --> 04:11:52,450
And the only part I want to 
mention just right now is that 

3475
04:11:52,450 --> 04:11:54,450
if you're trying to use revert,
consider

3476
04:11:54,450 --> 04:11:57,269
revert layer instead. It works 
even when you don't use cascade

3477
04:11:57,269 --> 04:11:59,269
layers.

3478
04:12:03,371 --> 04:12:05,977
Then, there's some best 
practices. I think I'll skip 

3479
04:12:05,977 --> 04:12:07,977
that.

3480
04:12:13,692 --> 04:12:15,692
Slides are stuck.

3481
04:12:20,401 --> 04:12:22,401
Oh, no, OK, sure.

3482
04:12:24,104 --> 04:12:26,104
There was an iframe here where 
I was going to show that layers

3483
04:12:26,104 --> 04:12:28,104
and scope are different.

3484
04:12:30,017 --> 04:12:32,017
This is a CSS tricks article 
written by Miriam Suzanne.

3485
04:12:33,722 --> 04:12:35,722
And yeah, I really want to 
emphasize this point is that 

3486
04:12:35,722 --> 04:12:38,223
layers and scopes are different
things. 

3487
04:12:38,223 --> 04:12:40,223
You don't want to create a 
layer for every single 

3488
04:12:40,223 --> 04:12:42,519
component. They can overlap so 
you can have layers within the 

3489
04:12:42,519 --> 04:12:44,519
same

3490
04:12:45,618 --> 04:12:47,618
component or don't use it scope

3491
04:12:49,630 --> 04:12:51,630
your CSS.

3492
04:12:55,337 --> 04:12:57,337
And I think we can wrap it up 
here since I ran out of time. 

3493
04:12:58,936 --> 04:13:02,036
I just want to mention one last
thing, that I think Peter 

3494
04:13:02,036 --> 04:13:04,036
Griffin would really enjoy 
using cascade layers. 

3495
04:13:08,133 --> 04:13:11,341
Yeah, that's all, if you want 
to learn more, subscribe to my 

3496
04:13:11,341 --> 04:13:13,341
RSS feed, and that's all for 
me.

3497
04:13:19,150 --> 04:13:21,150
â‰« MIKE: I just learned so much 
there.

3498
04:13:23,359 --> 04:13:26,465
It's like a pain I didn't know 
I had where I feel like in a 

3499
04:13:26,465 --> 04:13:28,465
lot of situations I add a

3500
04:13:29,567 --> 04:13:32,666
lot of specificity to kind of 
wrangle the browser to do what 

3501
04:13:32,666 --> 04:13:34,666
I want

3502
04:13:36,472 --> 04:13:38,472
when, actually, what I want is 
layers, which

3503
04:13:38,882 --> 04:13:42,789
not aware of at all. 
Yeah. It's going to take me a 

3504
04:13:42,789 --> 04:13:44,789
while to get my head around 
that.

3505
04:13:44,789 --> 04:13:47,291
â‰« MAYANK: Yeah. 
â‰« MIKE: It's a completely 

3506
04:13:47,291 --> 04:13:49,291
different paradigm. 

3507
04:13:50,895 --> 04:13:52,895
â‰« MAYANK: The thing I tell 
people is, start with just the 

3508
04:13:52,895 --> 04:13:57,675
reset . Put that in your, in a 
layer, and if you have some 

3509
04:13:57,675 --> 04:13:59,675
third party styles, put

3510
04:14:00,776 --> 04:14:02,776
that in a layer, you don't have
to migrate your whole codebase 

3511
04:14:02,776 --> 04:14:04,776
to layers right away. 
â‰« MIKE: Yeah.

3512
04:14:05,778 --> 04:14:07,778
And so the advantage of doing 
that is -- let's take a

3513
04:14:08,881 --> 04:14:12,087
really basic reset of, I'm 
setting the margin of HTML 

3514
04:14:12,087 --> 04:14:14,087
element to zero.

3515
04:14:16,490 --> 04:14:18,490
So that's in my reset in a lay
er.

3516
04:14:20,401 --> 04:14:22,401
But now, I decide I actually 
want some padding on my HTML

3517
04:14:23,607 --> 04:14:26,320
, so then, I can have HTML and 
what's a nonlayer called? 

3518
04:14:26,320 --> 04:14:28,320
Called the root?

3519
04:14:28,622 --> 04:14:32,412
Or? 
â‰« MAYANK: Yeah. HTML and root 

3520
04:14:32,412 --> 04:14:34,412
are going to be the same thing 
to each other.

3521
04:14:34,412 --> 04:14:37,300
â‰« MIKE: Yeah, now I can set my 
padding on the HTML and

3522
04:14:39,698 --> 04:14:41,698
it'll just work without any 
more specificity? 

3523
04:14:44,485 --> 04:14:46,485
â‰« MAYANK: Yeah, and if you wrap
it in rare to make the zero 

3524
04:14:46,485 --> 04:14:48,485
specificity, it'll still work.

3525
04:14:49,594 --> 04:14:51,594
Because unlayer styles over 
layer styles. 

3526
04:14:51,594 --> 04:14:53,594
â‰« MIKE: That's awesome. Very 
cool.

3527
04:14:55,573 --> 04:14:57,573
Mayank, thanks for sharing that
today, I learned a lot. I'm 

3528
04:14:57,573 --> 04:14:59,573
glad you're here. 

3529
04:14:59,573 --> 04:15:01,573
â‰« MAYANK: Thanks for having me.
â‰« MIKE: All right.

3530
04:15:04,036 --> 04:15:06,036
We're going to keep this 
conference going

3531
04:15:10,048 --> 04:15:12,048
next we have David

3532
04:15:13,852 --> 04:15:17,267
, he's based in New Zealand 
where he covers static site 

3533
04:15:17,267 --> 04:15:19,267
generators and related open 
source tools for CloudCannon.

3534
04:15:23,970 --> 04:15:27,377
When he isn't wrangling 
templates, he helps to organize

3535
04:15:27,377 --> 04:15:29,377
Hugo Conf, builds

3536
04:15:30,978 --> 04:15:32,978
arcade game cabinets and carves
wooden spoons

3537
04:15:34,586 --> 04:15:36,586
to slow static site generators.

3538
04:15:38,779 --> 04:15:40,779
Liam PZ

3539
04:15:43,388 --> 04:15:46,485
Bigalo creates tooling for open
source sites including static 

3540
04:15:46,485 --> 04:15:48,485
site tool search page

3541
04:15:50,206 --> 04:15:52,415
fund and static API generateor 
that we'll be learning more 

3542
04:15:52,415 --> 04:15:54,415
about today.

3543
04:15:55,717 --> 04:15:57,717
He co-created the

3544
04:15:59,720 --> 04:16:02,928
game Trunket and still spends 
hours playing it for quality 

3545
04:16:02,928 --> 04:16:06,126
control purposes and to learn 
fun effects about

3546
04:16:10,638 --> 04:16:12,638
etymology.

3547
04:16:13,930 --> 04:16:17,542
Today, they're talking about 
managing content management . 

3548
04:16:17,542 --> 04:16:19,542
Git CMS and static

3549
04:16:20,749 --> 04:16:22,749
generation

3550
04:16:23,354 --> 04:16:25,354
. 

3551
04:16:29,762 --> 04:16:31,762
[ Applause ] 
Welcome, David.

3552
04:16:45,182 --> 04:16:47,182
â‰« DAVID: Thank you. I wanted to
introduce, we're in the same 

3553
04:16:47,182 --> 04:16:49,182
room.

3554
04:16:49,182 --> 04:16:51,182
We'll be passing this back and 
forth as we talk.

3555
04:17:05,588 --> 04:17:07,588
CloudCannon, we focus on two 
things, we want to make it 

3556
04:17:07,588 --> 04:17:09,588
easier

3557
04:17:09,588 --> 04:17:12,203
for everyone to manage the 
content, and the visual 

3558
04:17:12,203 --> 04:17:14,203
interface, and on creating and 
supporting open source

3559
04:17:15,301 --> 04:17:17,301
, agnostic tooling

3560
04:17:18,398 --> 04:17:23,148
. It's important for us that 
there's absolutely no vendor 

3561
04:17:23,148 --> 04:17:25,148
locking in CloudCannon, we 
think your site, your source, 

3562
04:17:25,148 --> 04:17:27,148
and your content should be 
yours and stored in your Git 

3563
04:17:27,148 --> 04:17:29,148
repo. You can take it when you 
want to, it's fully portable. 

3564
04:17:30,454 --> 04:17:32,454
Today, we're joining forces to 
talk about how CloudCannon

3565
04:17:33,658 --> 04:17:36,864
has a feature called site 
mounting that can combine with 

3566
04:17:36,864 --> 04:17:38,864
a new open source tool that 
creates esthetic API.

3567
04:17:40,958 --> 04:17:42,958
And that's aimed at allowing

3568
04:17:44,164 --> 04:17:46,164
large organizations to receive 
the same benefits of static 

3569
04:17:46,164 --> 04:17:48,164
sites and CMS as smaller single
site orgs. 

3570
04:17:54,481 --> 04:17:57,774
So site mounting. Site mounting
allows multiple sites to sync 

3571
04:17:57,774 --> 04:17:59,774
to one build image

3572
04:17:59,774 --> 04:18:01,878
on CloudCannon. You might have 
seen this in action on 11ty 

3573
04:18:01,878 --> 04:18:03,878
already

3574
04:18:05,290 --> 04:18:07,290
. Zach made a video about it 
when the feature first launched

3575
04:18:07,290 --> 04:18:09,290
last year.

3576
04:18:09,290 --> 04:18:11,789
But today, in addition to 
shearing components and layup 

3577
04:18:11,789 --> 04:18:13,789
files on sites, we're going to

3578
04:18:14,878 --> 04:18:16,878
demonstrate a data link and 
group of connected sites 11ty 

3579
04:18:16,878 --> 04:18:18,878
sites , enabling content 
syndication and

3580
04:18:21,173 --> 04:18:23,173
aggregation, new tool

3581
04:18:23,582 --> 04:18:26,582
flatlink. 

3582
04:18:31,780 --> 04:18:33,780
â‰« LIAM: Flatlake is tool we're 
developing similar to the way

3583
04:18:34,982 --> 04:18:38,185
the static site generator spits
out static HTML files that can 

3584
04:18:38,185 --> 04:18:41,370
be used as a website, Flat

3585
04:18:44,875 --> 04:18:48,078
lake spits out JSON files that 
can be query . We'll show how 

3586
04:18:48,078 --> 04:18:51,580
to aggregate and share content 
between stand alone 11ty sites.

3587
04:18:59,561 --> 04:19:01,561
â‰« DAVID: Let's imagine we're 
tasked with building several 

3588
04:19:01,561 --> 04:19:03,561
real good websites for quite a 
large organization.

3589
04:19:03,943 --> 04:19:05,943
We're going to demo four 
smaller sites connected to one 

3590
04:19:05,943 --> 04:19:08,048
larger parent site, but there's
no technical limit. We'll call 

3591
04:19:08,048 --> 04:19:11,335
out the larger site real big 
company. You can check it out 

3592
04:19:11,335 --> 04:19:13,335
if you like Real Big.

3593
04:19:15,033 --> 04:19:17,033
company, look at the GitHub, 
it's all connected.

3594
04:19:18,411 --> 04:19:20,411
We love static sites, we love 
flat files, we love 11ty.

3595
04:19:23,998 --> 04:19:27,203
And our smaller sites static 
laboratories, 11ty 

3596
04:19:27,203 --> 04:19:29,203
incorporated, and

3597
04:19:30,412 --> 04:19:32,412
liminal interfaces. It's very 
unbrand.

3598
04:19:34,794 --> 04:19:37,406
You can imagine a large 
corporation or university, 

3599
04:19:37,406 --> 04:19:39,406
perhaps, needing a setup like 
this. 

3600
04:19:43,191 --> 04:19:45,191
They may or may not be 
technical, they'll be managing 

3601
04:19:45,191 --> 04:19:47,482
several hundred sites. So, I 
can jump into this right now,

3602
04:19:50,988 --> 04:19:52,988
I'm editing on CloudCannon, 
this is an 11ty

3603
04:19:54,190 --> 04:19:57,661
site I'm editing, I'm marking 
down live in the visual. 

3604
04:19:57,661 --> 04:19:59,661
It's great, right?

3605
04:19:59,661 --> 04:20:01,661
Really good for a single site. 
I can edit everything quickly.

3606
04:20:03,380 --> 04:20:07,681
I can add page components that 
our developer has built. But 

3607
04:20:07,681 --> 04:20:09,681
what about a smaller site?

3608
04:20:10,779 --> 04:20:12,779
Had What about our smaller 
sites? 

3609
04:20:14,380 --> 04:20:16,991
If we want to jump to what the 
big corporation needs, what if 

3610
04:20:16,991 --> 04:20:18,991
they want to spin up a new 
site?

3611
04:20:19,091 --> 04:20:22,391
They have quite a large wish 
list here. How do they get 

3612
04:20:22,391 --> 04:20:24,391
exactly the same page building 
components in each site ? 

3613
04:20:26,602 --> 04:20:28,602
What about brand recognition 
for the real big corporate 

3614
04:20:28,602 --> 04:20:30,602
family. And perhaps, more 
importantly, if we update a 

3615
04:20:30,602 --> 04:20:32,602
layout or a component, how can 
it be reflected on all of our 

3616
04:20:32,602 --> 04:20:34,602
sites?

3617
04:20:34,602 --> 04:20:38,209
That's a pretty decent sized 
wish list. And of course, we 

3618
04:20:38,209 --> 04:20:40,209
want this on 11ty for all of 
the performance benefits of a 

3619
04:20:40,209 --> 04:20:42,510
static site and on CloudCannon 
for the benefits of visual edit

3620
04:20:45,621 --> 04:20:47,621
or without content stored in 
Git. We can do all of this. 

3621
04:20:50,332 --> 04:20:53,138
We can see this in action here,
this is Xity, a subsidiary of 

3622
04:20:53,138 --> 04:20:56,539
real big company. You can see 
here, our

3623
04:20:59,643 --> 04:21:02,851
site is retrieving the source 
files from the component 

3624
04:21:02,851 --> 04:21:06,356
library, that's the shear ed 
common re

3625
04:21:09,861 --> 04:21:11,861
shared common repo and from the
common repo into the sites 

3626
04:21:11,861 --> 04:21:13,861
includes layouts.

3627
04:21:14,078 --> 04:21:16,576
This is pretty straightforward 
setup. Just an option within 

3628
04:21:16,576 --> 04:21:18,576
CloudCannon to set up. 

3629
04:21:20,170 --> 04:21:22,170
Here's a simplified version 
where our site folder and our 

3630
04:21:22,170 --> 04:21:24,170
conflict

3631
04:21:24,778 --> 04:21:27,388
tent files are sourced from the
content repo and layouts 

3632
04:21:27,388 --> 04:21:29,388
sourced from the central repo. 

3633
04:21:30,984 --> 04:21:32,984
And the important aspect is 
that from here the 11ty

3634
04:21:34,190 --> 04:21:37,287
build proceeds as if all files 
were arranged in one folder 

3635
04:21:37,287 --> 04:21:39,287
originally and thus built as

3636
04:21:39,287 --> 04:21:41,972
one unified stacked site. 
And once any files in the 

3637
04:21:41,972 --> 04:21:43,972
common repo are changed, layout

3638
04:21:45,068 --> 04:21:47,068
is tweaked, perhaps, or a new 
page building component is

3639
04:21:49,075 --> 04:21:51,075
added, any downstream link 
sites have immediate access to 

3640
04:21:51,075 --> 04:21:53,075
the new components and any 
layout changes will 

3641
04:21:53,075 --> 04:21:57,875
automatically rebuild every 
affected site. 

3642
04:21:57,875 --> 04:22:02,476
â‰« LIAM: Where are we?

3643
04:22:09,286 --> 04:22:11,286
Now that we can share codes 
between the sites in our 

3644
04:22:11,286 --> 04:22:13,286
company, it'll be great if we 
could share content, too.

3645
04:22:14,282 --> 04:22:16,282
So, bringing up their next wish

3646
04:22:19,289 --> 04:22:22,597
list, we have the content 
wishlist. 

3647
04:22:28,206 --> 04:22:31,307
So, on the main corporate 
website, we want to rehost some

3648
04:22:31,307 --> 04:22:33,307
of the

3649
04:22:34,510 --> 04:22:37,615
featured news articles from 
each division, plus for every 

3650
04:22:37,615 --> 04:22:39,615
division's website, we want to 
list the news articles

3651
04:22:39,615 --> 04:22:41,615
from every other division. 

3652
04:22:43,330 --> 04:22:45,330
With this level of 
interconnection between sites, 

3653
04:22:45,330 --> 04:22:47,330
a typical approach would force 
us to move the source of truth 

3654
04:22:47,330 --> 04:22:49,330
for our content

3655
04:22:49,839 --> 04:22:51,839
out of our sites and into some 
central data link.

3656
04:22:53,746 --> 04:22:56,452
But we don't want our team to 
have to edit a data lake 

3657
04:22:56,452 --> 04:22:58,452
directly, we want them to edit 
their site in context. 

3658
04:22:59,960 --> 04:23:01,960
To achieve that, we're going to
show how Flatlake and

3659
04:23:03,569 --> 04:23:07,373
site mounting work together to 
create a static Git base data 

3660
04:23:07,373 --> 04:23:09,373
lake, without change in 
workflow for

3661
04:23:09,373 --> 04:23:12,282
the company. You can picture 
building this with something 

3662
04:23:12,282 --> 04:23:14,282
like site mounting on its own.

3663
04:23:18,880 --> 04:23:20,880
The burden of understanding all
of the source files means this 

3664
04:23:20,880 --> 04:23:22,880
approach doesn't scale beyond a
few sites.

3665
04:23:26,498 --> 04:23:28,498
We're going to use Flatlake

3666
04:23:29,591 --> 04:23:32,198
to aggregate into a static API 
and give every website access 

3667
04:23:32,198 --> 04:23:34,198
to the data at build time.

3668
04:23:34,704 --> 04:23:38,028
We're going to keep the content
experience grounded in their 

3669
04:23:38,028 --> 04:23:40,028
website, not in some giant 
database.

3670
04:23:43,827 --> 04:23:45,827
Flatlake is driven by a single 
configuration file and runs as 

3671
04:23:45,827 --> 04:23:47,827
a stand alone command.

3672
04:23:49,943 --> 04:23:51,943
Our data lake repo

3673
04:23:53,351 --> 04:23:56,647
with just a Flatlake build 
file. Looking down the file, we

3674
04:23:56,647 --> 04:23:58,647
see the extent of Flatlake 
setup.

3675
04:24:01,144 --> 04:24:03,144
We define a news collection, 
give it a set of inputs, one 

3676
04:24:03,144 --> 04:24:07,449
for each division's news 
folder. 

3677
04:24:07,449 --> 04:24:09,449
We merge in some data to each 
input to filter by division.

3678
04:24:12,045 --> 04:24:14,045
And I accidentally clicked on 
the wrong thing . 

3679
04:24:16,760 --> 04:24:18,760
[ Laughter ] 
Here we are.

3680
04:24:21,160 --> 04:24:23,160
And -- there we go.

3681
04:24:28,475 --> 04:24:31,671
And -- we tell Flatlake we want
the

3682
04:24:34,776 --> 04:24:36,776
front data and the frontend 
content to be part of the same 

3683
04:24:36,776 --> 04:24:38,776
API . You'll notice this repo

3684
04:24:40,585 --> 04:24:42,585
doesn't contain the content 
it's referencing. How you 

3685
04:24:42,585 --> 04:24:44,585
achieve that depends on the 
environment.

3686
04:24:45,787 --> 04:24:47,787
Locally, tends to use symbolic 
links or Git submodules can be 

3687
04:24:47,787 --> 04:24:49,787
good.

3688
04:24:50,893 --> 04:24:52,893
But for this talk, we're going 
back to our good friend site 

3689
04:24:52,893 --> 04:24:54,997
mounting. In CloudCannon, we 
mount from each of the division

3690
04:24:54,997 --> 04:24:57,611
sites into the data lake and 
hit build. 

3691
04:25:00,813 --> 04:25:02,813
Behind the scenes, Flatlake 
pulls the

3692
04:25:04,219 --> 04:25:07,428
markdown content files and 
metadata and builds them up 

3693
04:25:07,428 --> 04:25:09,428
into what I've been calling a 
static API

3694
04:25:10,526 --> 04:25:12,526
. If we look at Flatlake's 
output

3695
04:25:13,625 --> 04:25:16,724
directory, we can see a bunch 
of folders containing JSON 

3696
04:25:16,724 --> 04:25:18,724
files, files that list every 
item in a given collection or 

3697
04:25:18,724 --> 04:25:21,026
globally. 
And there are files that 

3698
04:25:21,026 --> 04:25:23,026
aggregate content on certain 
data.

3699
04:25:24,324 --> 04:25:26,324
For example, highlighted as a 
file that lists every news post

3700
04:25:26,324 --> 04:25:28,324
that was written by David.

3701
04:25:30,026 --> 04:25:33,233
Within it, we see the JSON 
RENGS representation of the 

3702
04:25:33,233 --> 04:25:37,436
content that Flatlake ingested.
The content allows you to host 

3703
04:25:37,436 --> 04:25:39,436
them as a live API

3704
04:25:39,436 --> 04:25:42,641
with pagenation. And since this
is a flat folder full

3705
04:25:45,638 --> 04:25:47,638
of files, we can load it as 
data, which we'll do for our 

3706
04:25:47,638 --> 04:25:49,638
real big company. 

3707
04:25:50,137 --> 04:25:52,137
So far, we've been site 
mounting source files from one 

3708
04:25:52,137 --> 04:25:54,137
site to another, which anyone 
can do on CloudCannon.

3709
04:25:54,733 --> 04:25:57,834
To use our content as site 
data, we want to output the 

3710
04:25:57,834 --> 04:26:00,934
files . We can mount the data 
files that generated into all 

3711
04:26:00,934 --> 04:26:02,934
of

3712
04:26:04,345 --> 04:26:07,655
Real Big's 11ty sites. And it's
a feature of our higher tier 

3713
04:26:07,655 --> 04:26:09,655
plans and unlocks

3714
04:26:09,655 --> 04:26:11,655
options for larger teams. 

3715
04:26:13,360 --> 04:26:16,457
With the static JSON files on 
disc, it's trivial to pull and 

3716
04:26:16,457 --> 04:26:18,457
use this data.

3717
04:26:20,057 --> 04:26:23,168
On the main website, we're 
pulling Flatlake's files adds 

3718
04:26:23,168 --> 04:26:25,168
computer data ready to be used.

3719
04:26:29,275 --> 04:26:31,982
Since this glues together with 
siting, you don't need to 

3720
04:26:31,982 --> 04:26:33,982
trigger any builds.

3721
04:26:35,480 --> 04:26:37,480
One one of our we write a new 
article,

3722
04:26:39,084 --> 04:26:42,181
it triggers Flatlake and 
triggers every site that 

3723
04:26:42,181 --> 04:26:44,181
consumes it to build with the 
aggregated

3724
04:26:44,181 --> 04:26:46,982
content automatically. And a 
great feature of the 

3725
04:26:46,982 --> 04:26:48,982
syndication is it works 
seamlessly

3726
04:26:48,982 --> 04:26:52,289
with the Git workflows. Content
only syndicates when

3727
04:26:55,289 --> 04:26:57,289
it lands on a main branch, and 
each site can have as many 

3728
04:26:57,289 --> 04:26:59,289
environments as they need 
without leaking content. 

3729
04:26:59,988 --> 04:27:01,988
No need to fork one giant data 
lake or maintain version 

3730
04:27:01,988 --> 04:27:03,988
content within it.

3731
04:27:05,795 --> 04:27:07,795
With all O that in place, plus 
more liquid content

3732
04:27:08,892 --> 04:27:11,297
behind the scenes, we have 
content syndicated and shown 

3733
04:27:11,297 --> 04:27:13,297
across of Real Big's web 
properties.

3734
04:27:14,599 --> 04:27:16,599
On the main corporate website, 
you can list and read all 

3735
04:27:16,599 --> 04:27:18,599
featured news articles from the
divisions.

3736
04:27:19,513 --> 04:27:21,513
And we made the related 
articles section of each 

3737
04:27:21,513 --> 04:27:23,513
division's website list the 
latest news from all of 

3738
04:27:23,513 --> 04:27:25,513
divisions, as well. 

3739
04:27:30,122 --> 04:27:32,122
â‰« DAVID: All of this dev work 
only happens once behind the 

3740
04:27:32,122 --> 04:27:34,122
scenes . For a team of editors,
website users and perhaps, the

3741
04:27:36,428 --> 04:27:38,428
nontechnical content folk, all 
they need to do is

3742
04:27:39,635 --> 04:27:42,536
never get to the site they're 
working on, choose the content 

3743
04:27:42,536 --> 04:27:44,536
type that they're creating or 
editing, and just get to work. 

3744
04:27:44,941 --> 04:27:48,243
They have the layout and the 
components already. And once 

3745
04:27:48,243 --> 04:27:50,751
published, the content will be 
syndicated to the parent site 

3746
04:27:50,751 --> 04:27:52,751
as well as to any other sites 
that mount the data lake.

3747
04:27:55,256 --> 04:27:57,256
It's also important to remember
that editors don't

3748
04:27:58,354 --> 04:28:01,762
need to wade through just to 
get the content, they get it in

3749
04:28:01,762 --> 04:28:03,762
situ in the environment just 
for them. 

3750
04:28:05,364 --> 04:28:07,364
And that kind of sums up how a 
real big company can build

3751
04:28:08,972 --> 04:28:12,273
real good static websites with 
a great tool like 11ty. Can 

3752
04:28:12,273 --> 04:28:14,273
share layouts across any number
of sites,

3753
04:28:15,478 --> 04:28:17,478
aggregate, syndicate the 
content, and can keep 

3754
04:28:17,478 --> 04:28:19,478
everything portable

3755
04:28:19,478 --> 04:28:22,186
with Git-based CMS, and that 
means as I've said before, no 

3756
04:28:22,186 --> 04:28:24,186
vendor locking, you always 
control your

3757
04:28:24,186 --> 04:28:26,889
content as we think you should.
If you'd like to try any of 

3758
04:28:26,889 --> 04:28:28,889
this out for yourself, please 
have a look at CloudCannon.

3759
04:28:31,005 --> 04:28:33,005
com, and Zach and Mike 
mentioned earlier, we have

3760
04:28:34,209 --> 04:28:36,219
a draw for a free migration to 
CloudCannon and a bunch of 

3761
04:28:36,219 --> 04:28:38,219
discounted plans over at 
CloudCannon.

3762
04:28:38,324 --> 04:28:42,929
com/11tyConf. This is only open
during the conference. So you 

3763
04:28:42,929 --> 04:28:46,533
have a couple of hours to 
enter, still. 

3764
04:28:46,533 --> 04:28:48,533
If you do miss out on those, 
you can

3765
04:28:49,741 --> 04:28:51,845
still try out with a free trial
in one of the included 

3766
04:28:51,845 --> 04:28:53,845
starters.

3767
04:28:55,138 --> 04:28:57,138
We have a new team plan we've 
added for universities and 

3768
04:28:57,138 --> 04:28:59,138
colleges who, I think, are 
quite likely to find site 

3769
04:28:59,138 --> 04:29:02,036
mounting and Flatlake a really 
handy solution to manage that 

3770
04:29:02,036 --> 04:29:04,036
standard several hundred sites.

3771
04:29:06,135 --> 04:29:08,135
You can also check out Flatlake
at flatlake.

3772
04:29:08,636 --> 04:29:12,030
app. And finally, do feel free 
to take a look at Real

3773
04:29:14,740 --> 04:29:16,740
Big. company.

3774
04:29:18,722 --> 04:29:21,810
Read the content that was so 
much fun to write . And check 

3775
04:29:21,810 --> 04:29:23,810
out the files for Real

3776
04:29:24,223 --> 04:29:27,717
Big company if you'd like to 
dig through the source there. 

3777
04:29:27,717 --> 04:29:29,717
We're happy to answer questions
in chat after the talk or on 

3778
04:29:29,717 --> 04:29:31,717
Mastodon, if you prefer. Thanks
very much.

3779
04:29:33,720 --> 04:29:38,295
â‰« MIKE: Thanks, team. What a 
duo.

3780
04:29:45,595 --> 04:29:47,595
â‰« DAVID: That's great.

3781
04:29:48,883 --> 04:29:51,980
We're going to move on quickly,
but I want to quickly ask, what

3782
04:29:51,980 --> 04:29:53,980
kind of use cases do

3783
04:29:55,386 --> 04:29:57,386
you -- you mentioned, 
universities with a lot of 

3784
04:29:57,386 --> 04:29:59,386
different websites.

3785
04:29:59,769 --> 04:30:01,769
What other use cases do you 
think this would be valuable 

3786
04:30:01,769 --> 04:30:03,769
for? 

3787
04:30:05,387 --> 04:30:07,387
â‰« DAVID: I think anyone who 
wants to share content to be 

3788
04:30:07,387 --> 04:30:09,387
able to syndicate

3789
04:30:09,387 --> 04:30:11,801
content between sites, anyone 
who wants sites to be 

3790
04:30:11,801 --> 04:30:13,801
consistent.

3791
04:30:15,094 --> 04:30:17,094
It's for the users, people who 
see the website, you could do 

3792
04:30:17,094 --> 04:30:19,094
either approach

3793
04:30:19,094 --> 04:30:21,094
. You could have very different
websites with exactly the same 

3794
04:30:21,094 --> 04:30:23,094
components. 

3795
04:30:24,596 --> 04:30:26,596
I don't think there's a limit 
to where this could go, really.

3796
04:30:28,390 --> 04:30:32,485
â‰« MIKE: Very cool. Again, just 
like page fun, it's

3797
04:30:35,195 --> 04:30:37,195
dispelling the myth of the 
limitations of static.

3798
04:30:38,488 --> 04:30:41,691
Now, you can have a full API of
your content to access it. 

3799
04:30:44,883 --> 04:30:46,883
â‰« DAVID: That's right, I used 
to work for a university, we 

3800
04:30:46,883 --> 04:30:48,883
had 300 sites and it was a pain
to do the content and 

3801
04:30:48,883 --> 04:30:51,184
everything had to be manually 
synced and kept perfect 

3802
04:30:51,184 --> 04:30:53,184
separately, and

3803
04:30:55,592 --> 04:30:57,592
a tool like this would've saved
-- would've changed my life . 

3804
04:30:57,592 --> 04:30:59,592
[ Laughter ] 
â‰« MIKE: Yeah.

3805
04:30:59,592 --> 04:31:01,592
Very cool. Thanks, team.

3806
04:31:04,159 --> 04:31:06,159
All right, we're going to move 
on to our next muted break. 

3807
04:31:06,159 --> 04:31:08,159
Going to kick off now.

3808
04:31:13,964 --> 04:31:15,964
A prompt for our drawing is 
going to be Lighthouse. 

3809
04:45:06,134 --> 04:45:08,134
â‰« MIKE: All right, we're back 
in action.

3810
04:45:09,434 --> 04:45:11,434
So, we've got 5 minutes before 
our next speaker.

3811
04:45:14,139 --> 04:45:17,846
So, let's take a quick 
question/answer with

3812
04:45:18,757 --> 04:45:21,162
the chat. So, I want to ask two
questions.

3813
04:45:27,162 --> 04:45:29,162
One, which video game would you
love to see

3814
04:45:29,687 --> 04:45:33,085
turn into a movie? I just 
finish

3815
04:45:36,789 --> 04:45:38,789
ed Fallout, I thought it was 
fantastic

3816
04:45:38,789 --> 04:45:41,400
they captured the world so 
well. 

3817
04:45:41,400 --> 04:45:43,400
And brought a lot from that 
game into the series.

3818
04:45:46,105 --> 04:45:48,105
And it was cool just getting to
experience

3819
04:45:49,311 --> 04:45:51,311
that world with my wife who is 
not a gamer. So that was cool.

3820
04:45:54,319 --> 04:45:57,415
What other game do you think 
would -- well, what game do you

3821
04:45:57,415 --> 04:45:59,415
think would -- needs

3822
04:45:59,423 --> 04:46:01,423
an adapt?

3823
04:46:03,332 --> 04:46:06,726
That's one, and then, two, 
what's the most

3824
04:46:09,836 --> 04:46:12,947
unconventional place you've 
worked from ? I'll go first.

3825
04:46:16,143 --> 04:46:18,143
Probably the one that M co 
comes

3826
04:46:19,346 --> 04:46:21,346
to mind for me, there was one 
afternoon where I couldn't be 

3827
04:46:21,346 --> 04:46:23,346
in my house, and

3828
04:46:23,550 --> 04:46:27,948
I needed to take a meeting. So 
I went to our garage and

3829
04:46:30,951 --> 04:46:32,951
took the meeting with my laptop
on top of our trash can. 

3830
04:46:35,028 --> 04:46:37,028
It was like the perfect height 
for standing disk.

3831
04:46:40,037 --> 04:46:42,044
And I blurred the background so
they couldn't -- you couldn't 

3832
04:46:42,044 --> 04:46:44,044
really tell, honestly.

3833
04:46:49,559 --> 04:46:53,166
My wife came home, she was in 
the car and she opened the 

3834
04:46:53,166 --> 04:46:56,267
garage door and, so, you just 
see -- you hear this big 

3835
04:46:56,267 --> 04:46:58,267
mechanical noise,

3836
04:46:59,468 --> 04:47:01,468
and have the garage door open 
as I'm in the middle of this 

3837
04:47:01,468 --> 04:47:03,468
meeting . 

3838
04:47:05,083 --> 04:47:07,083
That's my most unconventional. 
What do we got?

3839
04:47:10,493 --> 04:47:12,597
Not a gamer but can't wait for 
Fallout season 2.

3840
04:47:15,409 --> 04:47:17,409
Yeah, it's going to be really 
cool. We've got a lot here.

3841
04:47:22,821 --> 04:47:27,318
I just started that, that would
be fascinating. Zelda, maybe 

3842
04:47:27,318 --> 04:47:29,318
like seems like Nintendo's

3843
04:47:30,938 --> 04:47:32,938
figured out how to make content

3844
04:47:34,145 --> 04:47:36,945
out of their property . That'll
be interesting one to watch.

3845
04:47:40,345 --> 04:47:42,345
Seems pretty natural for them 
to tackle next.

3846
04:47:44,661 --> 04:47:46,661
Untitled Goose Game. I wonder 
how that would work. 

3847
04:47:49,572 --> 04:47:52,875
Gears of War, Fantasy 6 is a 
hell of a story, I haven't

3848
04:47:53,982 --> 04:47:57,382
played it, but I should. I've 
done 7, 8, 9

3849
04:48:03,298 --> 04:48:08,208
gears -- spirit era ? All that 
and Last

3850
04:48:10,721 --> 04:48:13,217
of Us has been killer. The next
Last of Us, I can't wait for 

3851
04:48:13,217 --> 04:48:15,217
that. 

3852
04:48:19,225 --> 04:48:22,225
Mine Forever Voyaging. I 
haven't heard of that. Half 

3853
04:48:22,225 --> 04:48:24,225
Life.

3854
04:48:25,523 --> 04:48:27,523
Yeah, there was just a game 
someone

3855
04:48:29,325 --> 04:48:32,421
can fill me in the chat, it was
released by New Zealand game 

3856
04:48:32,421 --> 04:48:34,421
development company that is 
kind

3857
04:48:35,827 --> 04:48:37,827
of -- it's like inspired by 
Half

3858
04:48:39,234 --> 04:48:42,340
Life 1, and kind of is loose ly
following on from that story. 

3859
04:48:42,340 --> 04:48:44,340
It looks awesome.

3860
04:48:44,340 --> 04:48:47,047
I haven't played it yet. 
It's just being released in 

3861
04:48:47,047 --> 04:48:49,047
it's like

3862
04:48:49,047 --> 04:48:52,967
a -- what's it called? A 
prerelease. Aspire. That would 

3863
04:48:52,967 --> 04:48:54,967
be cool.

3864
04:48:59,473 --> 04:49:01,473
Horizon Dawn, oh Netflix is 
making a show, also, Monkey 

3865
04:49:01,473 --> 04:49:03,473
Island. 

3866
04:49:06,681 --> 04:49:08,681
Lots of Horizon Dawns.

3867
04:49:12,792 --> 04:49:14,792
(Inaudible) yeah.

3868
04:49:14,792 --> 04:49:16,882
Maybe that's coming up. Portal?
Yeah, that would be 

3869
04:49:16,882 --> 04:49:18,882
interesting.

3870
04:49:22,784 --> 04:49:24,784
Dredge.

3871
04:49:25,090 --> 04:49:27,090
Shout out to New Zealand game 
companies.

3872
04:49:37,208 --> 04:49:39,208
Here we go. Yeah, check it out.

3873
04:49:46,615 --> 04:49:48,615
It is perfect.

3874
04:49:49,916 --> 04:49:53,120
All right, we're ready to move 
on to our next speaker, who is 

3875
04:49:53,120 --> 04:49:56,122
Chris Ferdinanderdinandi.

3876
04:49:59,320 --> 04:50:03,132
His developer tips newsletter 
is read by thousands each 

3877
04:50:03,132 --> 04:50:06,725
weekday. Find it at 
gomakethings. com. 

3878
04:50:09,124 --> 04:50:11,124
Chris is talking about come to 
the light side. HTML with 

3879
04:50:11,124 --> 04:50:13,124
components.

3880
04:50:28,039 --> 04:50:30,638
â‰« CHRIS: Mike, always a 
pleasure to chat. 

3881
04:50:30,638 --> 04:50:32,638
â‰« MIKE: It is, and I know this 
is a topic close to your heart.

3882
04:50:33,335 --> 04:50:35,335
I'm really excited to see what 
you have to say today. 

3883
04:50:35,335 --> 04:50:37,508
â‰« CHRIS: Thanks. Yeah, glad to 
be here. Thanks for having me.

3884
04:50:39,912 --> 04:50:41,912
Actually share. Cool.

3885
04:50:43,506 --> 04:50:45,506
My screen is now fully 
obscured, is that OK ? 

3886
04:50:45,506 --> 04:50:47,506
â‰« MIKE: Yep, you're good. 
â‰« CHRIS: Perfect. Awesome.

3887
04:50:49,294 --> 04:50:51,294
We're going to talk about web 
components today.

3888
04:50:53,993 --> 04:50:56,894
Full disclosure, I have ADHD, I
might bounce off screen as I 

3889
04:50:56,894 --> 04:50:58,894
move around a little bit today.

3890
04:51:00,189 --> 04:51:02,189
Web components sit in this 
uncanny valley.

3891
04:51:04,783 --> 04:51:07,191
Not quite react React 
components, not with the grain 

3892
04:51:07,191 --> 04:51:09,191
of the web either.

3893
04:51:10,489 --> 04:51:12,489
I think a lot of that is really
because we've been thinking 

3894
04:51:12,489 --> 04:51:14,489
about and using them wrong. 

3895
04:51:15,389 --> 04:51:17,389
Today, I want to show you what 
I think is a better way to use

3896
04:51:18,486 --> 04:51:20,486
web components, or at least one
that works with the grain of if

3897
04:51:20,486 --> 04:51:22,486
web rather than against it.

3898
04:51:24,590 --> 04:51:26,590
Mike, thanks for that great 
introduction, I'm

3899
04:51:28,995 --> 04:51:30,995
Chris Ferdinandi, you can find 
me on gomakethings. com.

3900
04:51:33,790 --> 04:51:35,790
I teach how to make things in 
the web through courses, 

3901
04:51:35,790 --> 04:51:37,790
workshops , and daily developer
tips newsletter, and

3902
04:51:38,693 --> 04:51:41,987
I consult with amazing 
companies. These days, that 

3903
04:51:41,987 --> 04:51:43,987
means building custom web 
components, like

3904
04:51:43,998 --> 04:51:47,199
I recently did for a project 
with NASA. 

3905
04:51:47,199 --> 04:51:49,199
The thing with web components, 
they've been around for a 

3906
04:51:49,199 --> 04:51:51,199
really long time. They were 
first announced in 2011, which 

3907
04:51:51,199 --> 04:51:53,199
is over a decade

3908
04:51:53,913 --> 04:51:56,215
ago, and they've been 
supporting major browsers for 

3909
04:51:56,215 --> 04:51:58,215
years.

3910
04:52:00,316 --> 04:52:02,316
Now, when they first came out, 
a lot of folks thought they 

3911
04:52:02,316 --> 04:52:04,316
were going to be the thing that
finally killed React. 

3912
04:52:06,527 --> 04:52:08,527
And if you're watching in 2024 
or beyond, you

3913
04:52:09,435 --> 04:52:11,435
know that they weren't. React 
started to swallow up 

3914
04:52:11,435 --> 04:52:13,435
everything.

3915
04:52:15,441 --> 04:52:17,441
And people often use them like 
you would a React component.

3916
04:52:18,740 --> 04:52:21,830
So a lot of tutorials that you 
see start with an empty custom 

3917
04:52:21,830 --> 04:52:23,830
HTML element and then, they use
JavaScript to inject the HTML. 

3918
04:52:27,926 --> 04:52:31,020
And don't forget about the 
shadow DOM, there was a lot of 

3919
04:52:31,020 --> 04:52:33,020
hype around using the shadow 
DOM

3920
04:52:33,713 --> 04:52:37,006
to keep the HTML isolated from 
the rest of the UI. This was 

3921
04:52:37,006 --> 04:52:39,006
promoted as a key feature of 
web components.

3922
04:52:40,791 --> 04:52:42,791
Of course, once you do that, 
your HTML doesn't have

3923
04:52:43,998 --> 04:52:46,091
access to your global styles 
sheets, so you need to inject 

3924
04:52:46,091 --> 04:52:48,091
your CSS with JavaScript, too. 

3925
04:52:50,680 --> 04:52:52,680
This approach feels a lot like 
React but native

3926
04:52:53,773 --> 04:52:56,980
. But if you want React-like 
components or React-like 

3927
04:52:56,980 --> 04:52:58,980
experience, React and smaller 
libraries

3928
04:53:00,189 --> 04:53:02,189
like Preact, honestly in my 
opinion, they do it better.

3929
04:53:04,289 --> 04:53:06,289
That sounds weird coming from 
someone who spends their whole 

3930
04:53:06,289 --> 04:53:08,289
career

3931
04:53:08,499 --> 04:53:10,499
evangelizing vanilla 
JavaScript, but the reality 

3932
04:53:10,499 --> 04:53:12,499
that web components don't have 
data reactivity, although you 

3933
04:53:12,499 --> 04:53:14,499
can hack that in with

3934
04:53:14,682 --> 04:53:18,177
proxies, they don't have DOM 
diffing. And they don't have 

3935
04:53:18,177 --> 04:53:22,247
support for single- file 
components. 

3936
04:53:22,247 --> 04:53:24,247
Although, if you use a plugin 
like Zach's web C,

3937
04:53:24,247 --> 04:53:27,947
you can kind of sort of make 
that work. If you're a 

3938
04:53:27,947 --> 04:53:30,758
developer who likes React, web 
components often aren't React-y

3939
04:53:30,758 --> 04:53:32,758
enough.

3940
04:53:34,251 --> 04:53:37,347
But because this approach often
starts with an empty element 

3941
04:53:37,347 --> 04:53:39,347
that relies on JavaScript to 
render its content, web

3942
04:53:40,441 --> 04:53:42,441
standards and progressive 
enhancement evangelists like 

3943
04:53:42,441 --> 04:53:44,441
myself also dislike this 
approach. 

3944
04:53:46,622 --> 04:53:48,622
I think this is why it feels 
like it's taken so long for web

3945
04:53:48,622 --> 04:53:50,720
components to catch on. For the
rest of this talk, I want to 

3946
04:53:50,720 --> 04:53:52,720
show you a better way.

3947
04:53:54,214 --> 04:53:56,214
It's the approach that I use 
with NASA and various other 

3948
04:53:56,214 --> 04:53:58,214
clients to build web components
that are simple, reliable, and 

3949
04:53:58,214 --> 04:54:02,410
that work more with the grain 
of the web. 

3950
04:54:02,410 --> 04:54:04,410
Here's the agenda for the rest 
of this talk.

3951
04:54:05,699 --> 04:54:07,699
We're going to start by talking
about a new way to build web 

3952
04:54:07,699 --> 04:54:09,699
components

3953
04:54:09,699 --> 04:54:11,699
or a different way to build web
components that's more with the

3954
04:54:11,699 --> 04:54:13,699
grain of the web. We're going 
to dig into tips and tricks 

3955
04:54:13,699 --> 04:54:15,983
that make working with web 
components easier and we're 

3956
04:54:15,983 --> 04:54:17,983
going to round things out by 
looking at specific

3957
04:54:19,790 --> 04:54:21,790
examples, including building a 
web component this way from 

3958
04:54:21,790 --> 04:54:23,790
scratch . 

3959
04:54:26,180 --> 04:54:28,180
Let's start by talking about a 
new way about thinking about

3960
04:54:28,388 --> 04:54:33,089
web components that honestly 
kind of old school. November of

3961
04:54:33,089 --> 04:54:35,089
last year, Jeremy Keith wrote 
an article about this approach 

3962
04:54:35,089 --> 04:54:37,089
. And he wrote, try not to

3963
04:54:38,286 --> 04:54:41,582
bring React mindset with you. 
Do you really need to invent a 

3964
04:54:41,582 --> 04:54:43,582
new component from

3965
04:54:45,190 --> 04:54:47,190
scratch or can you use HTML up 
to the limit

3966
04:54:48,281 --> 04:54:52,476
and unHans enhance the markup? 
It's a name that started to 

3967
04:54:52,476 --> 04:54:54,476
stick and I'm seeing it pop

3968
04:54:54,481 --> 04:54:57,272
up more and more around the 
web. 

3969
04:54:57,272 --> 04:54:59,272
HTML web component is about 
progressive enhancement.

3970
04:55:00,558 --> 04:55:02,558
So rather than an empty 
element, you start with 

3971
04:55:02,558 --> 04:55:04,558
perfectly functional HTML

3972
04:55:04,558 --> 04:55:06,558
. Here, we have a collection of
headings and some content that 

3973
04:55:06,558 --> 04:55:08,558
goes with them.

3974
04:55:09,458 --> 04:55:11,458
Let's imagine we eventually 
want this to be an accordion 

3975
04:55:11,458 --> 04:55:13,458
component where clicking or 
tapping on the heading causes 

3976
04:55:13,458 --> 04:55:17,877
the content that goes with it 
to get expanded or hidden. 

3977
04:55:17,877 --> 04:55:21,979
We can use a web component for 
that. As a convenient way to 

3978
04:55:21,979 --> 04:55:23,979
enhance what's already there 
into something more powerful 

3979
04:55:23,979 --> 04:55:26,282
and interactive. And we start 
that process by wrapping our 

3980
04:55:26,282 --> 04:55:28,282
content in a custom element.

3981
04:55:31,380 --> 04:55:33,380
In this case, we'll call it 
accordion group because that's 

3982
04:55:33,380 --> 04:55:35,380
a very easy and obvious 
description of what this thing 

3983
04:55:35,380 --> 04:55:37,985
is going to be. 
When the web component runs and

3984
04:55:37,985 --> 04:55:40,483
does its thing, the HTML and 
the DOM ends up looking 

3985
04:55:40,483 --> 04:55:42,483
different.

3986
04:55:43,770 --> 04:55:45,770
You end up with button elements
around the heading texts so you

3987
04:55:45,770 --> 04:55:47,770
have a focusable interactive 
element, you get

3988
04:55:50,863 --> 04:55:52,863
some ARIA

3989
04:55:53,947 --> 04:55:55,947
attributes so that screen 
readers understand the 

3990
04:55:55,947 --> 04:55:57,947
interactions on the page . And 
the content gets hidden by 

3991
04:55:57,947 --> 04:56:01,222
default using the hidden 
attribute. 

3992
04:56:01,222 --> 04:56:03,222
But if this never actually ran,
you would still

3993
04:56:03,827 --> 04:56:07,116
have perfectly functional 
markup. And that's really the 

3994
04:56:07,116 --> 04:56:09,116
big difference between HTML

3995
04:56:10,208 --> 04:56:12,620
web components and the way they
were historically presented in 

3996
04:56:12,620 --> 04:56:14,620
a lot of older tutorials talk 
about them.

3997
04:56:14,620 --> 04:56:18,219
Now, this probably looks a lot 
like old school DOM 

3998
04:56:18,219 --> 04:56:21,323
manipulation. If you've been 
around for a while, this is how

3999
04:56:21,323 --> 04:56:23,323
we used to build things.

4000
04:56:25,024 --> 04:56:28,123
And honestly, it really is, but
web components bring a lot of 

4001
04:56:28,123 --> 04:56:33,024
benefits that make building 
interactive UI a lot easier. 

4002
04:56:33,024 --> 04:56:37,512
For starters, they're, in my 
opinion, easier to write. 

4003
04:56:37,512 --> 04:56:39,512
You get to write your HTML as 
HTML rather than HTML in JS, 

4004
04:56:39,512 --> 04:56:41,512
yuck.

4005
04:56:44,013 --> 04:56:46,013
And rather THARN

4006
04:56:48,422 --> 04:56:50,422
than unique selectors, yo you 
combine your components once 

4007
04:56:50,422 --> 04:56:52,538
and wrap your HTML in your 
custom element. 

4008
04:56:52,538 --> 04:56:54,538
You can even have multiple 
versions on a page.

4009
04:56:56,230 --> 04:56:58,230
Each one automatically 
instantiates as its own unique 

4010
04:56:58,230 --> 04:57:02,517
instance. 
Because functional HTML is 

4011
04:57:02,517 --> 04:57:04,517
there, people get a usable 
experience immediately.

4012
04:57:06,112 --> 04:57:08,112
And if your web component fails
to load for some reason, users

4013
04:57:09,319 --> 04:57:11,319
still have a perfectly 
functional experience instead 

4014
04:57:11,319 --> 04:57:13,319
of one that doesn't work. 

4015
04:57:15,117 --> 04:57:17,117
Web components also let you 
provide options and settings 

4016
04:57:17,117 --> 04:57:19,117
declaratively in the markup.

4017
04:57:20,626 --> 04:57:22,626
This makes it a lot more 
obvious what's happening just 

4018
04:57:22,626 --> 04:57:24,626
by looking at the HTML.

4019
04:57:24,626 --> 04:57:27,923
The behavior isn't hidden away 
in a JavaScript file somewhere.

4020
04:57:27,923 --> 04:57:29,923
And you can include multiple 
instances, each with their own 

4021
04:57:29,923 --> 04:57:31,923
settings , through the HTML 
alone. 

4022
04:57:34,623 --> 04:57:36,623
No more instantiating with 
different selectors and 

4023
04:57:36,623 --> 04:57:38,623
settings , often some 
JavaScript file you have to 

4024
04:57:38,623 --> 04:57:40,623
hunt down every time you want 
to make an update.

4025
04:57:44,319 --> 04:57:46,319
Let's look at tips and tricks 
that make working with web 

4026
04:57:46,319 --> 04:57:48,319
components even easier.

4027
04:57:49,624 --> 04:57:51,624
Now, if you've never created a 
web component before, I think 

4028
04:57:51,624 --> 04:57:53,624
it's worthwhile to start by 
kind of building

4029
04:57:54,732 --> 04:57:56,732
one, and we're going to start 
with a custom element. 

4030
04:57:58,322 --> 04:58:00,322
Here, I'm going to use the most
cliche of examples, a 

4031
04:58:00,322 --> 04:58:02,322
countercomponent. So you get a 
button, you click it, and the 

4032
04:58:02,322 --> 04:58:04,322
text updates

4033
04:58:05,018 --> 04:58:07,018
to indicate how many times it's
been clicked or tapped or 

4034
04:58:07,018 --> 04:58:09,018
activated.

4035
04:58:09,018 --> 04:58:12,212
This is honestly kind of a 
terrible example for an HTML 

4036
04:58:12,212 --> 04:58:14,212
web component, you're not 
progressively

4037
04:58:15,623 --> 04:58:17,623
enhancing anything, the button 
is absolutely useless without 

4038
04:58:17,623 --> 04:58:19,623
the JavaScript. But it's a 
really simple tutorial to 

4039
04:58:19,623 --> 04:58:21,623
explain. So if you've never 
worked with web components 

4040
04:58:21,623 --> 04:58:23,623
before, it's a great way to

4041
04:58:23,623 --> 04:58:25,623
kind of wrap your head around 
some of the concepts. 

4042
04:58:25,623 --> 04:58:28,220
We're going to roll with it. We
start by wrapping some existing

4043
04:58:28,220 --> 04:58:30,430
HTML with a custom element. In 
this case, count up.

4044
04:58:33,626 --> 04:58:37,230
And then, in our JavaScript 
file, we use the custom 

4045
04:58:37,230 --> 04:58:39,230
elements define method to 
define a custom

4046
04:58:39,230 --> 04:58:42,431
element and associate behavior 
with it. 

4047
04:58:42,431 --> 04:58:44,431
You pass in the name of the 
custom element as a string.

4048
04:58:46,137 --> 04:58:48,137
And just as a quick aside, web 
component

4049
04:58:49,234 --> 04:58:52,439
, custom elements have to have 
a dash in them, single word 

4050
04:58:52,439 --> 04:58:54,439
elements are reserved for 
browser native elements

4051
04:58:54,744 --> 04:58:57,248
. When you make your own, it 
has to have one dash. We pass 

4052
04:58:57,248 --> 04:58:59,248
the name in, here it's count 
up.

4053
04:59:00,749 --> 04:59:02,749
And we pass in a class that 
extends the HTML element class.

4054
04:59:04,749 --> 04:59:07,167
Your class needs to have a 
constructer method in it. And 

4055
04:59:07,167 --> 04:59:09,167
that runs automatically on each
element and creates

4056
04:59:09,167 --> 04:59:12,678
unique instance of your 
component. And then, inside the

4057
04:59:12,678 --> 04:59:14,678
constructer, you always run the

4058
04:59:14,678 --> 04:59:16,789
super method first. This gives 
you access to the properties 

4059
04:59:16,789 --> 04:59:18,789
and methods of the HTML

4060
04:59:19,604 --> 04:59:22,905
element class that this class 
is extending. And then, after 

4061
04:59:22,905 --> 04:59:26,311
that, you can run any of your 
custom code . 

4062
04:59:26,311 --> 04:59:28,311
Now, web components provide 
some useful ways

4063
04:59:29,415 --> 04:59:31,415
to handle that, and in 
particular, they make 

4064
04:59:31,415 --> 04:59:33,415
encapsulation really easy.

4065
04:59:34,430 --> 04:59:37,832
It's built in, even without the
shadow DOM. So while light DOM

4066
04:59:40,834 --> 04:59:42,834
elements, so things not in the 
shadow DOM

4067
04:59:44,236 --> 04:59:46,236
will still be accessible, 
they're scoped to your custom 

4068
04:59:46,236 --> 04:59:48,236
element . And that provides 
some unique benefits. 

4069
04:59:49,035 --> 04:59:52,642
For example, in your web 
component, this keyword refers 

4070
04:59:52,642 --> 04:59:54,642
to the current

4071
04:59:55,850 --> 04:59:57,850
instantiation of the component 
and the custom element wrapped 

4072
04:59:57,850 --> 05:00:01,868
around it. You can define 
properties on it. In this case,

4073
05:00:01,868 --> 05:00:03,868
we're setting a count property 
of zero and we're going to

4074
05:00:03,868 --> 05:00:06,872
increase that every time the 
button is clicked. 

4075
05:00:06,872 --> 05:00:08,872
And, you can search for 
elements inside

4076
05:00:10,080 --> 05:00:12,080
your custom element by scoping 
them to the this keyword.

4077
05:00:14,983 --> 05:00:18,187
If I use the query selector 
method on this, I'm looking for

4078
05:00:18,187 --> 05:00:20,187
the button inside my custom 
element rather than everywhere 

4079
05:00:20,187 --> 05:00:23,192
in the DOM. So it makes finding
elements in your component and

4080
05:00:24,294 --> 05:00:27,405
manipulating them way easier. 
You don't have to use any 

4081
05:00:27,405 --> 05:00:29,405
weird, special tricks. 

4082
05:00:30,219 --> 05:00:32,219
You also get built in CSS 
scoping, if you want it.

4083
05:00:33,522 --> 05:00:36,623
By using the light DOM instead 
of the shadow DOM, your web 

4084
05:00:36,623 --> 05:00:38,623
component will automatically

4085
05:00:39,725 --> 05:00:41,725
inherit your style sheet 
styles, and in my opinion, one 

4086
05:00:41,725 --> 05:00:43,725
of the biggest wins of this 
approach because

4087
05:00:48,032 --> 05:00:50,032
shadow DOM styling, is a 
painful experience. This gets 

4088
05:00:50,032 --> 05:00:52,646
around this. But if you want to
scope styles in your web 

4089
05:00:52,646 --> 05:00:54,646
component, you can use the 
custom HTML

4090
05:00:54,653 --> 05:00:56,653
element as part of your 
selector string.

4091
05:00:59,357 --> 05:01:02,455
Here, our button is going to 
inherit all of the button 

4092
05:01:02,455 --> 05:01:04,455
global styles and we can 
override or modify

4093
05:01:05,842 --> 05:01:07,842
by prefixing with the count up 
element. 

4094
05:01:10,740 --> 05:01:12,740
You can even use CSS to detect 
when the JavaScript is ready

4095
05:01:13,446 --> 05:01:16,749
with the defined pseudo class. 
And if you define it with the 

4096
05:01:16,749 --> 05:01:18,749
not pseudo class,

4097
05:01:19,257 --> 05:01:21,257
you can detect when the 
JavaScript for the component is

4098
05:01:21,257 --> 05:01:23,257
not ready. If you've ever 
written a DOM manipulation 

4099
05:01:23,257 --> 05:01:25,864
library before and done 
something like add a class to

4100
05:01:29,571 --> 05:01:31,571
the document or the body 
element, that way you can 

4101
05:01:31,571 --> 05:01:33,571
modify your styling depending 
on whether the library has 

4102
05:01:33,571 --> 05:01:36,996
loaded, or not, you don't have 
to do that anymore. 

4103
05:01:36,996 --> 05:01:38,996
Web components provide a 
built-in way to detect that.

4104
05:01:39,302 --> 05:01:41,302
Using the defined pseudo class.

4105
05:01:44,212 --> 05:01:46,212
Web components also have some 
built-in methods that make 

4106
05:01:46,212 --> 05:01:48,327
handling events easier. With 
the add event listener method,

4107
05:01:51,327 --> 05:01:53,327
you can pass in an object 
instead of a callback function 

4108
05:01:53,327 --> 05:01:55,327
as that second argument . 
If the object has a handle 

4109
05:01:55,327 --> 05:01:58,243
event method, that method will 
automatically run response to 

4110
05:01:58,243 --> 05:02:00,949
the event and receive the event
object as an argument.

4111
05:02:04,354 --> 05:02:06,354
Now, why would you do that 
instead of a callback function?

4112
05:02:09,062 --> 05:02:11,062
A lot of it has to do with this
keyword we talked about 

4113
05:02:11,062 --> 05:02:13,062
earlier. In a normal callback 
function, the "

4114
05:02:15,460 --> 05:02:17,460
this" keyword doesn't refer to 
the instance, it refers to 

4115
05:02:17,460 --> 05:02:19,460
either the element

4116
05:02:19,460 --> 05:02:21,460
or the window object depending 
on the context in which it's 

4117
05:02:21,460 --> 05:02:23,460
used. 

4118
05:02:23,768 --> 05:02:26,871
But in the handle event method,
this is the instance, which 

4119
05:02:26,871 --> 05:02:28,871
means we can access those 
properties like count that we

4120
05:02:29,972 --> 05:02:33,074
need to manipulate some things,
as well as if we had other 

4121
05:02:33,074 --> 05:02:36,278
methods in our class, we could 
run those, too, without having 

4122
05:02:36,278 --> 05:02:38,278
to do things like use the bind 
method

4123
05:02:39,682 --> 05:02:42,887
or some weird hacks with arrow 
functions and timing around WHN

4124
05:02:42,887 --> 05:02:46,198
when we create callback 
functions . 

4125
05:02:46,198 --> 05:02:48,198
And in this particular 
instance, we are increasing our

4126
05:02:48,198 --> 05:02:50,198
count by one. And then, we're 
updating the text inside our 

4127
05:02:50,198 --> 05:02:52,198
button to show how many times 
it's been clicked.

4128
05:02:56,017 --> 05:02:58,017
If you need to listen to more 
than one type of event, you can

4129
05:02:58,017 --> 05:03:00,017
create "on" methods in your 
class with each of your 

4130
05:03:00,017 --> 05:03:02,327
different event types and use 
the handle event method to 

4131
05:03:02,327 --> 05:03:04,327
automatically route them

4132
05:03:04,327 --> 05:03:07,744
. Here, I have an on click 
event. And whenever that event 

4133
05:03:07,744 --> 05:03:09,744
type fires, my

4134
05:03:10,837 --> 05:03:12,837
handle event method is going to
automatically

4135
05:03:14,246 --> 05:03:16,246
run that for me so you don't 
have to use a bunch of if else 

4136
05:03:16,246 --> 05:03:18,246
statements.

4137
05:03:18,542 --> 05:03:22,137
Set handle event to do the work
for you . 

4138
05:03:22,137 --> 05:03:24,137
With web components, you use 
custom attributes in

4139
05:03:25,230 --> 05:03:27,230
your HTML to define your 
options

4140
05:03:29,633 --> 05:03:33,134
and settings . Say you wanteded
to define,

4141
05:03:36,646 --> 05:03:38,646
42, you could add a start 
attribute and give it a value.

4142
05:03:40,546 --> 05:03:42,546
In your constructer, you can 
use the

4143
05:03:43,758 --> 05:03:45,758
get attribute method to get 
that attribute and the parse 

4144
05:03:45,758 --> 05:03:47,758
float to convert it from a 
string into a number, and

4145
05:03:50,055 --> 05:03:52,561
if that attribute exists and a 
valid number, you use it for 

4146
05:03:52,561 --> 05:03:54,561
this count instead of the 
default of zero.

4147
05:03:54,561 --> 05:03:56,758
If not, you fall back. Users 
don't have to use it but they 

4148
05:03:56,758 --> 05:03:58,758
have the option. 

4149
05:04:00,343 --> 05:04:02,343
What had makes this approach 
particularly nice is you can 

4150
05:04:02,343 --> 05:04:04,343
now have

4151
05:04:04,343 --> 05:04:06,532
multiple instances of your Web 
Component on a page, each one 

4152
05:04:06,532 --> 05:04:08,532
can have their own options, 
settings, and properties

4153
05:04:09,033 --> 05:04:11,033
, you never have to write any 
additional JavaScript. 

4154
05:04:14,336 --> 05:04:16,336
And you can tell by looking at 
the element what its specific 

4155
05:04:16,336 --> 05:04:18,336
settings are and how you expect
it to behavior.

4156
05:04:19,128 --> 05:04:22,334
And while Web Components don't 
have reactive data like React 

4157
05:04:22,334 --> 05:04:24,334
or Vue does, they do have a 
built

4158
05:04:24,641 --> 05:04:26,641
-in mechanism for detecting 
attribute changes. 

4159
05:04:28,433 --> 05:04:31,642
For example, let's say you 
wanted to stop the count up 

4160
05:04:31,642 --> 05:04:33,642
component from counting when 
the pause attribute is added to

4161
05:04:33,642 --> 05:04:35,827
it. 
First, you define an

4162
05:04:38,823 --> 05:04:40,823
array of attributes you want to
observe and assign them to the 

4163
05:04:40,823 --> 05:04:42,823
static observed attributes 
property. And you do this for 

4164
05:04:42,823 --> 05:04:47,025
performance reasons. So if you 
were watching every single 

4165
05:04:47,025 --> 05:04:49,025
attribute that

4166
05:04:50,123 --> 05:04:53,214
could or could not be added or 
changed on an element, it could

4167
05:04:53,214 --> 05:04:56,325
start to bog down the memory 
and create performance issues. 

4168
05:04:56,325 --> 05:04:58,325
You say, just pay attention to 
these. 

4169
05:05:00,122 --> 05:05:02,820
Whenever one of those 
attributes is changed in some 

4170
05:05:02,820 --> 05:05:06,115
way, the attribute changed 
callback method runs. And this 

4171
05:05:06,115 --> 05:05:08,115
will be triggered whenever an 
observed method is added, 

4172
05:05:08,115 --> 05:05:10,514
removed, or changes in value. 
And it receives three arguments

4173
05:05:10,514 --> 05:05:12,514
automatically.

4174
05:05:13,812 --> 05:05:15,812
The name of the attribute, its 
old value, and its new value.

4175
05:05:18,915 --> 05:05:22,006
If you want to detect whether 
the attribute has been added, 

4176
05:05:22,006 --> 05:05:24,006
removed, or changed, you can 
check the old and new

4177
05:05:25,213 --> 05:05:28,111
value properties when an 
attribute was just added, the 

4178
05:05:28,111 --> 05:05:30,111
old value will be null because 
there was nothing there before.

4179
05:05:30,111 --> 05:05:32,111
When it's been removed, the new
value will be null

4180
05:05:34,788 --> 05:05:36,788
. In all other situations, 
where the value's just 

4181
05:05:36,788 --> 05:05:38,788
changing, it will be a string.

4182
05:05:39,168 --> 05:05:41,168
It could be an empty string, 
could have some sort of value 

4183
05:05:41,168 --> 05:05:43,168
with it, but it'll be a string.

4184
05:05:44,669 --> 05:05:48,274
In this particular case, if the
attribute was removed, so if 

4185
05:05:48,274 --> 05:05:51,363
the -- I'm sorry, if it was 
added, rather , if the old 

4186
05:05:51,363 --> 05:05:53,363
value was null, we're going to 
remove our click event 

4187
05:05:53,363 --> 05:05:57,725
listeners. We stop detecting 
clicks. 

4188
05:05:57,725 --> 05:05:59,725
When the attribute gets 
removed, we are going to add 

4189
05:05:59,725 --> 05:06:01,725
our click event listener back 
on.

4190
05:06:04,507 --> 05:06:07,518
Let's look at some examples of 
things HTML web components are 

4191
05:06:07,518 --> 05:06:09,518
particularly great at.

4192
05:06:12,814 --> 05:06:15,823
Let's say you have a button and
you want to show or hide some 

4193
05:06:15,823 --> 05:06:17,823
content when it's pressed. 

4194
05:06:18,407 --> 05:06:20,407
This is a classic show/hide 
disclosure component.

4195
05:06:23,704 --> 05:06:25,801
First, we'd start by wrapping a
custom element around it . The 

4196
05:06:25,801 --> 05:06:27,801
obviously named show/hide.

4197
05:06:29,095 --> 05:06:31,095
Now, you have an easy way to 
associate a button and content 

4198
05:06:31,095 --> 05:06:33,095
that goes with it. But if 
there's no JavaScript, users 

4199
05:06:33,095 --> 05:06:35,762
still get the content. In our 
JavaScript, we'll start by 

4200
05:06:35,762 --> 05:06:37,762
defining our custom

4201
05:06:38,847 --> 05:06:40,847
element, we'll pass in 
show/hide and our class that 

4202
05:06:40,847 --> 05:06:42,847
extends the HTML element.

4203
05:06:43,416 --> 05:06:45,416
And then, inside the 
constructer for that class, 

4204
05:06:45,416 --> 05:06:47,416
we'll run the super method and 
we'll define our properties. 

4205
05:06:49,796 --> 05:06:51,796
Maybe we'll get the button 
using the query selector method

4206
05:06:51,796 --> 05:06:53,796
on this . And then, we will get
the

4207
05:06:56,091 --> 05:06:58,091
content, the next element 
sibling, and assign that to a 

4208
05:06:58,091 --> 05:07:01,953
property, as well. That way, we
can access them later. Next, 

4209
05:07:01,953 --> 05:07:03,953
the initial UI.

4210
05:07:05,441 --> 05:07:07,819
We'll add an ARIA expanded 
value with the value of false. 

4211
05:07:07,819 --> 05:07:11,302
This is an accessibility 
requirement. So it conveys to 

4212
05:07:11,302 --> 05:07:13,302
people who use screen

4213
05:07:14,507 --> 05:07:16,507
readers what type of 
interaction they could expect 

4214
05:07:16,507 --> 05:07:18,507
from that button and what the 
current state of it and its 

4215
05:07:18,507 --> 05:07:20,507
content are. 
And then, we'll hide the 

4216
05:07:20,507 --> 05:07:22,507
content using the hidden 
attribute.

4217
05:07:23,469 --> 05:07:27,563
Now, the HTML UI looks like 
this after a Web Component 

4218
05:07:27,563 --> 05:07:29,563
instantiates and runs.

4219
05:07:30,051 --> 05:07:32,051
Next, we will add a click event
listener to our button.

4220
05:07:33,338 --> 05:07:37,952
And we'll do that by passing 
the instance, this, into the 

4221
05:07:37,952 --> 05:07:42,646
add event listener. That way, 
we can take advantage of the 

4222
05:07:42,646 --> 05:07:44,646
handle event method. 

4223
05:07:46,219 --> 05:07:48,219
Under the ARIA show/hide 
pattern,

4224
05:07:50,024 --> 05:07:52,024
it should have an expanded 
value of true when it's visible

4225
05:07:52,024 --> 05:07:54,024
and false when it's hidden.

4226
05:07:54,603 --> 05:07:58,209
Inside our handle event method,
we can check the current value 

4227
05:07:58,209 --> 05:08:00,209
of that attribute on our button
and show or hide the content 

4228
05:08:00,209 --> 05:08:02,707
accordingly. If it has a value 
of true, content is currently 

4229
05:08:02,707 --> 05:08:04,707
visible,

4230
05:08:05,792 --> 05:08:07,792
we'll change it to false, and 
we'll set the hidden attribute 

4231
05:08:07,792 --> 05:08:09,792
to hide that content.

4232
05:08:10,971 --> 05:08:12,971
Otherwise, we'll set it to true
to show the content and

4233
05:08:13,982 --> 05:08:17,469
remove the hidden attribute so 
you can see it. 

4234
05:08:17,469 --> 05:08:19,469
Now, that we have a functional 
component, we might try adding 

4235
05:08:19,469 --> 05:08:21,469
some styling to make it look a 
little bit nicer.

4236
05:08:23,451 --> 05:08:25,451
We might, for example, change 
the button color based on 

4237
05:08:25,451 --> 05:08:28,117
whether the content is hidden 
or visible. 

4238
05:08:28,117 --> 05:08:31,207
We'll give it maybe a blue 
color as the default, and we'll

4239
05:08:31,207 --> 05:08:33,207
make it darker when ARIA

4240
05:08:34,299 --> 05:08:36,299
expanded equals true, which we 
can do by using an attribute 

4241
05:08:36,299 --> 05:08:38,299
selector in the CSS.

4242
05:08:39,199 --> 05:08:42,288
Because we only want this to 
apply to our show hide 

4243
05:08:42,288 --> 05:08:44,288
component, we will scope our 
CSS to

4244
05:08:44,373 --> 05:08:47,659
that element. And maybe we want
to hide the button element 

4245
05:08:47,659 --> 05:08:49,659
until our web component 
JavaScript

4246
05:08:50,070 --> 05:08:52,070
loads since it requires 
JavaScript to work.

4247
05:08:53,960 --> 05:08:57,744
It's functionless until the Web
Component starts. We can use 

4248
05:08:57,744 --> 05:08:59,744
the not and defined pseudo 
classes for that

4249
05:09:00,037 --> 05:09:02,037
. And display none on our 
button to hide it. 

4250
05:09:03,611 --> 05:09:08,016
Another example, we talked 
about little bit earlier, Web 

4251
05:09:08,016 --> 05:09:10,626
Components are great for 
transform LG ing headings and 

4252
05:09:10,626 --> 05:09:12,626
content.

4253
05:09:14,119 --> 05:09:16,119
No worries, users still have 
access to all of the headings 

4254
05:09:16,119 --> 05:09:18,119
and all of the content. 
I'm not going to walk through 

4255
05:09:18,119 --> 05:09:20,119
the code for the rest of these 
because we would be here all 

4256
05:09:20,119 --> 05:09:22,788
day. Just some more examples to
kind of get your brain going on

4257
05:09:22,788 --> 05:09:24,788
what

4258
05:09:24,788 --> 05:09:26,788
you can do with this approach 
to web components.

4259
05:09:28,772 --> 05:09:31,185
You might also take a list of 
anchor elements and their so 

4260
05:09:31,185 --> 05:09:33,185
associated content and turn 
them into toggle tabs. No 

4261
05:09:33,185 --> 05:09:36,167
JavaScript? Users get a 
perfectly functional collection

4262
05:09:36,167 --> 05:09:38,167
of anchor links and content. 

4263
05:09:40,676 --> 05:09:42,676
One of my favorite uses, 
though, is forms.

4264
05:09:43,968 --> 05:09:47,173
The project I did for NASA 
involved building out an entire

4265
05:09:47,173 --> 05:09:49,173
app and it was done almost 
exclusively

4266
05:09:49,590 --> 05:09:52,878
through Form Interactions. I 
like to create forms that work 

4267
05:09:52,878 --> 05:09:54,878
with old school server submits 
and full page reloads by 

4268
05:09:54,878 --> 05:09:58,082
default. So you provide an 
action that points to

4269
05:10:01,075 --> 05:10:03,075
some sort of server pass, the 
form sends its data

4270
05:10:04,164 --> 05:10:07,249
to that path and the server 
does some stuff . And then, I 

4271
05:10:07,249 --> 05:10:09,249
use Web Components to turn them
into

4272
05:10:10,654 --> 05:10:12,654
a A

4273
05:10:14,660 --> 05:10:16,660
JAX forms and show a status 
message or update the UI 

4274
05:10:16,660 --> 05:10:18,660
instead of reloading the entire
page. 

4275
05:10:19,927 --> 05:10:23,020
Without JavaScript, you still 
get a perfectly usable form or 

4276
05:10:23,020 --> 05:10:25,020
in the case with the NASA 
project, a perfectly usable 

4277
05:10:25,020 --> 05:10:27,928
app. But with it, you get 
something even better, faster, 

4278
05:10:27,928 --> 05:10:31,259
snappier . If you

4279
05:10:34,255 --> 05:10:36,255
forget everything else about 
this talk, and I really hope 

4280
05:10:36,255 --> 05:10:38,255
you remember more than just 
this, but if you only remember 

4281
05:10:38,255 --> 05:10:40,847
one thing, I hope your key 
takeaway is to start

4282
05:10:43,834 --> 05:10:47,808
with functional HTML and then 
enhance with Web Components. If

4283
05:10:47,808 --> 05:10:49,808
you found this interesting, I 
put together a bunch of 

4284
05:10:49,808 --> 05:10:51,808
additional resources for 
building HTML

4285
05:10:55,424 --> 05:10:58,002
Web Components on gomake things.
com, you can find boilerplates 

4286
05:10:58,002 --> 05:11:00,002
and more. Thank you all so 
much. This was a lot of fun.

4287
05:11:03,881 --> 05:11:07,558
â‰« MIKE: Chris, that was 
incredible. I'm going to agree 

4288
05:11:07,558 --> 05:11:09,558
with a lot of the chat.

4289
05:11:11,053 --> 05:11:13,053
That's probably the best 
introduction to Web Components 

4290
05:11:13,053 --> 05:11:15,230
that I've heard. 
â‰« CHRIS: Thank you. 

4291
05:11:15,230 --> 05:11:17,230
â‰« MIKE: Yeah.

4292
05:11:18,517 --> 05:11:20,517
I feel like just seeing that 
and a lot of things click into 

4293
05:11:20,517 --> 05:11:22,517
place.

4294
05:11:23,417 --> 05:11:25,512
Particularly, like the defined,
not defined, I haven't -- I 

4295
05:11:25,512 --> 05:11:27,512
wasn't aware of that.

4296
05:11:29,000 --> 05:11:31,000
But it's such an elegant 
solution to that problem . 

4297
05:11:33,986 --> 05:11:36,397
I've just been adding classes 
to things recently to -- JS on 

4298
05:11:36,397 --> 05:11:38,397
or something like that. 

4299
05:11:38,782 --> 05:11:41,382
â‰« CHRIS: Yeah, thank you. 
â‰« MIKE: That's awesome.

4300
05:11:44,573 --> 05:11:47,660
So yeah, what do you think the 
-- what should we be excited 

4301
05:11:47,660 --> 05:11:49,660
about in the web component

4302
05:11:50,866 --> 05:11:52,866
space

4303
05:11:53,471 --> 05:11:57,455
? Clearly we need more adoption
and awareness around this. 

4304
05:11:57,455 --> 05:11:59,455
â‰« CHRIS: Yeah, so I'm 
particularly pessimistic about

4305
05:12:01,667 --> 05:12:03,667
shadow DOM, in general, it has 
valid uses.

4306
05:12:04,965 --> 05:12:06,965
But if you're someone who 
enjoys that or wish you could 

4307
05:12:06,965 --> 05:12:08,965
do more with

4308
05:12:08,975 --> 05:12:12,178
Shadow DOM but also you wish 
you could do the HTML first 

4309
05:12:12,178 --> 05:12:14,178
approach I described today,

4310
05:12:17,593 --> 05:12:19,593
it's now possible to use 
declarative Shadow

4311
05:12:20,685 --> 05:12:22,685
DOM, so you can write the stuff
that's going to end up in the

4312
05:12:23,782 --> 05:12:25,782
Shadow DOM in your HTML rather 
than having to historically 

4313
05:12:25,782 --> 05:12:27,782
they would all have to be 
generated through JavaScript. 

4314
05:12:29,388 --> 05:12:31,388
So, you know, there's now a way
to do that without it. I think 

4315
05:12:31,388 --> 05:12:33,388
that's pretty exciting.

4316
05:12:38,195 --> 05:12:41,282
Not specific to Web Components 
itself, but one thing I really,

4317
05:12:41,282 --> 05:12:43,282
I think the biggest thing that 
we're

4318
05:12:44,372 --> 05:12:47,576
missing from the web platform 
as a whole is some sort of 

4319
05:12:47,576 --> 05:12:49,576
method that allows diffing the 
DOM and

4320
05:12:50,778 --> 05:12:52,778
selecting the API without 
clobbering everything, right?

4321
05:12:55,161 --> 05:12:57,161
Where you say, here's an 
element, what it should look 

4322
05:12:57,161 --> 05:12:59,161
like, change just what needs to
get changed. We need that. 

4323
05:13:00,435 --> 05:13:02,435
That, in my opinion, would be 
the thing that really kills 

4324
05:13:02,435 --> 05:13:04,435
React

4325
05:13:04,435 --> 05:13:07,036
. You know, until then. 
â‰« MIKE: Where do you think that

4326
05:13:07,036 --> 05:13:09,036
comes from?

4327
05:13:10,920 --> 05:13:12,920
The browser specification and
...  

4328
05:13:15,185 --> 05:13:17,185
â‰« CHRIS: Yeah, I don't think 
I've even seen a specification 

4329
05:13:17,185 --> 05:13:19,185
for that . I know there are -- 
I heard rumors there's maybe 

4330
05:13:19,185 --> 05:13:22,773
some specs specific to Web 
Components for doing something 

4331
05:13:22,773 --> 05:13:24,773
like that.

4332
05:13:26,059 --> 05:13:28,059
Maybe, as a proposal, not like 
anything that's on a track to 

4333
05:13:28,059 --> 05:13:30,344
get built. But I would love 
that just as a general, like, 

4334
05:13:30,344 --> 05:13:32,344
thing for the

4335
05:13:33,750 --> 05:13:36,647
web, not just Web 
Component-specific . 

4336
05:13:36,647 --> 05:13:38,647
â‰« MIKE: Yeah, that would be 
incredible.

4337
05:13:39,942 --> 05:13:43,027
Zach was telling me recently 
that React, latest version of 

4338
05:13:43,027 --> 05:13:46,125
React has custom component 
support, so maybe React -- 

4339
05:13:46,125 --> 05:13:48,125
â‰« CHRIS: Finally. 

4340
05:13:49,703 --> 05:13:51,703
â‰« MIKE: Kind of meets in the 
middle of Web Components and 

4341
05:13:51,703 --> 05:13:53,703
brings a lot of the ideas to a 
broad

4342
05:13:55,807 --> 05:13:57,807
er audience of web developers. 
â‰« CHRIS: Yeah, that would be 

4343
05:13:57,807 --> 05:14:00,672
wonderful. I think the toughest
thing with Web Components in 

4344
05:14:00,672 --> 05:14:02,672
general is

4345
05:14:03,761 --> 05:14:06,968
really just if you're used to 
thinking about things in a 

4346
05:14:06,968 --> 05:14:08,968
React-y way, wrapping

4347
05:14:10,171 --> 05:14:12,171
your brain around the whole 
this is

4348
05:14:13,381 --> 05:14:16,769
more...  React components are 
everything in one place and Web

4349
05:14:19,754 --> 05:14:21,754
Components are separation of 
concerns and each thing does 

4350
05:14:21,754 --> 05:14:23,754
what it does best . 
And it's a mental shift.

4351
05:14:25,412 --> 05:14:27,412
So, yeah, I would like to see 
more of that.

4352
05:14:29,505 --> 05:14:33,113
I think one of the -- we're 
starting to see more big 

4353
05:14:33,113 --> 05:14:36,207
companies use Web Components, 
maybe bigger open source 

4354
05:14:36,207 --> 05:14:38,207
projects around it, I'm hoping 
the tide is starting to shift.

4355
05:14:40,783 --> 05:14:42,783
And you have projects like 
Enhance that use Web

4356
05:14:43,286 --> 05:14:45,286
Components as the foundation 
for an entire static site 

4357
05:14:45,286 --> 05:14:47,478
generator. That's pretty cool, 
too. 

4358
05:14:50,766 --> 05:14:52,766
â‰« MIKE: Well, appreciate 
everything you're doing to 

4359
05:14:52,766 --> 05:14:54,766
evangelize

4360
05:14:54,766 --> 05:14:56,766
Web Components, that was an 
incredible introduction to Web 

4361
05:14:56,766 --> 05:14:58,766
Components. 
â‰« CHRIS: Thank you so much. 

4362
05:14:58,766 --> 05:15:00,766
â‰« MIKE: Thank you. We're going 
to move straight on to our next

4363
05:15:00,766 --> 05:15:03,297
speaker. Ivan

4364
05:15:06,609 --> 05:15:08,609
Zhao.

4365
05:15:09,906 --> 05:15:11,906
Interested in nonlinear 
narratives, forms, and 

4366
05:15:11,906 --> 05:15:13,906
mechanics

4367
05:15:13,906 --> 05:15:17,220
that reckon with digital -- I 
don't even know how to say

4368
05:15:22,730 --> 05:15:24,730
that (inaudible) and queer 
identity, as

4369
05:15:28,544 --> 05:15:32,238
work interrogates individual 
and viewer agency. Research 

4370
05:15:32,238 --> 05:15:34,238
involves around interests tools
and play when he's not

4371
05:15:35,440 --> 05:15:37,440
making weird things on the 
internet, he's making weird 

4372
05:15:37,440 --> 05:15:39,440
bread in the kitchen. Love 
that. 

4373
05:15:41,150 --> 05:15:43,150
So today, Ivan east going to be
talking about Chinese type 

4374
05:15:43,150 --> 05:15:46,457
systems. 

4375
05:15:51,660 --> 05:15:53,660
[ Applause ] 
Ivan, welcome. 

4376
05:15:55,350 --> 05:15:57,350
â‰« IVAN: Yeah, thanks so much 
for that intro. 

4377
05:16:00,140 --> 05:16:02,623
â‰« MIKE: Yeah, came to hear more
about Chinese type systems. 

4378
05:16:02,623 --> 05:16:04,623
â‰« IVAN: Yeah, super excited.

4379
05:16:04,623 --> 05:16:07,246
I'm Ivan. This will probably 
lean on the more like 

4380
05:16:07,246 --> 05:16:09,246
history/theory

4381
05:16:09,740 --> 05:16:11,740
of the talks today, but super 
excited to chat about this.

4382
05:16:14,037 --> 05:16:17,244
So my kind of fascination and 
love for Chinese type recently 

4383
05:16:17,244 --> 05:16:19,244
came about when I was traveling
in Taiwan. 

4384
05:16:20,826 --> 05:16:22,826
And if you're a fan of this 
creature, there's

4385
05:16:24,232 --> 05:16:26,232
a 7-eleven in Taiwan that sells
it.

4386
05:16:28,730 --> 05:16:31,937
I was enamored by this juxta
position of the Chinese type 

4387
05:16:31,937 --> 05:16:33,937
VER

4388
05:16:34,945 --> 05:16:38,237
because it reflects the 
personality. And I've been 

4389
05:16:38,237 --> 05:16:40,237
fascinated in thinking how do 
we balance these kind of 

4390
05:16:40,237 --> 05:16:42,818
systems together today? 
And so, yeah, a little bit 

4391
05:16:42,818 --> 05:16:46,425
about me, I'm Ivan, I make 
websites, animations, comics, 

4392
05:16:46,425 --> 05:16:48,425
but I'm

4393
05:16:49,630 --> 05:16:51,630
fascinated in this whole world 
of how do we make weird things 

4394
05:16:51,630 --> 05:16:53,630
on the internet ? And how do we
communicate and create tools

4395
05:16:53,932 --> 05:16:57,517
and infrastructure to do so? 
If you've ever taken a history 

4396
05:16:57,517 --> 05:16:59,517
of graphic design or anyone

4397
05:17:00,923 --> 05:17:02,923
's talked to you about type 
design, there's a very a famous

4398
05:17:04,127 --> 05:17:06,127
book in the mid 15th Century 
called the

4399
05:17:09,132 --> 05:17:11,132
Gutenberg bible that everyone 
likes to look and pontificate 

4400
05:17:11,132 --> 05:17:13,132
upon. Look at the scripture, 
think about the black 

4401
05:17:13,133 --> 05:17:16,130
lettering. I'm here to tell you
that, you should completely get

4402
05:17:16,130 --> 05:17:18,129
rid of

4403
05:17:19,340 --> 05:17:22,941
the Gutenberg bible, and in the
famous book Patricia Lockwood's

4404
05:17:22,942 --> 05:17:26,529
nobody's talking about Chinese 
writing system. The history of 

4405
05:17:26,529 --> 05:17:28,528
printing ascends back into 11th

4406
05:17:29,928 --> 05:17:31,928
century China with this worker,
commoner

4407
05:17:33,534 --> 05:17:36,624
named Bichon Hu who created one
of the first examples of print 

4408
05:17:36,624 --> 05:17:38,623
making . 

4409
05:17:40,017 --> 05:17:42,017
So in Chinese history, there 
are four notable kind of

4410
05:17:43,423 --> 05:17:45,423
inventions and print making is 
one of them made in the 11th 

4411
05:17:45,423 --> 05:17:47,423
century. This is an old bank 
statement.

4412
05:17:49,823 --> 05:17:52,914
Made at the time using one 
immovable type . And one of the

4413
05:17:52,914 --> 05:17:56,008
things interesting about this, 
if you look at kind of the 

4414
05:17:56,008 --> 05:17:58,008
entirety of the Chinese history
and sort

4415
05:17:59,100 --> 05:18:02,807
of Chinese writing system, it 
compared d, is pictograph

4416
05:18:05,113 --> 05:18:07,113
ictal,.

4417
05:18:08,408 --> 05:18:11,419
But here you can see the top 
that all of these sort of 

4418
05:18:11,419 --> 05:18:13,419
representations started as the 
original image. 

4419
05:18:15,209 --> 05:18:17,209
You can kind of see on the 
left-hand side, there's this 

4420
05:18:17,209 --> 05:18:19,209
progression of what a horse 
looks like starts very much the

4421
05:18:19,209 --> 05:18:21,396
image of the horse and we get 
down to the simplified script, 

4422
05:18:21,396 --> 05:18:23,396
that's what's being used today.

4423
05:18:25,375 --> 05:18:27,375
What's super fascinating about 
this, as well, is that

4424
05:18:28,978 --> 05:18:32,186
the -- when you look at it, the
current standard for Chinese 

4425
05:18:32,186 --> 05:18:34,186
language in China 2300

4426
05:18:34,686 --> 05:18:36,686
is used in 5% of websites.

4427
05:18:38,377 --> 05:18:40,377
But during the time when this 
was happening, the 

4428
05:18:40,377 --> 05:18:42,377
simplification, one of the 
things about the Chinese 

4429
05:18:42,377 --> 05:18:44,377
languages, there's an old 
traditional script, which

4430
05:18:44,567 --> 05:18:47,660
you see is like the standard 
script versus the simplified 

4431
05:18:47,660 --> 05:18:49,660
and that happened during the 
1950s where the CCP and

4432
05:18:52,268 --> 05:18:54,268
Communist Party wanted to 
improve the literacy rates of 

4433
05:18:54,268 --> 05:18:56,268
the Chinese people. 
The literacy rates were super 

4434
05:18:56,268 --> 05:18:58,268
abysmal.

4435
05:18:58,961 --> 05:19:00,961
I think more than 90% of people
at the time were unable to read

4436
05:19:00,961 --> 05:19:02,961
. It's really complicated.

4437
05:19:04,068 --> 05:19:07,159
If you've ever tried to learn 
east Asian 

4438
05:19:07,159 --> 05:19:09,159
language/character-based 
language, there's so many 

4439
05:19:09,159 --> 05:19:11,955
things to learn. How do we make
this easier? How do we 

4440
05:19:11,955 --> 05:19:13,955
incorporate this into a 
modernized world? How do we 

4441
05:19:13,955 --> 05:19:18,053
think about this? 
And so, coming here, this is an

4442
05:19:18,053 --> 05:19:21,145
example of what an immovable 
type kind of emphasizing if 

4443
05:19:21,145 --> 05:19:23,145
you've ever worked with print 
making or letter

4444
05:19:24,240 --> 05:19:27,332
press, you would know that you 
have in Latin script, you have 

4445
05:19:27,332 --> 05:19:29,332
GLIFs

4446
05:19:30,738 --> 05:19:32,738
you have gl

4447
05:19:33,835 --> 05:19:37,515
yphs, you have to have all of 
the individual characters. 

4448
05:19:37,515 --> 05:19:39,515
This is an example of how much 
stuff you would need which is 

4449
05:19:39,515 --> 05:19:42,513
really terrifying. Even in the 
modernization of it, it's

4450
05:19:43,909 --> 05:19:47,204
like, what would this even look
like? So this was just like a 

4451
05:19:47,204 --> 05:19:49,204
speculative sketch of a 
typewriter.

4452
05:19:50,914 --> 05:19:52,914
And so, it's like, you have all
of these characters mapped out 

4453
05:19:52,914 --> 05:19:56,806
on to it. 
The average Chinese dictionary 

4454
05:19:56,806 --> 05:19:58,806
has 60,000 to 80,000 words.

4455
05:20:01,394 --> 05:20:03,394
A body font for a Chinese font 
would require

4456
05:20:04,596 --> 05:20:06,596
you to have about 8,000 words, 
but that doesn't take into

4457
05:20:08,604 --> 05:20:11,699
case differences in simplified 
and traditional. There's a lot 

4458
05:20:11,699 --> 05:20:13,699
you have to deal with and a lot
of history associated with 

4459
05:20:13,699 --> 05:20:15,699
this. 
There's also a lot of political

4460
05:20:15,699 --> 05:20:17,699
structures,

4461
05:20:18,368 --> 05:20:21,458
one thing, specifically, is 
that in this example, the 

4462
05:20:21,458 --> 05:20:23,458
Chinese language is comprised 
of individual radicals.

4463
05:20:25,769 --> 05:20:27,769
So radicals and also characters
composed of traditional and 

4464
05:20:27,769 --> 05:20:29,769
simplified.

4465
05:20:29,769 --> 05:20:32,183
And so, here, this radical 
means speech.

4466
05:20:35,375 --> 05:20:37,375
So one of the things in the 
basis for the Chinese language,

4467
05:20:37,375 --> 05:20:39,375
it's composed of

4468
05:20:39,375 --> 05:20:41,375
the various radicals that add 
up to sort of give meaning to 

4469
05:20:41,375 --> 05:20:43,375
the character. And you can kind
of see all of the characters 

4470
05:20:43,375 --> 05:20:45,868
above have this speech rad KAG 
and they all have words that 

4471
05:20:45,868 --> 05:20:47,868
are -- meanings that are 
related

4472
05:20:48,959 --> 05:20:50,959
to speech creation, word 
creation, or sort of like 

4473
05:20:50,959 --> 05:20:52,959
communication. 

4474
05:20:53,357 --> 05:20:56,446
This is not like ubiquitously 
true across the language, but 

4475
05:20:56,446 --> 05:20:58,446
it is one thing really 
interesting to consider when

4476
05:20:59,554 --> 05:21:02,655
you think about comprising and 
creating the Chinese language 

4477
05:21:02,655 --> 05:21:04,655
as a whole especially from a 
type design perspective where 

4478
05:21:04,655 --> 05:21:06,655
you want to sort of 
componentize all of these 

4479
05:21:06,655 --> 05:21:08,655
characters. But one thing 
you'll also notice in this kind

4480
05:21:08,655 --> 05:21:11,247
of creation is that you can't 
-- you have to make different 

4481
05:21:11,247 --> 05:21:13,247
components for each specific 
one.

4482
05:21:15,046 --> 05:21:17,046
For example, even in the 
character on the right for 

4483
05:21:17,046 --> 05:21:19,046
talking fast,

4484
05:21:19,046 --> 05:21:21,469
ha, there's two of these sort 
of smaller radicals on the 

4485
05:21:21,469 --> 05:21:23,469
bottom and one on the top.

4486
05:21:23,969 --> 05:21:25,969
And within the components have 
to make different 

4487
05:21:25,969 --> 05:21:27,969
subcomponents. And so, I think 
this is a really interesting 

4488
05:21:27,969 --> 05:21:30,367
and theoretical approach when 
you consider to like how you 

4489
05:21:30,367 --> 05:21:32,367
make UI abstractions or the 
ways components exist in the 

4490
05:21:32,367 --> 05:21:34,367
UI. 

4491
05:21:35,844 --> 05:21:37,844
Is there a way this can exist 
for font software and making it

4492
05:21:37,844 --> 05:21:39,844
easier for Chinese ?

4493
05:21:41,237 --> 05:21:43,237
This is aS Ais an example of 
the traditional versus

4494
05:21:44,051 --> 05:21:47,341
simplified dichotomy looks to. 
One of the main things to 

4495
05:21:47,341 --> 05:21:49,341
consider in traditional versus 
simplified,

4496
05:21:50,430 --> 05:21:52,430
there's political ramifications
around two where traditional is

4497
05:21:54,041 --> 05:21:57,444
more present in places like 
Taiwan and Hong Kong and other 

4498
05:21:57,444 --> 05:21:59,444
locations while simplified is

4499
05:21:59,444 --> 05:22:01,834
in the mainland. That's for 
another conversation, but 

4500
05:22:01,834 --> 05:22:03,834
something to keep in mind if 
you ever have to do 

4501
05:22:03,834 --> 05:22:05,834
localization . 
Just to dig into what 

4502
05:22:05,834 --> 05:22:07,834
specifically where you're 
thinking about creating those 

4503
05:22:07,834 --> 05:22:09,834
languages for.

4504
05:22:11,426 --> 05:22:13,426
And so, now a little bit into 
classifications of Chinese 

4505
05:22:13,426 --> 05:22:16,011
writing systems. So the way 
that we have type systems kind 

4506
05:22:16,011 --> 05:22:18,011
of as

4507
05:22:20,018 --> 05:22:22,018
like san

4508
05:22:23,424 --> 05:22:26,520
serif and italicized and all of
that stuff, Chinese also has 

4509
05:22:26,520 --> 05:22:28,520
this in the font,

4510
05:22:29,612 --> 05:22:32,820
as well, this is called sunti, 
which is based off historical 

4511
05:22:32,820 --> 05:22:34,820
precedence in

4512
05:22:35,912 --> 05:22:38,226
the Song dynasty after the name
sonti.

4513
05:22:41,418 --> 05:22:43,418
It alludes to this more call

4514
05:22:44,226 --> 05:22:48,330
calligraphy nature. There are 
large flat stones, flourish at 

4515
05:22:48,330 --> 05:22:50,529
the end that is indicative of 
old style. 

4516
05:22:53,723 --> 05:22:55,723
This is what we would consider 
kind of a serif in the Chinese 

4517
05:22:55,723 --> 05:22:58,021
world. Next up, we have this 
thing called hati which

4518
05:23:01,326 --> 05:23:03,326
translates to black lettering 
or black body, and so,

4519
05:23:05,334 --> 05:23:07,334
this more represents kind of 
the

4520
05:23:08,433 --> 05:23:10,433
san serif world and this rose 
to prominence, mainly in the 

4521
05:23:10,433 --> 05:23:12,433
late 2000s as a result of 
increased digitalization where 

4522
05:23:12,433 --> 05:23:14,433
it was like, how

4523
05:23:14,731 --> 05:23:16,731
do we make these characters 
like easier to read online? 

4524
05:23:18,836 --> 05:23:22,743
We also have this thing called 
k iti, less engrained in

4525
05:23:25,847 --> 05:23:27,945
older historical periods, be 
but some of the same 

4526
05:23:27,945 --> 05:23:32,139
flourishes. And the fourth one,
a mix of this kind of old

4527
05:23:34,447 --> 05:23:37,750
songti. You can see here as the
one in the past, we have these 

4528
05:23:37,750 --> 05:23:39,750
little flourishes

4529
05:23:40,245 --> 05:23:42,245
and like more sort of softer 
notes.

4530
05:23:43,538 --> 05:23:47,146
And so, this kind of gives more
of a different writing style/ I

4531
05:23:47,146 --> 05:23:49,146
think in terms of the bamboo 
pendant you would potentially 

4532
05:23:49,146 --> 05:23:51,743
be using. 
And one of these things, also, 

4533
05:23:51,743 --> 05:23:53,743
is kind of

4534
05:23:55,354 --> 05:23:58,248
a classification, which is 
translates to kind of artistic 

4535
05:23:58,248 --> 05:24:01,537
display or artistic font. And 
typically, it describes this 

4536
05:24:01,537 --> 05:24:03,537
world of display fonts

4537
05:24:05,545 --> 05:24:07,545
, and like display lettering 
that's super fun, very bouncy, 

4538
05:24:07,545 --> 05:24:09,545
sort of like hard to define.

4539
05:24:10,847 --> 05:24:12,847
And I think I'm personally like
really interested in

4540
05:24:13,940 --> 05:24:15,940
this because it's like all of 
those things can be done really

4541
05:24:15,940 --> 05:24:17,940
well, but where are the things 
with a lot of personality and 

4542
05:24:17,940 --> 05:24:20,936
depth to them? 
And so, how do you use this?

4543
05:24:24,327 --> 05:24:26,433
Default set for English 
language contains 230 gyphs.

4544
05:24:29,623 --> 05:24:31,623
In Chinese, you have to make a 
lot of gyphs.

4545
05:24:33,718 --> 05:24:37,125
What happens with this, the 
size of your font file becomes 

4546
05:24:37,125 --> 05:24:39,125
really, really large and 
becomes really kind of almost

4547
05:24:39,125 --> 05:24:42,518
terrible to use. 
And the fact that in China, 

4548
05:24:42,518 --> 05:24:44,518
there's different character 
encoding

4549
05:24:44,518 --> 05:24:47,705
methods that are primarily 
used, as well. But luckily, 

4550
05:24:47,705 --> 05:24:49,705
thanks to the

4551
05:24:50,810 --> 05:24:52,810
unicode consortium, you can 
ignore that and use

4552
05:24:53,905 --> 05:24:57,000
the unicode UTF-8, which will 
always work for you given the 

4553
05:24:57,000 --> 05:24:59,000
sort of

4554
05:25:00,096 --> 05:25:02,096
as long as your font file is 
dwell defined within the font 

4555
05:25:02,096 --> 05:25:04,096
file specifications. P 

4556
05:25:06,101 --> 05:25:08,101
And you can always use that, 
UTF primarily supports all of 

4557
05:25:08,101 --> 05:25:11,095
the Chinese characters that 
exist out in the world. But 

4558
05:25:11,095 --> 05:25:13,095
luckily, when you use this, you
can actually just define the 

4559
05:25:13,095 --> 05:25:15,206
font family inside your CSS 
like this.

4560
05:25:18,403 --> 05:25:20,815
One thing to consider, you want
to put the Romanization and the

4561
05:25:20,815 --> 05:25:22,815
Chinese characters' names.

4562
05:25:23,518 --> 05:25:26,824
Just in case you don't know 
which one it's going to map to.

4563
05:25:26,824 --> 05:25:28,824
You want to put it as a 
fallback and also always define

4564
05:25:28,824 --> 05:25:32,833
your Latin language CSS font 
family first. 

4565
05:25:32,833 --> 05:25:34,833
There's some interesting stuff 
being done in the

4566
05:25:34,833 --> 05:25:37,939
Taiwanese world. This is a site
which translates to, there 

4567
05:25:37,939 --> 05:25:40,748
exists a font library. We have 
a font library, which I think 

4568
05:25:40,748 --> 05:25:42,748
is really funny.

4569
05:25:44,050 --> 05:25:47,145
And they have this kind of 
experimental API that allows 

4570
05:25:47,145 --> 05:25:49,145
you to fetch for a web P file 
that provides

4571
05:25:50,246 --> 05:25:52,246
all of these gy

4572
05:25:55,455 --> 05:25:57,455
lyphs for you and checks which 
are needed and will only

4573
05:25:58,557 --> 05:26:01,766
send you the corresponding 
glyphs, thus decreasing the 

4574
05:26:01,766 --> 05:26:03,766
size of it, as well. 

4575
05:26:06,569 --> 05:26:08,569
This is sort of a reference for
if you ever want free fonts, 

4576
05:26:08,569 --> 05:26:10,569
free Chinese fonts, because 
they're really hard to get to 

4577
05:26:10,569 --> 05:26:12,867
and really hard to find and 
make, this is a great GitHub

4578
05:26:15,380 --> 05:26:17,380
for it call Words Hub free 
font. 

4579
05:26:19,786 --> 05:26:22,889
And one of the things I've also
noticed, when you look at these

4580
05:26:22,889 --> 05:26:24,889
fonts, all of them in the 
beginning have the denotation 

4581
05:26:24,889 --> 05:26:27,301
of what foundry made them. This
is Fongjun, kind of like

4582
05:26:30,303 --> 05:26:32,303
founder is the name of it.

4583
05:26:33,903 --> 05:26:35,903
These are foundries of the 
various different types of 

4584
05:26:35,903 --> 05:26:38,401
files. There's the san serifs

4585
05:26:41,911 --> 05:26:43,911
and the calligraphy

4586
05:26:45,116 --> 05:26:47,116
. You can use this writing mode
that allows

4587
05:26:48,925 --> 05:26:50,925
you to write right to left,

4588
05:26:53,528 --> 05:26:55,528
. You also have this great 
thing called font variant East 

4589
05:26:55,528 --> 05:26:58,133
Asian. Which is specifically

4590
05:27:00,038 --> 05:27:02,038
for East Asian languages and 
scripts. You can move between 

4591
05:27:02,038 --> 05:27:04,038
normal and traditional. 

4592
05:27:05,044 --> 05:27:07,044
And then, one of the other 
things to obviously mention as 

4593
05:27:07,044 --> 05:27:09,044
a side note, is that no sans, 
which is a project by Google

4594
05:27:11,351 --> 05:27:13,351
and Adobe exist to kind of

4595
05:27:13,455 --> 05:27:16,951
provide language scripts across
the world. And so how do we 

4596
05:27:16,951 --> 05:27:18,951
feel about, we feel

4597
05:27:20,051 --> 05:27:22,051
that it BLOJ belongs in the 
trash and look for other 

4598
05:27:22,051 --> 05:27:24,051
things.

4599
05:27:24,445 --> 05:27:26,445
Really quickly, just some 
examples of kind of like fonts 

4600
05:27:26,445 --> 05:27:28,445
and use of what can you 
actually do this? Or how do you

4601
05:27:28,445 --> 05:27:33,050
pair it with Latin scripts? 
This is a comparison of what 

4602
05:27:33,050 --> 05:27:37,965
hati and songti look together. 
There was a project doing the 

4603
05:27:37,965 --> 05:27:41,063
Chinese rebranding of the "New 
York Times" and he uses this 

4604
05:27:41,063 --> 05:27:43,063
beautiful black letter kind of 
alluding to the same

4605
05:27:44,268 --> 05:27:47,280
"New York Times" motif and uses
the same stem/notion for this, 

4606
05:27:47,280 --> 05:27:49,280
as well. 

4607
05:27:50,880 --> 05:27:52,880
One of the funniest things if 
you've been following along in 

4608
05:27:52,880 --> 05:27:54,880
the three body problem 
discourse, is the type

4609
05:27:58,988 --> 05:28:02,285
serif used in the banner for 
the communist party. Everyone 

4610
05:28:02,285 --> 05:28:04,285
in China was pissed because

4611
05:28:04,285 --> 05:28:07,394
it needed to be a heavier 
weight. And you can see in the 

4612
05:28:07,394 --> 05:28:09,394
bottom corner what it should 
look like

4613
05:28:10,298 --> 05:28:12,298
. And you can also argue about 
the issues in the three body 

4614
05:28:12,298 --> 05:28:14,298
problem. 

4615
05:28:14,298 --> 05:28:17,500
Here's a really great example 
from the Taiwan design expo. I 

4616
05:28:17,500 --> 05:28:19,500
love the sort of 
constrained/put together

4617
05:28:20,603 --> 05:28:22,603
use of the Latin type that has 
these weird

4618
05:28:24,606 --> 05:28:26,606
end traps/contrast together 
with the more traditional 

4619
05:28:26,606 --> 05:28:28,606
notions of the characters. 

4620
05:28:29,300 --> 05:28:32,492
Here's a piece, who did the 
Chinese brand identity

4621
05:28:35,802 --> 05:28:37,805
for Alice in Wonderland, and 
you can see them piecing 

4622
05:28:37,805 --> 05:28:39,805
together with the original 
characters.

4623
05:28:41,102 --> 05:28:43,102
Here's another poster by a 
graphic

4624
05:28:44,201 --> 05:28:46,201
designer who takes the original
character and uses the lines 

4625
05:28:46,201 --> 05:28:48,201
and glyphs as individual 
shapes.

4626
05:28:49,313 --> 05:28:53,012
Just a couple more examples. 
One thing I wanted to mention 

4627
05:28:53,012 --> 05:28:56,109
in the sort of vein of fun 
Indie programming, you can make

4628
05:28:56,109 --> 05:28:58,109
your own Chinese esoteric 
language. 

4629
05:29:01,313 --> 05:29:03,313
This is written in the script 
of sort of old Chinese 

4630
05:29:03,313 --> 05:29:05,313
languages and programs and 
compiles to both JavaScript, 

4631
05:29:05,313 --> 05:29:08,316
Ruby . You can write programs 
in Chinese if you wanted to.

4632
05:29:10,115 --> 05:29:12,115
And the great about it.

4633
05:29:13,413 --> 05:29:15,413
Since it's defined on the grid 
structure, you can always -- 

4634
05:29:15,413 --> 05:29:17,614
they're all monospace by 
default. So that whole problem 

4635
05:29:17,614 --> 05:29:19,614
is solved for you. 

4636
05:29:22,811 --> 05:29:24,811
Lastly, I wanted to sort of end
with this talk

4637
05:29:25,902 --> 05:29:27,902
. This is a characters that 
means to add oil.

4638
05:29:30,611 --> 05:29:32,611
But encourage everyone sort of 
to, you know, if there's

4639
05:29:33,812 --> 05:29:35,812
any interest, dig into these 
things, look at Chinese 

4640
05:29:35,812 --> 05:29:37,812
characters, think about 
different scripts in the world 

4641
05:29:37,812 --> 05:29:39,812
and how you can use them to 
benefit your

4642
05:29:39,812 --> 05:29:41,812
own designs and your own sites.
So thank you.

4643
05:29:45,526 --> 05:29:47,526
â‰« MIKE: That was really cool.

4644
05:29:50,319 --> 05:29:52,319
Just a whole world you brought 
us into.

4645
05:29:56,110 --> 05:29:58,110
Yeah, it's fascinating thinking
about that

4646
05:29:59,208 --> 05:30:02,411
difference between the number 
of characters and Latin versus 

4647
05:30:02,411 --> 05:30:04,411
Chinese

4648
05:30:05,516 --> 05:30:07,516
and the

4649
05:30:09,927 --> 05:30:13,221
necessity to strip it out of 
the font sizes. It really is 

4650
05:30:13,221 --> 05:30:15,221
like a performance difference, 
pretty major performance 

4651
05:30:15,221 --> 05:30:17,919
difference that you need the 
extra level of optimization on.

4652
05:30:19,915 --> 05:30:21,920
What sort of tooling do you use
to do that? 

4653
05:30:25,218 --> 05:30:27,218
â‰« IVAN: Yeah, so there's a lot 
of kind of like one things I 

4654
05:30:27,218 --> 05:30:29,218
mentioned, there's some 
experimental stuff.

4655
05:30:31,219 --> 05:30:33,219
There's two font foundries, one
of them called just font, which

4656
05:30:33,219 --> 05:30:37,124
is based in Taiwan. And the 
other one is also based in 

4657
05:30:37,124 --> 05:30:39,124
Taiwan.

4658
05:30:40,422 --> 05:30:42,924
You'll find the interesting 
type foundries are based not in

4659
05:30:42,924 --> 05:30:46,224
mainland China because of 
various political reasons. 

4660
05:30:46,224 --> 05:30:48,224
But they're providing like 
experimental APIs that allow 

4661
05:30:48,224 --> 05:30:50,224
you to do that . But honestly, 
if you're doing it on kind of 

4662
05:30:50,224 --> 05:30:52,629
like a one -off site or 
project, you can just download

4663
05:30:55,738 --> 05:30:58,347
an OTF or raw file and use it 
regularly as a font file. 

4664
05:30:59,149 --> 05:31:01,361
â‰« MIKE: Got it. Ivan, thanks 
again for joining. That was 

4665
05:31:01,361 --> 05:31:03,361
fantastic. 

4666
05:31:03,366 --> 05:31:05,370
â‰« IVAN: Thank you so much. 

4667
05:31:08,576 --> 05:31:10,576
â‰« MIKE: We're going to roll 
into our final speaker for 11ty

4668
05:31:10,576 --> 05:31:12,789
Conf. Lucky last and lucky 
number 11, too.

4669
05:31:16,394 --> 05:31:18,394
We've got Sara Joy joining us.

4670
05:31:20,703 --> 05:31:22,703
Sara's been online since 1998, 
making

4671
05:31:23,608 --> 05:31:26,911
her personal websites since 
1999. In 2021, Sara switched 

4672
05:31:26,911 --> 05:31:28,911
her career from

4673
05:31:28,911 --> 05:31:32,417
electronic engineering to web 
development. She loves the web 

4674
05:31:32,417 --> 05:31:34,417
platform and wants

4675
05:31:34,628 --> 05:31:38,234
it to be accessible to 
everyone. 

4676
05:31:38,234 --> 05:31:40,234
Today, she's going to be 
talking about light mode versus

4677
05:31:40,234 --> 05:31:42,234
dark mode.

4678
05:31:49,368 --> 05:31:52,769
[ Applause ] 
Welcome. 

4679
05:31:52,769 --> 05:31:54,769
â‰« SARA: Hi, I'm really enjoying
that.

4680
05:31:58,580 --> 05:32:00,580
â‰« MIKE: Yeah, let's try to 
simulate some real life 

4681
05:32:00,580 --> 05:32:03,185
audience. Sara, I've BP been 
doing

4682
05:32:05,187 --> 05:32:07,187
a lot of light mode/dark mode 
recently. I'm interested to 

4683
05:32:07,187 --> 05:32:09,187
hear this talk. 

4684
05:32:09,187 --> 05:32:11,194
â‰« SARA: You might already know 
it. But yeah, I will roll 

4685
05:32:11,194 --> 05:32:13,194
straight in.

4686
05:32:16,499 --> 05:32:18,499
Light mode versus dark mode, I 
have changed the title to

4687
05:32:19,111 --> 05:32:23,218
Why Not Both? Or why building 
both dark and light schemes 

4688
05:32:23,218 --> 05:32:28,132
together is easy, actually. 
I hope I'm not overselling 

4689
05:32:28,132 --> 05:32:32,833
that. Hi, I'm Sara. I have am 
both an old hand,

4690
05:32:37,139 --> 05:32:39,139
like Mike said, I've been 
building websites as a teenager

4691
05:32:39,746 --> 05:32:41,746
since 1999, only my own stuff. 
It was only ever really a hobby

4692
05:32:41,746 --> 05:32:43,746
thing.

4693
05:32:44,152 --> 05:32:47,552
I had a long hiatus. And now 
I'm a newbie, again, I

4694
05:32:50,557 --> 05:32:52,557
switched my career from doing 
general electronic and other 

4695
05:32:52,557 --> 05:32:54,557
stuff in small companies and a 
couple of big companies. 

4696
05:32:56,973 --> 05:32:58,973
And I jumped into web 
development,

4697
05:32:58,973 --> 05:33:00,973
not last year, two years ago 
now. I still feel like a 

4698
05:33:00,973 --> 05:33:02,973
newbie. I guess I'm not, but I 
feel like one. 

4699
05:33:06,109 --> 05:33:08,109
Just a little warning that 
there's already been some 

4700
05:33:08,109 --> 05:33:10,109
movement, there'll be some more
movement, a tiny bit of 

4701
05:33:10,109 --> 05:33:12,109
animation and abrupt changes 
between dark and light modes in

4702
05:33:12,109 --> 05:33:14,109
this presentation. Because it's
difficult not to.

4703
05:33:14,134 --> 05:33:17,545
If you suffer from migraines, 
epilepsy, strong

4704
05:33:20,849 --> 05:33:22,849
astigmiatism,

4705
05:33:24,257 --> 05:33:26,257
I'm really sorry, but I hope 
with this information I'm about

4706
05:33:26,257 --> 05:33:28,257
to present to you, browsing the
web will get more comfortable 

4707
05:33:28,257 --> 05:33:31,173
for you and everyone else. 
So with that aside, I'll try 

4708
05:33:31,173 --> 05:33:33,173
and warn whenever I'm about to 
flash the screen from dark to 

4709
05:33:33,173 --> 05:33:37,097
light. Let's get started. Dark 
mode versus light mode.

4710
05:33:39,701 --> 05:33:43,003
And we all love a good 
polarizing argument. And what 

4711
05:33:43,003 --> 05:33:46,115
could be more polarizing in 
dark versus light? But there 

4712
05:33:46,115 --> 05:33:48,115
are physical reasons to prefer 
one over the other. 

4713
05:33:49,920 --> 05:33:51,920
And just allowed to prefer dark
or light mode. That's OK.

4714
05:33:54,028 --> 05:33:56,028
You don't have to have a 
logical reason for it because 

4715
05:33:56,028 --> 05:33:58,028
your eye is your choice. 

4716
05:33:58,841 --> 05:34:03,343
So that said, why dark mode? 
Your pupils constrict when they

4717
05:34:03,343 --> 05:34:06,372
come across a bright page or 
bright anything. I think you 

4718
05:34:06,372 --> 05:34:08,372
can quite often notice.

4719
05:34:09,675 --> 05:34:11,778
You feel the muscles pulling 
your pupil, pulling your iris 

4720
05:34:11,778 --> 05:34:13,778
inwards to make your pupils 
smaller.

4721
05:34:15,075 --> 05:34:18,177
And if you're in a dark 
surroundings, like I am right 

4722
05:34:18,177 --> 05:34:23,288
now, yeah, it's quarter past 
10:00 here. If you suddenly 

4723
05:34:23,288 --> 05:34:25,288
jump into a bright website, 
that's uncomfortable. 

4724
05:34:28,397 --> 05:34:30,506
And then, other people have 
floaters that appear or block 

4725
05:34:30,506 --> 05:34:32,506
their vision.

4726
05:34:33,807 --> 05:34:37,014
A lot of you may, I mean, I'm 
40 now, so sometimes, when I'm 

4727
05:34:37,014 --> 05:34:39,014
looking up at a bright sky, I 
see these things.

4728
05:34:41,616 --> 05:34:43,616
The second example on the right
is a bit more

4729
05:34:44,823 --> 05:34:46,823
what I see, sort of translucent
something or other drifting 

4730
05:34:46,823 --> 05:34:48,823
across.

4731
05:34:49,631 --> 05:34:52,735
That some people with really 
severe floaters might struggle 

4732
05:34:52,735 --> 05:34:54,735
to read, text on a light 
background

4733
05:34:55,836 --> 05:34:57,836
because the light background 
just sort of is distorted 

4734
05:34:57,836 --> 05:34:59,836
through the floaters. 

4735
05:35:00,158 --> 05:35:02,158
Why light mode?

4736
05:35:04,057 --> 05:35:07,158
Pupils constrict when coming 
across a bright page . But that

4737
05:35:07,158 --> 05:35:09,158
can be a good thing, actually, 
because it's easier to

4738
05:35:09,158 --> 05:35:11,158
focus when your pupil is 
smaller.

4739
05:35:13,876 --> 05:35:16,978
Like with a camera (inaudible) 
you might close your aperture 

4740
05:35:16,978 --> 05:35:18,978
in order to get a whole 
landscape in focus.

4741
05:35:21,393 --> 05:35:23,393
Whereas if the aperture is 
large, you have to very 

4742
05:35:23,393 --> 05:35:27,204
carefully focus on separate 
items. You have your foreground

4743
05:35:27,204 --> 05:35:29,204
and background and they're 
different and you have to

4744
05:35:30,813 --> 05:35:32,813
focus and it's the same with 
your eyes, they have to work to

4745
05:35:34,021 --> 05:35:36,021
focus more when your pupil is 
large because everything's 

4746
05:35:36,021 --> 05:35:38,021
darker. 

4747
05:35:40,733 --> 05:35:42,733
And then, people have 
astigmiatism

4748
05:35:45,740 --> 05:35:47,740
STIG

4749
05:35:49,151 --> 05:35:51,452
stigmatism. Light text on dark 
backgrounds can become hard to 

4750
05:35:51,452 --> 05:35:53,452
read.

4751
05:35:54,757 --> 05:35:56,757
They might be clear like they 
are now, but with a little bit 

4752
05:35:56,757 --> 05:35:58,757
of extra fuzz and your brain 
and eyes work together to

4753
05:36:00,571 --> 05:36:02,571
try to sharpen out that fuzz to
try to focus better. 

4754
05:36:04,176 --> 05:36:06,176
But when you can't, get away 
from that.

4755
05:36:08,585 --> 05:36:10,792
When you can't get...  when you
start to get headaches.

4756
05:36:17,000 --> 05:36:19,000
Interestingly, I found a lot 
more examples about this and 

4757
05:36:19,000 --> 05:36:21,000
people struggling with dark 
mode, because clearly there's a

4758
05:36:21,000 --> 05:36:23,000
lot of people annoyed about 
websites only available in dark

4759
05:36:23,000 --> 05:36:26,709
mode. 
So there's really loads of 

4760
05:36:26,709 --> 05:36:28,709
examples people have made

4761
05:36:31,324 --> 05:36:33,324
of slightly fuzzed out or 
distorted text, light text on a

4762
05:36:33,324 --> 05:36:35,926
dark background. And even, I'm 
looking at these, and you know,

4763
05:36:35,926 --> 05:36:37,926
I'm trying to focus them.

4764
05:36:39,521 --> 05:36:42,130
I can feel my eyes and my brain
trying to focus these bits of 

4765
05:36:42,130 --> 05:36:44,130
text and I can't, of course. 

4766
05:36:45,538 --> 05:36:47,538
And if you're staring at this 
all the time, it's going to 

4767
05:36:47,538 --> 05:36:49,538
hurt.

4768
05:36:49,538 --> 05:36:52,146
And I love this one, I am the 
douche

4769
05:36:55,149 --> 05:36:57,149
bag that makes people read 
white text on a black 

4770
05:36:57,149 --> 05:36:59,149
background.

4771
05:36:59,149 --> 05:37:01,149
So that would be why you might 
prefer light mode. 

4772
05:37:01,149 --> 05:37:03,149
Why not both?

4773
05:37:04,702 --> 05:37:06,702
Both. Both. Both is good.

4774
05:37:11,224 --> 05:37:13,224
I'm sure everyone gets that 
reference. 

4775
05:37:13,224 --> 05:37:16,030
[ Laughter ]
Anyway. So in this talk scope, 

4776
05:37:16,030 --> 05:37:18,030
is just having

4777
05:37:19,126 --> 05:37:22,436
your site react to preferred 
color scheme.

4778
05:37:25,043 --> 05:37:27,043
So I'm not going to talk about 
manual toggling. It can be 

4779
05:37:27,043 --> 05:37:29,043
done. I will show you it.

4780
05:37:33,554 --> 05:37:36,656
Shortly because with a bit hof 
of JavaScript, it's easy and 

4781
05:37:36,656 --> 05:37:38,656
you can find advice on the 
internet including

4782
05:37:38,963 --> 05:37:42,690
me trying to give advice on it.
I've got a little toggle here. 

4783
05:37:42,690 --> 05:37:44,690
Be warned, it's going to go 
white.

4784
05:37:45,795 --> 05:37:47,795
And back, again.

4785
05:37:49,908 --> 05:37:51,908
I'm back to auto. So the 
toggling is absolutely 

4786
05:37:51,908 --> 05:37:53,908
possible.

4787
05:37:54,320 --> 05:37:58,123
But I'm not going to go into 
how to do that in this talk. 

4788
05:37:59,930 --> 05:38:02,234
And I must remember to click 
right. So this is what I get 

4789
05:38:02,234 --> 05:38:04,234
for rolling my own 
presentation.

4790
05:38:04,339 --> 05:38:06,339
So starting from scratch. If 
you have no styles, this is no 

4791
05:38:06,339 --> 05:38:08,339
problem.

4792
05:38:10,144 --> 05:38:12,144
However, if you have already 
really big

4793
05:38:13,352 --> 05:38:16,567
mature site or design system or
massive project , this may be 

4794
05:38:16,567 --> 05:38:18,567
tricky to bring into your 
projects.

4795
05:38:19,868 --> 05:38:23,271
If everything already has 
specific colors , branding, 

4796
05:38:23,271 --> 05:38:26,578
everything's set, it's going to
be hard to put this back in. 

4797
05:38:26,578 --> 05:38:28,578
It's possible. I'm sure it's 
possible.

4798
05:38:28,589 --> 05:38:30,589
But it's going to be difficult.

4799
05:38:33,407 --> 05:38:36,507
But I want you to keep this 
light mode/ dark mode bothness 

4800
05:38:36,507 --> 05:38:38,507
in mind next time you have -- 
you start a new project.

4801
05:38:41,919 --> 05:38:43,919
So we know this, we all have

4802
05:38:45,123 --> 05:38:48,225
seen default HTML themes, not 
that we look at it anymore 

4803
05:38:48,225 --> 05:38:50,225
because you probably set your 
CSS reset before you even look 

4804
05:38:50,225 --> 05:38:52,225
at the page. 

4805
05:38:54,722 --> 05:38:56,722
I often set everything to just 
san serif at least before I 

4806
05:38:56,722 --> 05:38:58,722
start anything.

4807
05:38:59,339 --> 05:39:01,339
It's standard HTML here. 
There's nothing unusual.

4808
05:39:05,154 --> 05:39:07,154
But you may not know that 
there's also default dark 

4809
05:39:07,154 --> 05:39:09,154
theme.

4810
05:39:13,163 --> 05:39:15,163
And everything's done for you, 
the buttons, the inputs, the 

4811
05:39:15,163 --> 05:39:17,163
link.

4812
05:39:19,782 --> 05:39:21,782
Link colors here have all been 
adjusted already to look better

4813
05:39:21,782 --> 05:39:23,782
in dark mode. You don't have to
do it. 

4814
05:39:23,782 --> 05:39:28,212
The browser's done it for you. 
How do we get to that? You 

4815
05:39:28,212 --> 05:39:30,212
don't even need CSS.

4816
05:39:35,325 --> 05:39:37,325
And Mayank did hint to this 
earlier that you can put a 

4817
05:39:37,325 --> 05:39:39,325
metatag in your HTML.

4818
05:39:39,835 --> 05:39:42,934
The meta  name is color-scheme.
And the content is light/dark. 

4819
05:39:44,964 --> 05:39:46,964
You can put dark/light.

4820
05:39:49,152 --> 05:39:52,248
It might make a difference if a
user's OS isn't broadcasting 

4821
05:39:52,248 --> 05:39:54,248
I'm in

4822
05:39:54,248 --> 05:39:56,248
light mode or I'm in dark mode.
I'm not sure many of them do 

4823
05:39:56,248 --> 05:39:58,248
that now.

4824
05:39:59,356 --> 05:40:01,567
I think almost all of them are 
in light mode or dark mode, 

4825
05:40:01,567 --> 05:40:03,567
there might be some that don't 
care.

4826
05:40:04,868 --> 05:40:07,076
If there's some that don't 
care, if you put dark/light, it

4827
05:40:07,076 --> 05:40:09,076
may be that your website shows 
in dark mode first. 

4828
05:40:09,486 --> 05:40:12,293
As a preference. I haven't been
able to test it.

4829
05:40:15,897 --> 05:40:17,897
You can also put it in your 
CSS.

4830
05:40:19,195 --> 05:40:22,699
So, under the root or HTML 
selector, you have color

4831
05:40:25,805 --> 05:40:27,805
-scheme, color light/dark.

4832
05:40:28,913 --> 05:40:33,318
This website can show up in 
light or dark, no problem. 

4833
05:40:33,318 --> 05:40:36,725
And then, the browser will 
follow the operating system's 

4834
05:40:36,725 --> 05:40:38,725
preference and show you your 
preferred version of this 

4835
05:40:38,725 --> 05:40:40,725
website. 

4836
05:40:45,026 --> 05:40:47,026
So just as an example, in 
CodePen, tech

4837
05:40:48,830 --> 05:40:50,830
nically, it has a separate 
place for the he, head.

4838
05:40:53,535 --> 05:40:55,535
You're not supposed to put the 
head here within the HTML, but 

4839
05:40:55,535 --> 05:40:57,535
you can do it and it seems to 
work. This is what I'm using as

4840
05:40:57,535 --> 05:40:59,535
a display.

4841
05:41:00,153 --> 05:41:02,153
And because my laptop, my 
Windows is

4842
05:41:03,961 --> 05:41:06,572
in dark mode because I prefer 
the dark mode, it's going to 

4843
05:41:06,572 --> 05:41:08,572
dark. 

4844
05:41:10,772 --> 05:41:12,772
I could just -- drop dark, go 
back to light.

4845
05:41:17,489 --> 05:41:19,489
In fact, I can put some sort of
gibberish

4846
05:41:20,691 --> 05:41:22,691
in there and it'll still be 
light because light remains the

4847
05:41:22,691 --> 05:41:24,691
default default. 

4848
05:41:27,901 --> 05:41:29,901
Or I can say all of this is 
going to be dark.

4849
05:41:33,412 --> 05:41:35,412
And just to prove this is the 
case, I'll pop open dev tools 

4850
05:41:35,412 --> 05:41:37,412
here.

4851
05:41:44,124 --> 05:41:46,331
We've got color scheme 
light/dark, prefers from dev 

4852
05:41:46,331 --> 05:41:48,331
tools. Oh, everything is light.

4853
05:41:51,734 --> 05:41:53,734
I'll put it back to automatic, 
which is what my laptop wants 

4854
05:41:53,734 --> 05:41:56,352
to be. For some reason, this 
gets home in a very

4855
05:41:59,659 --> 05:42:01,659
strange position, I suspect 
it's this head getting annoyed 

4856
05:42:01,659 --> 05:42:03,659
with real head, I'm not sure 
entirely what's going on there.

4857
05:42:03,659 --> 05:42:07,182
We also have system colors and 
the most reliable of these is 

4858
05:42:07,182 --> 05:42:09,182
canvas text.

4859
05:42:09,182 --> 05:42:12,286
And canvas. And they're kind of
what you expect them to be.

4860
05:42:14,483 --> 05:42:16,483
Don't confuse them with canvas,
the element canvas.

4861
05:42:18,590 --> 05:42:20,590
Con vas text is the color of 
the text. Canvas is the color 

4862
05:42:20,590 --> 05:42:22,590
of your background.

4863
05:42:24,998 --> 05:42:26,998
Here, you can see I've just 
done

4864
05:42:29,807 --> 05:42:31,807
a div with what you've expected
and I've reversed them. And 

4865
05:42:31,807 --> 05:42:33,807
just reversed in here. 

4866
05:42:35,013 --> 05:42:37,013
If I call this dark, it's dark.
I'll put it back to light.

4867
05:42:42,112 --> 05:42:44,112
Or I can do light/dark and 
it'll turn dark, again,

4868
05:42:44,112 --> 05:42:47,908
because my laptop is in dark 
mode. So you can apply color 

4869
05:42:47,908 --> 05:42:51,314
scheme to elements, but you do 
need to put the canvas text and

4870
05:42:51,314 --> 05:42:53,314
the canvas in there first.

4871
05:42:56,586 --> 05:42:58,586
If I just remove them

4872
05:42:59,682 --> 05:43:03,085
here, it doesn't quite work 
because your element is sort of

4873
05:43:03,085 --> 05:43:05,392
transparent by default.

4874
05:43:14,692 --> 05:43:17,790
You need to have given them a 
color before you can put a 

4875
05:43:17,790 --> 05:43:19,790
color on an element otherwise 
it's got nothing to work on.

4876
05:43:19,790 --> 05:43:21,790
I found that by trial and 
error.

4877
05:43:24,482 --> 05:43:28,087
There are other system colors 
and I have a role, because 

4878
05:43:28,087 --> 05:43:32,078
they're patchy and I wanted to 
tell you it's patchy and it's a

4879
05:43:32,078 --> 05:43:34,078
bit sad.

4880
05:43:35,373 --> 05:43:37,373
I can get rid of dev tools now,
too, apologies. 

4881
05:43:39,573 --> 05:43:42,671
Here, you'd expect that link 
text, which is being applied to

4882
05:43:42,671 --> 05:43:44,671
this one should look like the 
text of the actual link.

4883
05:43:47,578 --> 05:43:49,578
And visited text should look 
like the color of the text of 

4884
05:43:49,578 --> 05:43:51,578
an actual visited thing. And 
active text should look like, 

4885
05:43:51,578 --> 05:43:53,578
let's have a dash go to this 
link. 

4886
05:43:53,589 --> 05:43:56,593
It should look like that. 
Unfortunately, it does not.

4887
05:44:00,597 --> 05:44:02,597
This is Edge I'm using, so 
Chrome yum

4888
05:44:04,806 --> 05:44:08,197
Chromium. Who does do it well 
is Firefox

4889
05:44:10,798 --> 05:44:12,798
. Beautiful, link text looks 
like link text. 

4890
05:44:14,789 --> 05:44:17,098
(Audio cutting out) visited 
text.

4891
05:44:22,093 --> 05:44:24,093
So,

4892
05:44:24,093 --> 05:44:26,795
Firefox for that one. I believe
they're going to trickle 

4893
05:44:26,795 --> 05:44:28,795
through, but I have not seen 
any improvement in a couple of 

4894
05:44:28,795 --> 05:44:31,590
years. Maybe we can push on 
that. Contrast too high.

4895
05:44:35,386 --> 05:44:37,386
So you're there, you've got 
your con

4896
05:44:39,594 --> 05:44:41,594
canvas and your canvas text and
you're thinking like, great, 

4897
05:44:41,594 --> 05:44:43,594
but I don't just want to use 
those.

4898
05:44:43,903 --> 05:44:47,808
Maybe contrast is a bit too 
high. And like is written 

4899
05:44:47,808 --> 05:44:49,808
there, those implementing

4900
05:44:51,814 --> 05:44:53,814
WCAG for accessibility may find
it unlikely that contrast could

4901
05:44:53,814 --> 05:44:56,211
be too high. But for some, for 
example, migrainers, they do 

4902
05:44:56,211 --> 05:44:58,211
have trouble with this. 

4903
05:45:00,104 --> 05:45:03,200
It can kick off micro 
migraines, especially on 

4904
05:45:03,200 --> 05:45:06,296
websites where things are 
moving and scrolling if the 

4905
05:45:06,296 --> 05:45:08,296
contrast is too high, it can 
start to kick things off.

4906
05:45:08,696 --> 05:45:10,696
But there's also preferred 
contrast. 

4907
05:45:13,692 --> 05:45:15,692
This is a bit tricky because 
I'm not sure where you can set 

4908
05:45:15,692 --> 05:45:17,692
preferred contrast in your 
operating systems. But it's 

4909
05:45:17,692 --> 05:45:19,692
there.

4910
05:45:19,692 --> 05:45:22,590
And I'm fairly sure prefers 
color scheme came before all 

4911
05:45:22,590 --> 05:45:24,590
OSs allowed you to

4912
05:45:24,802 --> 05:45:26,802
toggle dark or light. 

4913
05:45:28,393 --> 05:45:31,598
So, hoping that prefers 
contrast starts allowing OSs to

4914
05:45:31,598 --> 05:45:33,598
allow you to toggle contrast.

4915
05:45:36,705 --> 05:45:38,705
The simplest way to bring 
contrast down across the board 

4916
05:45:38,705 --> 05:45:40,705
is filter contrast. 

4917
05:45:44,712 --> 05:45:47,808
So, for example, that's just an
extra thing I've added there . 

4918
05:45:47,808 --> 05:45:49,808
I've added a filter,

4919
05:45:49,808 --> 05:45:52,114
prefers less. And filtering the
whole thing by half, which is 

4920
05:45:52,114 --> 05:45:54,114
possibly a bit extreme.

4921
05:45:54,616 --> 05:45:56,616
But let's bring dev tools back 
in. 

4922
05:45:59,602 --> 05:46:02,809
And under rendering, under here
so with the -- I'm trying to 

4923
05:46:02,809 --> 05:46:04,809
remember how I opened this 
somewhere, you can

4924
05:46:06,016 --> 05:46:08,016
find this rendering

4925
05:46:09,228 --> 05:46:12,519
options. And there's all sorts 
of different options, including

4926
05:46:12,519 --> 05:46:14,519
prefers color scheme.

4927
05:46:14,519 --> 05:46:16,519
But here is prefers contrast. 

4928
05:46:20,702 --> 05:46:22,702
Nothing for custom, nothing for
more, but you can, you can 

4929
05:46:22,702 --> 05:46:24,702
totally do something different 
for prefers contrast more.

4930
05:46:24,811 --> 05:46:28,210
Or prefers contrast less. And 
then, my media query is kicking

4931
05:46:28,413 --> 05:46:31,712
in. I have done a lot of CSS 
nesting because it's fun, not 

4932
05:46:31,712 --> 05:46:33,712
just because it's best 
practice, yet.

4933
05:46:35,818 --> 05:46:37,818
I think it's great.

4934
05:46:39,116 --> 05:46:41,125
Let's bring down the contrast 
change a tic. 

4935
05:46:44,325 --> 05:46:47,419
And even for me, with normalish
eyesight apart from age-related

4936
05:46:47,419 --> 05:46:49,419
trouble,

4937
05:46:51,024 --> 05:46:53,024
it's already

4938
05:46:55,037 --> 05:46:57,336
for me, you might prefer lower 
contrast. But might not want to

4939
05:46:57,336 --> 05:46:59,336
filter all the time.

4940
05:46:59,441 --> 05:47:01,441
We can start using other 
colors, of course. I really 

4941
05:47:01,441 --> 05:47:03,441
like color mix.

4942
05:47:04,436 --> 05:47:08,042
Because we can use canvas text 
and canvas, we can use them as 

4943
05:47:08,042 --> 05:47:12,939
mixes with other colors. 
So they look good

4944
05:47:15,934 --> 05:47:17,934
both in dark mode and light 
mode while only having to 

4945
05:47:17,934 --> 05:47:21,428
declare them once. So, for 
example, here, if you

4946
05:47:24,424 --> 05:47:26,424
knock out the percentage, which
you can, it just goes to 50/50.

4947
05:47:31,422 --> 05:47:33,422
40 looks good here, so I'll 
stick 40 back in.

4948
05:47:36,929 --> 05:47:38,929
I'll switch it into light mode.

4949
05:47:43,435 --> 05:47:46,529
And the backgrounds also 
lighten up because they're 

4950
05:47:46,529 --> 05:47:48,529
mixed with canvas and the

4951
05:47:51,935 --> 05:47:53,935
text has darkened, which has 
flipped along with my color 

4952
05:47:53,935 --> 05:47:55,935
scheme . 

4953
05:48:01,443 --> 05:48:03,443
Another way to do it is having 
a bit of lower opacity.

4954
05:48:04,151 --> 05:48:07,752
So here, I've got magenta. It's
all red, zero green, all blue

4955
05:48:11,258 --> 05:48:13,258
plus O

4956
05:48:14,660 --> 05:48:16,660
opacity of 4, I'm going to flip
it, again . 

4957
05:48:16,660 --> 05:48:18,660
Flip.

4958
05:48:20,898 --> 05:48:22,898
So that's one way.

4959
05:48:27,406 --> 05:48:29,406
We can, as we used to, use 
prefers color scheme.

4960
05:48:30,101 --> 05:48:32,101
We're totally used to it, we 
can do it.

4961
05:48:34,996 --> 05:48:38,083
However, if you're flipping 
color scheme, just color scheme

4962
05:48:38,083 --> 05:48:40,083
light/dark with your JS like I 
am here, it doesn't change. 

4963
05:48:43,961 --> 05:48:47,966
Now, here I've set it so that 
when it's prefers color scheme 

4964
05:48:47,966 --> 05:48:52,743
light, top one should have a 
background of a Teal color. And

4965
05:48:52,743 --> 05:48:54,743
this bottom one should have a 
background of

4966
05:48:55,149 --> 05:48:57,825
a green with 25% opacity. 
And they do not.

4967
05:49:02,616 --> 05:49:04,616
Because prefers color scheme is
only asking the OS, it's

4968
05:49:06,029 --> 05:49:08,222
not flipping with color scheme.
Again, we'll go to dev tools.

4969
05:49:10,014 --> 05:49:12,811
Just to prove that it does 
work. 

4970
05:49:15,207 --> 05:49:17,207
So color scheme light coming 
on, again.

4971
05:49:21,910 --> 05:49:23,910
We're in a halfway house 
because I've got dark mode 

4972
05:49:23,910 --> 05:49:25,910
here. These all interact with 
each other, and it's so 

4973
05:49:25,910 --> 05:49:28,298
interesting. 
So, light and back to dark.

4974
05:49:35,894 --> 05:49:37,894
And light, again, the purpley

4975
05:49:38,503 --> 05:49:41,797
colors are going to green 
colors. And make it clear that 

4976
05:49:41,797 --> 05:49:43,797
it's automatic. Light, dark.

4977
05:49:43,797 --> 05:49:47,176
So it's

4978
05:49:50,167 --> 05:49:53,259
prefers color scheme and the 
color scheme property are a 

4979
05:49:53,259 --> 05:49:55,259
little bit away from each other
once you start to introduce 

4980
05:49:55,259 --> 05:49:57,259
toggling.

4981
05:49:59,769 --> 05:50:02,177
But -- what's coming is 
light/dark and it's not quite 

4982
05:50:02,177 --> 05:50:04,177
an all browsers.

4983
05:50:04,471 --> 05:50:07,763
It's coming in version 17. 5 of
Safari and there might be one 

4984
05:50:07,763 --> 05:50:09,763
or

4985
05:50:10,374 --> 05:50:12,374
two straggler browsers after 
that. But it's really nearly 

4986
05:50:12,374 --> 05:50:14,374
with us. 

4987
05:50:16,361 --> 05:50:18,361
And just to show the 
difference, here we have a 

4988
05:50:18,361 --> 05:50:22,470
whole media query. Here is 
nested within the first 

4989
05:50:22,470 --> 05:50:24,470
declaration.

4990
05:50:25,763 --> 05:50:27,763
So it's not too big, but still 
is a whole media query

4991
05:50:30,178 --> 05:50:32,178
where it's just saying, when 
it's

4992
05:50:33,381 --> 05:50:37,275
light, I want this color, when 
it's dark, I want this color. 

4993
05:50:37,275 --> 05:50:39,275
And the same here, when it's 
light, I want this color, when 

4994
05:50:39,275 --> 05:50:42,457
it's dark, I want this color. 
And that will work with the OS 

4995
05:50:42,457 --> 05:50:44,457
flipping to being

4996
05:50:46,066 --> 05:50:48,066
dark or light mode and also, 
just with it's going to go 

4997
05:50:48,066 --> 05:50:52,548
light now. With color scheme. 
And back to light.

4998
05:50:54,347 --> 05:50:56,940
And back to dark. Soer, this is
really satisfying for me.

4999
05:51:02,337 --> 05:51:04,337
But this is happily working on 
Microsoft

5000
05:51:05,742 --> 05:51:07,742
Edge and Chrome and I think 
Fire

5001
05:51:08,958 --> 05:51:12,451
fox and just Safari left to go.
It's so close. 

5002
05:51:20,059 --> 05:51:22,059
To summarize, once it lets me 
go to the next slide.

5003
05:51:23,352 --> 05:51:25,563
In summary, have a go at using 
color scheme light/dark or the 

5004
05:51:25,563 --> 05:51:27,563
metatag. Either way, it really 
doesn't matter.

5005
05:51:31,555 --> 05:51:33,555
If you use the metatag, it's 
easier to flip with JavaScript.

5006
05:51:33,555 --> 05:51:37,442
Try using color mix when you're
adding colors

5007
05:51:39,445 --> 05:51:41,445
. Mixing it with canvas or 
canvas text.

5008
05:51:43,750 --> 05:51:45,750
Have a go at supporting user 
contrast preferences.

5009
05:51:48,656 --> 05:51:52,259
And look forward to light/dark 
like I am. And then, just 

5010
05:51:52,259 --> 05:51:54,259
encourage you to experiment.

5011
05:51:55,558 --> 05:51:57,558
Because it's just changing 
these things

5012
05:51:59,168 --> 05:52:02,471
are quite easy things to 
change. You need to experiment 

5013
05:52:02,471 --> 05:52:04,471
to see what works with what and
how you can adjust things

5014
05:52:05,570 --> 05:52:07,570
and what looks good in dark and
light at the same time . 

5015
05:52:10,070 --> 05:52:12,070
I find it immensely fun to play
with.

5016
05:52:14,278 --> 05:52:16,381
So I'm glad to share it with 
you. And I hope you fine it fun

5017
05:52:16,381 --> 05:52:18,381
to play with.

5018
05:52:23,486 --> 05:52:26,792
The takeaway, is to offer 
choice. Just with the dark 

5019
05:52:26,792 --> 05:52:28,792
mode/light mode and the more 
contrast/

5020
05:52:29,887 --> 05:52:31,887
less contrast you have four 
different themes already

5021
05:52:33,492 --> 05:52:36,700
. And if you decide to do 
something for, well, that would

5022
05:52:36,700 --> 05:52:38,700
be normal contrast, I suppose, 
and less contrast,

5023
05:52:39,801 --> 05:52:42,111
if you decide to do something 
extra for more contrast, then 

5024
05:52:42,111 --> 05:52:44,111
you've got 6. Yeah.

5025
05:52:45,724 --> 05:52:47,926
I mean, and you've got 6 themes
all at once. 

5026
05:52:51,132 --> 05:52:53,132
On my home page, I added a 
border to everything

5027
05:52:54,236 --> 05:52:56,236
in canvas or canvas text 
depending on whether it's dark 

5028
05:52:56,236 --> 05:52:58,236
or light mode.

5029
05:52:59,460 --> 05:53:02,472
And it's brilliant. It shows 
everything extremely contrasty.

5030
05:53:02,472 --> 05:53:04,472
That's it.

5031
05:53:04,574 --> 05:53:07,985
I hope you have some fun 
playing with it. 

5032
05:53:07,985 --> 05:53:10,292
There's -- I'll share these 
slides. I obviously stand on 

5033
05:53:10,292 --> 05:53:12,292
the shoulders of giants.

5034
05:53:13,602 --> 05:53:15,709
There's so many people whose 
stuff I've read and digested.

5035
05:53:18,915 --> 05:53:22,018
And some people have digested 
my previous stuff and come, 

5036
05:53:22,018 --> 05:53:24,018
again, with better, written it 
better than I did

5037
05:53:25,116 --> 05:53:28,317
. So please follow a few links 
and thank you, I'm

5038
05:53:31,424 --> 05:53:33,424
really honored to have taken 
part in the 11ty Conference

5039
05:53:34,626 --> 05:53:37,730
, huge thank to the crew, Mike,
David, and I can see here in 

5040
05:53:37,730 --> 05:53:39,730
the studio,

5041
05:53:40,139 --> 05:53:42,850
captioner Diane, because that's
work, and thank you very much. 

5042
05:53:42,850 --> 05:53:44,850
And hope to see you, any of 
you, again. Thank you.

5043
05:53:44,850 --> 05:53:47,681
â‰« MIKE: Thanks, Sara. Amazing.

5044
05:53:49,089 --> 05:53:51,089
Yeah. I learned a lot.

5045
05:53:53,698 --> 05:53:55,710
I've just been doing the -- 
I've been doing the basics of 

5046
05:53:55,710 --> 05:53:57,710
light/dark mode.

5047
05:54:00,026 --> 05:54:02,026
It's just fascinating how far 
you can take that.

5048
05:54:07,150 --> 05:54:09,150
I didn't know about light/dark,
a lot of those things . 

5049
05:54:11,265 --> 05:54:13,265
â‰« SARA: Oddly, I find this to 
be more basic, just these 

5050
05:54:13,265 --> 05:54:15,265
couple of properties have made 
so much of it way easier, now 

5051
05:54:15,265 --> 05:54:17,265
you've got a bigger play room 
to jump into.

5052
05:54:19,690 --> 05:54:23,096
â‰« MIKE: Yeah, and being able to
do it without any CSS at all,

5053
05:54:24,099 --> 05:54:26,226
I didn't realize that was 
possible. Yeah. 

5054
05:54:26,226 --> 05:54:28,226
â‰« SARA: Right?

5055
05:54:29,540 --> 05:54:31,540
It was a surprise to me, too, 
just like, oh, I didn't have to

5056
05:54:31,540 --> 05:54:33,540
style all that dark stuff 
myself.

5057
05:54:33,540 --> 05:54:35,540
It already had it. 
[ Laughter ] 

5058
05:54:35,540 --> 05:54:37,540
â‰« MIKE: Awesome. I've got to 
play around with it.

5059
05:54:38,478 --> 05:54:40,577
Yeah, it's going to be a lot of
fun. Thanks, again, for 

5060
05:54:40,577 --> 05:54:42,992
joining, Sara. It was awesome. 
â‰« SARA: Thank you so much.

5061
05:54:44,799 --> 05:54:46,799
â‰« MIKE: All right. That was our
last speaker.

5062
05:54:49,348 --> 05:54:52,366
And what a good one to finish 
on. Yeah. I'm going to go away 

5063
05:54:52,366 --> 05:54:54,366
and play around with that.

5064
05:54:56,066 --> 05:54:58,066
So, we're going to do a bit of 
a wrap up. Let's get Zach on 

5065
05:54:58,066 --> 05:55:01,376
the stream. 
There he is. Right on time.

5066
05:55:04,583 --> 05:55:07,682
So, just a reminder, we're 
doing the -- we're doing the 

5067
05:55:07,682 --> 05:55:09,682
CloudCannon

5068
05:55:12,090 --> 05:55:14,090
giveaway for a free website 
migration up to the value of 

5069
05:55:14,090 --> 05:55:16,090
$5,000 plus some discounts on 
our plans.

5070
05:55:18,405 --> 05:55:23,117
So you can head over to, where 
is the banner ? Cloudcannon.

5071
05:55:23,117 --> 05:55:26,415
com/11tyConf. We're going to be
drawing that and emailing the 

5072
05:55:26,415 --> 05:55:28,415
winners after the conference. 

5073
05:55:31,017 --> 05:55:33,017
So, if you're going to enter 
that, do it in the

5074
05:55:33,629 --> 05:55:35,629
next ten, twenty minutes. Yeah.
Get in there.

5075
05:55:38,944 --> 05:55:41,658
So, let's do a wrap up of the 
conference . Man, what a day of

5076
05:55:41,658 --> 05:55:43,658
11ty.

5077
05:55:46,165 --> 05:55:48,165
Zach, you're muted.

5078
05:55:48,672 --> 05:55:53,310
â‰« ZACH: No. Yeah, just saying 
my brain is melted right now. 

5079
05:55:54,726 --> 05:55:57,027
â‰« MIKE: Yeah. 
â‰« ZACH: Yeah, what a day, what 

5080
05:55:57,027 --> 05:55:59,027
a variety of talks, too.

5081
05:56:01,736 --> 05:56:03,736
Just an incredible

5082
05:56:04,750 --> 05:56:06,750
breadth of topics and people 
and perspectives. Yeah, I 

5083
05:56:06,750 --> 05:56:08,750
really enjoyed it.

5084
05:56:09,364 --> 05:56:12,865
I felt like every talk was 
unique in a very special way. 

5085
05:56:12,865 --> 05:56:14,865
Couple of talks made me 
emotional. 

5086
05:56:15,661 --> 05:56:17,661
Maybe I'm just like running low
on sleep, but yeah. It was 

5087
05:56:17,661 --> 05:56:19,661
great.

5088
05:56:23,097 --> 05:56:26,300
â‰« MIKE: I agree. It's 
well-rounded, such interesting 

5089
05:56:26,300 --> 05:56:28,300
topics.

5090
05:56:29,601 --> 05:56:32,793
So let's recap in reverse order
. So we've got Sara Joy, we

5091
05:56:35,104 --> 05:56:37,104
just heard from light mode 
versus dark mode.

5092
05:56:39,603 --> 05:56:42,807
Yeah, as I said, a lot of that 
I was not aware of that was 

5093
05:56:42,807 --> 05:56:44,807
possible and aware it was so 
easy

5094
05:56:44,902 --> 05:56:48,194
. 
â‰« ZACH: Yeah, I think maybe 

5095
05:56:48,194 --> 05:56:51,292
another talk today that touched
on the for free stuff that you 

5096
05:56:51,292 --> 05:56:53,292
get from web browsers, and

5097
05:56:53,990 --> 05:56:57,892
I would love to see more of 
that, to be honest. I think, 

5098
05:56:57,892 --> 05:57:01,091
the web browsers itself need to
expose a user-facing preference

5099
05:57:04,196 --> 05:57:06,196
that folks can hit a button in 
their browser to toggle these 

5100
05:57:06,196 --> 05:57:08,196
things. 
â‰« MIKE: Yeah.

5101
05:57:08,510 --> 05:57:11,714
â‰« ZACH: Yeah, and I think that 
would be a great addition.

5102
05:57:16,316 --> 05:57:18,316
I feel like every site is serve

5103
05:57:19,528 --> 05:57:22,028
is implementing their own 
widgets. And there's a way to 

5104
05:57:22,028 --> 05:57:24,028
get a lot for free.

5105
05:57:25,327 --> 05:57:27,327
But yeah, it would be nice to 
have that elevated

5106
05:57:28,426 --> 05:57:30,526
to the -- Chrome of the UI of 
the browser. 

5107
05:57:30,526 --> 05:57:32,526
â‰« MIKE: Yeah, agreed.

5108
05:57:36,328 --> 05:57:38,328
Then working back, we had Ivan 
Zhou

5109
05:57:39,025 --> 05:57:41,025
, Chinese Type Systems. That 
was really interesting.

5110
05:57:44,224 --> 05:57:47,323
Like, I haven't had to deal 
with Chinese characters, but it

5111
05:57:47,323 --> 05:57:49,323
just -- just yeah

5112
05:57:50,332 --> 05:57:52,332
. A lot of complexity.

5113
05:57:54,433 --> 05:57:56,433
Interesting kind of workflows 
that introduced there.

5114
05:57:59,733 --> 05:58:02,644
I love the perspective on sans.

5115
05:58:05,841 --> 05:58:07,841
I feel like that font tried to 
be everything to

5116
05:58:08,942 --> 05:58:10,942
everyone and we had a lot of 
discussion about how that 

5117
05:58:10,942 --> 05:58:12,942
approach

5118
05:58:13,552 --> 05:58:15,552
can fail to live up to the 
expectations of all of the 

5119
05:58:15,552 --> 05:58:17,552
different parties that are 
involved there. 

5120
05:58:20,648 --> 05:58:22,648
I mean that 4,000 character 
typewriter

5121
05:58:23,458 --> 05:58:28,243
was, yeah. That was, yeah, 
amazing. I loved it. 

5122
05:58:31,637 --> 05:58:33,637
â‰« MIKE: Then we've got Chris 
Ferdinandi

5123
05:58:34,335 --> 05:58:37,634
, come to the light Web 
Components. Again, just I feel 

5124
05:58:37,634 --> 05:58:39,634
like that's such a good 
introduction

5125
05:58:41,441 --> 05:58:43,441
for someone wanting to get into
Web Components

5126
05:58:44,246 --> 05:58:46,637
of how and why you would use 
them. 

5127
05:58:49,832 --> 05:58:53,024
â‰« ZACH: Yeah, I loved Chris's 
mindset, I feel

5128
05:58:56,019 --> 05:58:58,019
like that's the number one 
limiting factor to Web

5129
05:58:59,117 --> 05:59:01,117
Components right now, people 
aren't thinking about them in 

5130
05:59:01,117 --> 05:59:03,117
the right way, which is hard 
when you have a tool that is 

5131
05:59:03,117 --> 05:59:07,033
maybe so different but has just

5132
05:59:10,025 --> 05:59:12,025
completely different goals from

5133
05:59:14,031 --> 05:59:16,827
React as a library or Svelt as 
a library, et cetera. 

5134
05:59:20,020 --> 05:59:23,227
I mean, putting something in 
the web platform is a huge deal

5135
05:59:23,227 --> 05:59:26,433
. And I think there's a ton of 
benefit in using as much of 

5136
05:59:26,433 --> 05:59:28,433
that as possible

5137
05:59:28,844 --> 05:59:31,631
. 
â‰« MIKE: 100%. It's going to be 

5138
05:59:31,631 --> 05:59:33,631
an interesting one.

5139
05:59:34,924 --> 05:59:37,731
It's hard to know what the 
timeline of if and when Web 

5140
05:59:37,731 --> 05:59:39,731
Components get mass adoption.

5141
05:59:39,731 --> 05:59:41,731
But hopefully, we see it soon. 

5142
05:59:44,614 --> 05:59:46,614
â‰« ZACH: Yeah, I think it's 
going to be piecemeal until the

5143
05:59:46,614 --> 05:59:48,614
end. I mean, until forever.

5144
05:59:51,415 --> 05:59:53,415
It'll never be

5145
05:59:54,633 --> 05:59:57,729
a -- this one wins and this one
loses . Web Components will 

5146
05:59:57,729 --> 05:59:59,729
keep incrementally adopting 
things

5147
06:00:00,822 --> 06:00:02,822
that these component frameworks
are sort of

5148
06:00:03,921 --> 06:00:07,024
developing and they'll be sort 
of ahead of the game . But 

5149
06:00:07,024 --> 06:00:09,024
again, there's just an 
incredible power in

5150
06:00:10,230 --> 06:00:12,230
using as much of the web 
platform as you can and

5151
06:00:13,839 --> 06:00:15,839
I would love to see frameworks 
adopt more of the web platform 

5152
06:00:15,839 --> 06:00:17,839
in that way, too . 
â‰« MIKE: Big time.

5153
06:00:19,337 --> 06:00:21,337
And we've got David and

5154
06:00:23,945 --> 06:00:27,352
Liam in static API together at 
last. 

5155
06:00:30,954 --> 06:00:32,954
â‰« ZACH: Site mounting is an 
incredibly powerful feature and

5156
06:00:33,568 --> 06:00:36,464
I don't think it gets enough 
credit. I mean, I've built a 

5157
06:00:36,464 --> 06:00:38,464
couple of things with site 
mounting.

5158
06:00:39,761 --> 06:00:41,761
And all of the demos for 
CloudCannon have used site 

5159
06:00:41,761 --> 06:00:43,761
mounting now.

5160
06:00:43,761 --> 06:00:46,966
And in one place, I can manage 
all of the themes and styles in

5161
06:00:46,966 --> 06:00:48,966
my 11ty projects and when I 
push a change

5162
06:00:50,064 --> 06:00:53,263
to that one upstream repo, it 
updates all of my 6

5163
06:00:56,362 --> 06:00:58,362
or 7 demo projects I've made 
and rebuilds them 

5164
06:00:58,362 --> 06:01:00,362
automatically. I had to set up,
these are the relationships 

5165
06:01:00,362 --> 06:01:02,554
that I want. 
And it basically did everything

5166
06:01:02,554 --> 06:01:04,554
for me.

5167
06:01:04,554 --> 06:01:07,346
So, yeah. I love that feature. 
I think it's amazing.

5168
06:01:09,950 --> 06:01:11,950
And I'm going to keep using it.

5169
06:01:13,851 --> 06:01:15,856
It's incredibly beneficial to 
my -- to my development 

5170
06:01:15,856 --> 06:01:17,856
velocity for sure.

5171
06:01:18,764 --> 06:01:22,170
â‰« MIKE: Yeah, and I think Flatt

5172
06:01:25,278 --> 06:01:27,278
Flatlake is a tool, as well, 
what you would assume a static 

5173
06:01:27,278 --> 06:01:29,278
website is capable of.

5174
06:01:30,284 --> 06:01:32,284
And I think that's just, we 
need more

5175
06:01:33,386 --> 06:01:35,386
innovation for static websites 
and really pushing those 

5176
06:01:35,386 --> 06:01:37,386
boundaries. 

5177
06:01:38,696 --> 06:01:42,100
â‰« ZACH: Yeah, I do kind of 
think that using a static API 

5178
06:01:42,100 --> 06:01:44,100
is a very powerful thing

5179
06:01:46,309 --> 06:01:48,309
. Because a lot of APIs now are
being locked down and you have 

5180
06:01:48,309 --> 06:01:51,211
to use a key and go through all
of this security whatever to 

5181
06:01:51,211 --> 06:01:53,211
get it set up.

5182
06:01:54,513 --> 06:01:57,613
And I think if you have a 
static API you could expose it 

5183
06:01:57,613 --> 06:01:59,613
to the world to use and it can 
make things

5184
06:02:00,815 --> 06:02:02,815
more open if you don't have to 
spend the run time resources.

5185
06:02:06,030 --> 06:02:08,030
I'm a huge fan of static APIs. 

5186
06:02:10,433 --> 06:02:12,841
â‰« MIKE: Yeah, most static APIs 
you can only do 100 requests.

5187
06:02:16,044 --> 06:02:18,044
But if it's essentially the 
same as an HTML file except

5188
06:02:19,149 --> 06:02:22,256
it's a JSON file, like, you can
hit that -- 

5189
06:02:24,061 --> 06:02:27,377
â‰« ZACH: Yeah, why is it 
different than your website? 

5190
06:02:27,377 --> 06:02:29,377
And it is kind of reminds 
everyone of the Twitter

5191
06:02:32,183 --> 06:02:34,183
API changes that they sort of 
locked down their

5192
06:02:35,282 --> 06:02:37,692
APIs to a lot of companies like
really suffered from that 

5193
06:02:37,692 --> 06:02:39,692
because they were light on the 
APIs.

5194
06:02:41,197 --> 06:02:43,197
And yeah, I think -- I'm not 
necessarily saying

5195
06:02:44,402 --> 06:02:46,811
that Twitter could've done the 
static API for all of their 

5196
06:02:46,811 --> 06:02:48,811
things, but certainly, some of 
them could have been.

5197
06:02:50,315 --> 06:02:52,315
â‰« MIKE: Yeah, for sure.

5198
06:02:54,322 --> 06:02:57,618
Don't fear the cascade with 
Mayank. And I thought I knew 

5199
06:02:57,618 --> 06:02:59,618
the cascade, and now, I 
realized

5200
06:02:59,618 --> 06:03:02,427
I'm a beginner. So much, yeah,

5201
06:03:05,531 --> 06:03:07,531
just completely new way, like

5202
06:03:08,937 --> 06:03:12,642
different approach to thinking 
about specify

5203
06:03:15,645 --> 06:03:17,645
specificity and approaching the
cascade in general . 

5204
06:03:19,950 --> 06:03:21,950
â‰« ZACH: Yeah, Mayank has an 
incredible talent for giving

5205
06:03:23,352 --> 06:03:26,957
you a very succinct example, a 
little like a couple lines of 

5206
06:03:26,957 --> 06:03:28,957
code and I'll -- there were a 
couple

5207
06:03:29,866 --> 06:03:32,175
of times in the talk I was 
like, oh, wait, what? I didn't 

5208
06:03:32,175 --> 06:03:34,175
think of that or realize that 
you could do that approach.

5209
06:03:35,879 --> 06:03:37,879
So even that double ID 
selector,

5210
06:03:39,088 --> 06:03:41,088
I don't -- the not double ID 
selector. I had never seen that

5211
06:03:41,088 --> 06:03:43,414
before. 

5212
06:03:47,020 --> 06:03:49,020
I've written a lot of CSS, and 
I try to stay up

5213
06:03:49,321 --> 06:03:52,428
-to-date on CSS things, that 
was new to me. There were a 

5214
06:03:52,428 --> 06:03:54,428
couple of different instances 
where I absolutely learned 

5215
06:03:54,428 --> 06:03:56,840
things. So yeah, that was 
great, really enjoyed it.

5216
06:04:00,042 --> 06:04:03,439
â‰« MIKE: Yeah, Adrianna Tan, 
11ty sites for people who don't

5217
06:04:05,749 --> 06:04:07,749
think they're web developers. 

5218
06:04:09,748 --> 06:04:11,748
â‰« ZACH: Yeah, I think we've had
a lot of overlap with this 

5219
06:04:11,748 --> 06:04:13,748
topic in discussing this just 
you and me in private.

5220
06:04:16,664 --> 06:04:18,664
How do we improve the developer

5221
06:04:20,465 --> 06:04:22,465
experience for just brand new 
folks and nontechnical folks 

5222
06:04:22,465 --> 06:04:24,465
and technical

5223
06:04:24,465 --> 06:04:26,465
folks

5224
06:04:28,885 --> 06:04:30,885
. And 11ty, we've thought about
that a lot in terms of the 

5225
06:04:30,885 --> 06:04:32,968
developer experience of using 
the console. 

5226
06:04:32,968 --> 06:04:34,968
But I think there's still just 
a ton more work to do.

5227
06:04:39,267 --> 06:04:42,475
Like we've talked about today, 
Git can be a huge hurdle to 

5228
06:04:42,475 --> 06:04:44,475
leap over and the command

5229
06:04:44,976 --> 06:04:47,331
line itself can be a huge 
hurdle to leap over. And yeah.

5230
06:04:50,328 --> 06:04:52,328
I think that there's still some
more stuff to do for sure.

5231
06:04:53,627 --> 06:04:57,711
â‰« MIKE: Yeah, building a town 
that doesn't exist,

5232
06:04:59,702 --> 06:05:03,309
Dan Sinker . 

5233
06:05:06,505 --> 06:05:08,505
â‰« ZACH: Yeah, Dan was poetic 
almost

5234
06:05:11,713 --> 06:05:13,713
. I think the end of that talk 
was one where I was starting to

5235
06:05:13,713 --> 06:05:16,698
get in my feelings a little 
bit. Sort of talking about how 

5236
06:05:16,698 --> 06:05:18,698
it doesn't

5237
06:05:19,905 --> 06:05:22,115
need to be a good -- the code 
doesn't need to be good to be a

5238
06:05:22,115 --> 06:05:24,115
good website. 

5239
06:05:25,413 --> 06:05:27,413
And I think that is 100% true.

5240
06:05:28,709 --> 06:05:31,522
You need to figure out what you
want to say and then, post it 

5241
06:05:31,522 --> 06:05:33,522
online.

5242
06:05:33,522 --> 06:05:38,024
And have it in your own space. 
Have control of it.

5243
06:05:39,620 --> 06:05:41,620
I think there's just an 
incredible power in that.

5244
06:05:43,712 --> 06:05:46,919
And I think the mainstream 
method now is to sort of use 

5245
06:05:46,919 --> 06:05:48,919
these social

5246
06:05:50,128 --> 06:05:52,128
media channels to elevate your 
content and I think that's 

5247
06:05:52,128 --> 06:05:54,128
great.

5248
06:05:54,128 --> 06:05:56,128
And Henry kind of talked about 
that, as well. 

5249
06:05:56,128 --> 06:05:58,128
We'll get to his talk, too. 

5250
06:06:01,016 --> 06:06:03,016
â‰« MIKE: Yeah,

5251
06:06:03,723 --> 06:06:07,223
Sia with you're probably doing 
web performance wrong. Another 

5252
06:06:07,223 --> 06:06:09,223
one where I thought a newer

5253
06:06:10,034 --> 06:06:12,034
topic and then going deep into 
it. Yeah, I learned a lot from 

5254
06:06:12,034 --> 06:06:14,034
that one.

5255
06:06:14,034 --> 06:06:17,035
â‰« ZACH: Yeah, I think that just
being aware of like time

5256
06:06:20,035 --> 06:06:22,035
to first byte is a huge step in
your web performance journey

5257
06:06:25,037 --> 06:06:27,539
. And there are different hosts
are better at this and some are

5258
06:06:27,539 --> 06:06:29,539
not as good.

5259
06:06:31,239 --> 06:06:33,239
And it isn't -- I think the 
thing that's really

5260
06:06:34,332 --> 06:06:36,332
challenged me personally is 
that it isn't necessarily

5261
06:06:39,142 --> 06:06:42,748
like, I think for a wider 
audience and a global developer

5262
06:06:42,748 --> 06:06:44,748
community, it's -- static is

5263
06:06:44,748 --> 06:06:46,748
easiest, safest way to go. 

5264
06:06:48,439 --> 06:06:50,745
But if you look at some hosting
metrics like is it fast yet?

5265
06:06:54,145 --> 06:06:57,242
There's like a -- a site that 
looks at aggregate data of 

5266
06:06:57,242 --> 06:06:59,242
folks visiting the web and 
looking at

5267
06:07:00,147 --> 06:07:02,147
time to first byte aggregate 
metrics. Shopify's one of the 

5268
06:07:02,147 --> 06:07:04,147
top ones. 

5269
06:07:06,245 --> 06:07:08,245
And I don't think they use a 
ton

5270
06:07:09,346 --> 06:07:12,446
of static sites, but they have 
a huge vested interest in 

5271
06:07:12,446 --> 06:07:14,446
making money

5272
06:07:16,485 --> 06:07:18,485
online and getting as fast of 
servers as possible and

5273
06:07:19,692 --> 06:07:21,692
I think for the rest of us, 
static is probably a safer 

5274
06:07:21,692 --> 06:07:23,692
default.

5275
06:07:23,692 --> 06:07:25,692
But, yeah, I think that's a 
fascinating project. 

5276
06:07:28,883 --> 06:07:32,289
â‰« MIKE: Ultimately, for 
performance, you want to get to

5277
06:07:32,289 --> 06:07:34,289
as close as static as possible,
and so, I

5278
06:07:36,896 --> 06:07:38,896
imagine Shopify's doing a lot 
of caching

5279
06:07:41,506 --> 06:07:43,506
or -- yeah, things -- 

5280
06:07:44,798 --> 06:07:48,002
â‰« ZACH: Yeah, we commerce,ith 
e-commerce specifically, the 

5281
06:07:48,002 --> 06:07:52,500
economics of the thing are a 
little different. And they're 

5282
06:07:52,500 --> 06:07:54,500
willing to put in a ton more 
money into

5283
06:07:55,703 --> 06:07:57,703
server infrastructure because

5284
06:07:58,603 --> 06:08:00,603
they immediately see the 
benefits of that money on the 

5285
06:08:00,603 --> 06:08:03,201
frontend. 
â‰« MIKE: That's it. 

5286
06:08:03,201 --> 06:08:07,482
â‰« ZACH: Yep. Exactly. 
â‰« MIKE: And then, we had Henry 

5287
06:08:07,482 --> 06:08:09,482
Desroches

5288
06:08:10,575 --> 06:08:12,778
, Indieweb cowboys and a place 
online to call your own. 

5289
06:08:15,777 --> 06:08:17,777
â‰« ZACH: Yeah, I really enjoyed 
Henry's talk. The slides were 

5290
06:08:17,777 --> 06:08:19,777
incredible.

5291
06:08:19,777 --> 06:08:22,906
The design of the slides were 
incredible. The speed at which 

5292
06:08:22,906 --> 06:08:26,001
he conveys information, or they
convey information was 

5293
06:08:26,001 --> 06:08:28,001
incredible

5294
06:08:29,206 --> 06:08:31,206
. Yeah, I didn't get to see the
live captioned version of that.

5295
06:08:33,502 --> 06:08:36,910
But I imagine that the 
captioner -- was having a good 

5296
06:08:36,910 --> 06:08:38,910
time trying to keep up with the

5297
06:08:38,910 --> 06:08:40,910
speed of thought that was 
happening in that talk. 

5298
06:08:40,910 --> 06:08:42,910
â‰« MIKE: That is good -- 

5299
06:08:43,795 --> 06:08:46,897
â‰« ZACH: Sorry, Diane. 
â‰« MIKE: This is a good time to 

5300
06:08:46,897 --> 06:08:48,897
shout out Diane and White Coat.

5301
06:08:48,897 --> 06:08:51,186
â‰« ZACH: For sure. They've been 
amazing. 

5302
06:08:54,381 --> 06:08:56,381
â‰« MIKE: Those fingers have been
working hard typing everything 

5303
06:08:56,381 --> 06:08:58,381
we've been saying today. So 
thank you so much for that.

5304
06:08:58,477 --> 06:09:01,073
And bringing this content to a 
wider audience. 

5305
06:09:01,073 --> 06:09:03,271
â‰« ZACH: Absolutely. 

5306
06:09:06,665 --> 06:09:08,665
â‰« MIKE: Then we've got Miriam 
Suzanne

5307
06:09:09,871 --> 06:09:12,869
, hints and suggestions first 
do no harm. 

5308
06:09:16,068 --> 06:09:18,068
â‰« ZACH: I did not get to watch 
as much of this as I wanted 

5309
06:09:18,068 --> 06:09:20,980
because I was sort of coming 
down from the talk I gave. But 

5310
06:09:20,980 --> 06:09:22,980
Miriam is always an amazing 
speaker.

5311
06:09:24,680 --> 06:09:26,982
And yeah, I'm sorry, I didn't 
see this one. As much as I 

5312
06:09:26,982 --> 06:09:28,982
should have. 
â‰« MIKE: Yeah.

5313
06:09:31,290 --> 06:09:33,290
This was one of my favorites

5314
06:09:34,392 --> 06:09:37,639
. It's just like interesting 
hearing about. It's always 

5315
06:09:37,639 --> 06:09:39,639
interesting hearing about the 
history of the web.

5316
06:09:41,140 --> 06:09:43,140
Because there's so many things 
that had to

5317
06:09:43,636 --> 06:09:47,134
go right to get the web that we
have today. Could easily have 

5318
06:09:47,134 --> 06:09:49,134
been commercialized in the 
beginning.

5319
06:09:52,037 --> 06:09:54,037
It could have easily be 
constrained to particular 

5320
06:09:54,037 --> 06:09:56,123
devices and things. Like the 
fact that we have

5321
06:09:59,113 --> 06:10:02,323
open web with these -- this 
open consortium that's setting 

5322
06:10:02,323 --> 06:10:04,323
standards and the browsers

5323
06:10:06,130 --> 06:10:08,130
all kind of work together to 
implement those standards and 

5324
06:10:08,130 --> 06:10:12,830
agree on them. 
It's a miracle. And yeah, she 

5325
06:10:12,830 --> 06:10:14,830
did a really good job of

5326
06:10:15,923 --> 06:10:17,923
telling that story and laying 
out how to think about

5327
06:10:19,334 --> 06:10:21,430
CSS, where you're hinting at 
the browser rather than telling

5328
06:10:21,430 --> 06:10:23,430
it what to do.

5329
06:10:23,732 --> 06:10:27,834
â‰« ZACH: Yeah, that's great. 

5330
06:10:31,228 --> 06:10:33,228
â‰« MIKE: I missed one, Paul 
Everett, 11ty and

5331
06:10:33,640 --> 06:10:37,036
large target pooling. 
â‰« ZACH: I thought Miriam's were

5332
06:10:37,036 --> 06:10:39,036
right after mine.

5333
06:10:39,036 --> 06:10:41,131
â‰« MIKE: No, I missed one. 
â‰« ZACH: OK.

5334
06:10:45,330 --> 06:10:47,330
I thought you almost blew my 
excuse out of the water.

5335
06:10:48,728 --> 06:10:52,025
Yeah, Paul's was great. I think
that, yeah, 11ty has sort of 

5336
06:10:52,025 --> 06:10:54,025
been

5337
06:10:55,118 --> 06:10:57,118
doing a lot of work to satisfy

5338
06:10:58,529 --> 06:11:01,623
the sort of data schema use 
case and trying to sort of 

5339
06:11:01,623 --> 06:11:03,623
validate

5340
06:11:04,830 --> 06:11:06,830
data and your data cascade

5341
06:11:08,439 --> 06:11:10,439
. And give you good error 
messaging and we'll have some 

5342
06:11:10,439 --> 06:11:12,439
of that in the 3. 0 release, as
well. 

5343
06:11:13,626 --> 06:11:16,934
And yeah, I mean, I think JSX 
is such an interesting

5344
06:11:20,848 --> 06:11:22,848
technology to maybe put it 
nicely.

5345
06:11:24,542 --> 06:11:26,542
There's so much, I feel like 
there's a certain amount of, I 

5346
06:11:26,542 --> 06:11:28,542
don't want to get too spicy, 
but a certain amount

5347
06:11:30,846 --> 06:11:32,846
of human being

5348
06:11:34,248 --> 06:11:37,344
human being that went into it, 
because you have to have all of

5349
06:11:37,344 --> 06:11:39,344
the tooling for basically

5350
06:11:40,750 --> 06:11:42,750
this decision

5351
06:11:45,361 --> 06:11:48,368
you don't want to use template 
originals. 

5352
06:11:51,561 --> 06:11:53,561
So yeah, the tooling complexity
tradeoff doesn't really make 

5353
06:11:53,561 --> 06:11:55,561
sense today. It maybe made 
sense in 2013 or 2012

5354
06:11:58,465 --> 06:12:00,465
when it first came out, but -- 
I don't want to get too 

5355
06:12:00,465 --> 06:12:03,372
distracted here. But yeah, I do
think that there is

5356
06:12:07,197 --> 06:12:09,197
still a place for these things,
but I would kind of wish that 

5357
06:12:09,197 --> 06:12:11,197
we could just move to use 
standard space

5358
06:12:14,615 --> 06:12:17,822
template literals so we don't 
have to add the tooling 

5359
06:12:17,822 --> 06:12:19,822
complexity to the different 
runtimes coming up:

5360
06:12:20,918 --> 06:12:22,918
Now we have node, we have Deno,
we have

5361
06:12:25,528 --> 06:12:28,335
Bun, and we have browser 
JavaScript and two of those 

5362
06:12:28,335 --> 06:12:30,826
support JSX. 
And two of them don't.

5363
06:12:34,021 --> 06:12:37,229
So -- like, basically, locks 
you into using a bundler for 

5364
06:12:37,229 --> 06:12:39,229
that at that point.

5365
06:12:40,031 --> 06:12:42,031
But, yeah, I don't know.

5366
06:12:43,926 --> 06:12:47,132
There's some, I think, maybe 
Paul's real essence of Paul's 

5367
06:12:47,132 --> 06:12:49,132
talk is that he should, that 
you can

5368
06:12:50,227 --> 06:12:52,227
do some of that without a 
bundler in 11ty, which I think 

5369
06:12:52,227 --> 06:12:54,227
is super powerful. 

5370
06:12:55,664 --> 06:12:57,664
â‰« MIKE: And then, the final and
first talk Mr.

5371
06:12:59,372 --> 06:13:02,666
Zach Leatherman, the future of 
11ty. That was, that was 

5372
06:13:02,666 --> 06:13:04,666
awesome just to see it

5373
06:13:04,666 --> 06:13:07,814
laid out what's coming in 3. 0 
and what you've been working 

5374
06:13:07,814 --> 06:13:09,814
on.

5375
06:13:09,814 --> 06:13:11,814
â‰« ZACH: Yeah. And there's more 
to come.

5376
06:13:14,410 --> 06:13:17,510
I think that there was sort of 
a huge sprint to get a lot of 

5377
06:13:17,510 --> 06:13:19,510
things done before the 
conference, and

5378
06:13:21,520 --> 06:13:23,520
now there'll be another sprint 
to get a

5379
06:13:24,425 --> 06:13:26,425
few more things snuck in before
we do the final 3. 0 beta.

5380
06:13:29,219 --> 06:13:32,530
So, yeah, I think there's -- 
definitely feels like an 11ty

5381
06:13:34,839 --> 06:13:37,541
renaissance happening right 
now, which is super exciting. 

5382
06:13:37,541 --> 06:13:39,541
Because I don't know if I felt 
that 6 months ago. 

5383
06:13:41,135 --> 06:13:43,135
And the conference has 
different solidified it for

5384
06:13:45,351 --> 06:13:47,351
me that just the community is 
amazing.

5385
06:13:49,857 --> 06:13:51,857
And it's really about just 
bringing everybody together.

5386
06:13:55,662 --> 06:13:57,662
And yeah, I am very humbled by 
today.

5387
06:13:59,564 --> 06:14:01,564
I think it's been a very, very 
cool day. 

5388
06:14:01,564 --> 06:14:03,564
â‰« MIKE: It has. Yeah.

5389
06:14:04,947 --> 06:14:07,656
And it is the community that 
makes this project so special.

5390
06:14:10,851 --> 06:14:12,851
So, let's do some thank you s.

5391
06:14:13,963 --> 06:14:15,963
Thank you to everyone for 
showing up today.

5392
06:14:18,659 --> 06:14:21,866
Like, you're the reason that 
this all happened and we put it

5393
06:14:21,866 --> 06:14:23,866
together . You've been awesome 
in chat.

5394
06:14:24,166 --> 06:14:26,166
So supportive. 

5395
06:14:28,553 --> 06:14:31,352
And just active and a lot -- 
it's been a lot of fun. Just --

5396
06:14:31,352 --> 06:14:33,352
â‰« ZACH: Yeah. 

5397
06:14:34,457 --> 06:14:36,457
â‰« MIKE: Interacting with you 
all today. 

5398
06:14:36,457 --> 06:14:38,457
â‰« ZACH: Yeah, amazing. Just 
another shout out to Diane.

5399
06:14:39,067 --> 06:14:42,168
Maybe the hardest working 
person today. Doing those 

5400
06:14:42,168 --> 06:14:44,168
captions all day.

5401
06:14:44,168 --> 06:14:47,672
I know that's a huge amount of 
work. So, yeah. Shout out to 

5402
06:14:47,672 --> 06:14:49,672
White Coat Captioning.

5403
06:14:49,672 --> 06:14:52,666
â‰« MIKE: Shout out to

5404
06:14:56,173 --> 06:14:58,173
Liv and David and Liam and 
everyone else

5405
06:14:59,380 --> 06:15:02,481
at CloudCannon who has been 
involved with us, the 

5406
06:15:02,481 --> 06:15:04,481
conference started, I think up

5407
06:15:06,089 --> 06:15:08,089
at 2:00 or 2:30am. 

5408
06:15:10,494 --> 06:15:12,494
â‰« ZACH: New Zealand time is 
wild. 

5409
06:15:14,707 --> 06:15:17,117
â‰« MIKE: I think it's 9:00 am 
there now, so busy behind the 

5410
06:15:17,117 --> 06:15:19,117
scenes making this all happen, 
thank you so much.

5411
06:15:19,618 --> 06:15:21,618
â‰« ZACH: Yeah.

5412
06:15:23,620 --> 06:15:25,620
And I think, just, again, I'll 
say this conference would not 

5413
06:15:25,620 --> 06:15:27,620
have existed at all without 
CloudCannon's support

5414
06:15:30,123 --> 06:15:33,225
. And yeah, I think in the 
beginning, I was maybe 

5415
06:15:33,225 --> 06:15:38,238
reluctant to do the conference .
And it was not my idea. 

5416
06:15:41,637 --> 06:15:43,637
And, yeah, just seeing the way 
it's come together and

5417
06:15:44,730 --> 06:15:46,730
the amount of support that 
CloudCannon has given to the 

5418
06:15:46,730 --> 06:15:48,730
conference and the project 
cannot be understated.

5419
06:15:50,631 --> 06:15:52,631
So, yeah. I am just so 
thankful.

5420
06:15:55,822 --> 06:15:57,919
â‰« MIKE: Nice. All right, I 
think we're done.

5421
06:16:01,914 --> 06:16:03,914
It's been, I'm seeing the live 
stream where it's

5422
06:16:05,520 --> 06:16:07,520
6 hours, 16 minutes of 11ty 
goodness content.

5423
06:16:08,432 --> 06:16:11,229
It's been a lot of fun. We're 
going to do it, again. Thanks, 

5424
06:16:11,229 --> 06:16:13,416
everyone. Thanks, Zach. 
â‰« ZACH: Yeah.

5425
06:16:14,014 --> 06:16:17,418
Thanks, y'all. See ya online.

