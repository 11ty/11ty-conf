220
00:00:00,000 --> 00:00:02,000
I'm just kind of blown away
at what's happening right now.

221
00:00:04,696 --> 00:00:09,103
I never would've thought I
would have -- I would be

222
00:00:09,103 --> 00:00:12,016
attending a conference about
11ty .

223
00:00:12,016 --> 00:00:14,016
It's just amazing to think
about.

224
00:00:16,524 --> 00:00:18,524
We've sort of been around for 7
years now.

225
00:00:19,822 --> 00:00:21,822
It's a long project, and we've
got more to come.

226
00:00:24,632 --> 00:00:26,637
So as Mike said, I'm Zach. This
is my visual resume.

227
00:00:29,435 --> 00:00:33,435
I started 11ty back in 2017.
And in some respects, it was to

228
00:00:33,435 --> 00:00:35,435
facilitate my personal website

229
00:00:36,641 --> 00:00:38,641
. And,

230
00:00:39,732 --> 00:00:43,320
yeah, it was originally on
WordPress back in 2007. I

231
00:00:43,320 --> 00:00:45,320
switched to Jekyll

232
00:00:46,925 --> 00:00:48,925
around 2012, 2013, and yeah,
migrated to 11ty shortly after

233
00:00:48,925 --> 00:00:51,730
launching. I do have some more
background in the JavaScript

234
00:00:51,730 --> 00:00:53,730
world.
I ran a JavaScript meetup for

235
00:00:53,730 --> 00:00:55,730
many years.

236
00:00:57,993 --> 00:00:59,993
And we did a conference,
Nebraska JavaScript conference.

237
00:01:02,388 --> 00:01:04,388
So yeah, sort of been in the
JavaScript ecosystem for a long

238
00:01:04,388 --> 00:01:07,796
time. I think a lot of folks
might be aware of my work

239
00:01:09,501 --> 00:01:13,299
with web fonts and web
performance.

240
00:01:13,299 --> 00:01:15,299
And yeah, hopefully, we can
bring that to 11ty in the

241
00:01:15,299 --> 00:01:17,299
future . And so, maybe

242
00:01:19,503 --> 00:01:24,015
some folks are also familiar
with this meme from XKCD.

243
00:01:27,211 --> 00:01:29,211
It's sort of this teetering
structure

244
00:01:31,620 --> 00:01:33,620
. And the caption is a project
some random person in

245
00:01:33,620 --> 00:01:35,620
Nebraska's been

246
00:01:36,029 --> 00:01:38,029
maintaining and, yeah,

247
00:01:39,440 --> 00:01:41,440
I think that in some respects
represents 11ty.

248
00:01:44,450 --> 00:01:46,450
But I also think that 11ty's a
little bit more stable than

249
00:01:46,450 --> 00:01:48,853
that little, tiny block may
represent. We've been around

250
00:01:48,853 --> 00:01:50,853
for 7 years.

251
00:01:51,353 --> 00:01:53,353
We've had so many, so many
releases.

252
00:01:55,454 --> 00:01:57,454
And folks have really
identified with how stable it

253
00:01:57,454 --> 00:01:59,454
is and how few breaking changes
that we

254
00:01:59,863 --> 00:02:02,565
ship. Because I don't like
breaking changes myself.

255
00:02:05,762 --> 00:02:07,865
I use 11ty for so many projects
and I don't want to have to go

256
00:02:07,865 --> 00:02:09,865
back and update those either.

257
00:02:10,167 --> 00:02:14,265
So, hopefully, you also feel
that. And there are kind of

258
00:02:14,265 --> 00:02:17,472
many frameworks and tools and
site generation things that

259
00:02:17,472 --> 00:02:19,472
exist on the web right now.

260
00:02:21,471 --> 00:02:23,471
And there's kind of something
for everyone, right?

261
00:02:24,968 --> 00:02:28,172
You can pick your flavor of
tool that you identify with

262
00:02:28,172 --> 00:02:30,172
most, that you get the most
benefit out of.

263
00:02:30,685 --> 00:02:32,685
That you get the most value
from. And I think that's a

264
00:02:32,685 --> 00:02:34,685
great thing.

265
00:02:37,090 --> 00:02:39,090
There are frameworks that maybe

266
00:02:41,702 --> 00:02:43,702
represent someone that might
want to send a billionaire to

267
00:02:43,702 --> 00:02:45,702
the moon.

268
00:02:45,702 --> 00:02:47,702
Not for me, there's a framework
that might represent someone

269
00:02:47,702 --> 00:02:49,702
that thinks this social network
is still cool.

270
00:02:49,702 --> 00:02:51,702
Not necessarily for me.

271
00:02:55,509 --> 00:02:57,509
A framework that maybe it wants
to live in a world in which

272
00:02:57,509 --> 00:02:59,509
this is a normal thing. Not
necessarily for me.

273
00:03:03,201 --> 00:03:05,201
And then, there are other
frameworks that really see the

274
00:03:05,201 --> 00:03:07,201
value in Google Reader and

275
00:03:12,221 --> 00:03:14,221
Indie web and having
information accessible for

276
00:03:15,320 --> 00:03:18,725
everyone, and RSS and sharing
those things online and a root

277
00:03:18,725 --> 00:03:20,725
in HTML and not necessarily
trying to funnel everything

278
00:03:20,725 --> 00:03:22,725
through JavaScript first.

279
00:03:26,535 --> 00:03:28,535
In my mind, there's kind of
this two dimensional graph

280
00:03:28,535 --> 00:03:30,535
here.

281
00:03:31,237 --> 00:03:33,237
And you can place all of
different tools in different

282
00:03:33,237 --> 00:03:35,237
spaces on this graph.

283
00:03:36,835 --> 00:03:38,835
On the left, you can see
dynamic servers

284
00:03:40,039 --> 00:03:43,634
. This sort of moving away from
static site generation. On the

285
00:03:43,634 --> 00:03:45,634
right, we have static sites

286
00:03:45,634 --> 00:03:49,033
. Folder full of files, as I've
said.

287
00:03:49,033 --> 00:03:52,239
And then, the top represents
HTML first, multi-page

288
00:03:52,239 --> 00:03:54,239
applications that we've

289
00:03:55,338 --> 00:03:58,439
seen the marketing pivot to and
then, on the bottom, we see

290
00:03:58,439 --> 00:04:00,439
JavaScript first tools

291
00:04:01,644 --> 00:04:03,644
. BUND

292
00:04:05,453 --> 00:04:07,453
Bundler based tools, that
everything flows through

293
00:04:07,453 --> 00:04:09,453
JavaScript code you write and a
lot of those are

294
00:04:09,453 --> 00:04:11,541
application-based.
On the bottom left, we have the

295
00:04:11,541 --> 00:04:13,541
most popular

296
00:04:14,744 --> 00:04:19,054
site generation tool right now,
NextJS. It lives in that

297
00:04:19,054 --> 00:04:23,058
JavaScript-first world. And you
can use Next. js in kind of

298
00:04:23,058 --> 00:04:25,058
different ways.

299
00:04:26,557 --> 00:04:28,557
They've added what they call
server side rendering mode,

300
00:04:28,557 --> 00:04:30,557
which allows you

301
00:04:30,557 --> 00:04:33,367
to serve HTML first in your DRK
-- and

302
00:04:35,479 --> 00:04:38,780
code downloaded by sites that
you build. But it still has its

303
00:04:38,780 --> 00:04:40,780
roots in single page
applications.

304
00:04:45,085 --> 00:04:47,690
Next also has a static export,
which kind of goes more to the

305
00:04:47,690 --> 00:04:49,690
right as a static site.

306
00:04:50,991 --> 00:04:53,290
You can use Next to import a
static site.

307
00:04:57,492 --> 00:04:59,492
Importantly, I've learned that
does not include Next image and

308
00:04:59,492 --> 00:05:01,597
we'll go into that a little bit
later. I thought that was very

309
00:05:01,597 --> 00:05:03,597
interesting that you can do
HTML, you can do JavaScript,

310
00:05:03,597 --> 00:05:05,597
you

311
00:05:05,597 --> 00:05:07,604
can do CSS, but you can't do
images. And that doesn't come

312
00:05:07,604 --> 00:05:09,604
out of the box.

313
00:05:15,007 --> 00:05:17,396
And 11ty wants to exist in this
top right quadrant, right. We

314
00:05:17,396 --> 00:05:19,396
want to be HTML first.

315
00:05:20,696 --> 00:05:24,299
We want to create websites that
are multipage applications,

316
00:05:24,299 --> 00:05:28,402
above all, we want to be a
static site generation tool

317
00:05:29,798 --> 00:05:33,093
. That's what our roots is.
That's what I really believe is

318
00:05:33,093 --> 00:05:35,093
the place that 11ty does the
best work.

319
00:05:35,093 --> 00:05:38,085
And, at the end of the day, I
think, static sites

320
00:05:41,198 --> 00:05:43,198
really have this amazing
benefit of being the most

321
00:05:45,608 --> 00:05:48,700
secure, the fastest to serve,
and they have a lot of these

322
00:05:48,700 --> 00:05:50,700
very

323
00:05:51,796 --> 00:05:53,796
great benefits that, yeah, I
think we are really doubling

324
00:05:53,796 --> 00:05:55,796
down on right now

325
00:05:55,796 --> 00:05:57,796
. Now, 11ty has kind of dipped
its toes into more dynamic use

326
00:05:57,796 --> 00:05:59,796
cases.

327
00:06:01,092 --> 00:06:03,092
We had an Edge plugin and
Serverless plugin.

328
00:06:05,790 --> 00:06:07,790
But we're sort of regrounding
ourselves into the static

329
00:06:07,790 --> 00:06:09,790
world.
And trying to be the best that

330
00:06:09,790 --> 00:06:12,623
we can be. And so, there's all
of these

331
00:06:14,733 --> 00:06:18,028
different site generation tools
that exist. And some of them

332
00:06:18,028 --> 00:06:20,028
have sort of created

333
00:06:20,028 --> 00:06:23,234
different modes of use. Most of
developing sites to where

334
00:06:26,232 --> 00:06:28,232
they can serve more than one of
these

335
00:06:29,840 --> 00:06:31,840
quadrants simultaneously, or at
least with the same or similar

336
00:06:31,840 --> 00:06:33,840
codebases.

337
00:06:35,331 --> 00:06:37,331
But importantly, 11ty really
wants to be the best that we

338
00:06:37,331 --> 00:06:39,331
can in the top right.

339
00:06:40,438 --> 00:06:42,438
We want to be the best static
site generation tool that we

340
00:06:42,438 --> 00:06:44,438
can be.

341
00:06:45,640 --> 00:06:47,750
And it's been so amazing to see
the response to 11ty over the

342
00:06:47,750 --> 00:06:49,750
years.

343
00:06:52,155 --> 00:06:54,155
We have over 72,000 open source
repositories on GitHub.

344
00:06:55,663 --> 00:06:57,663
People that are using 11ty.

345
00:06:59,961 --> 00:07:04,361
Over 16,000 GitHub stars ,
which is amazing. We have over

346
00:07:04,361 --> 00:07:06,473
21,000 friends online across
all of our social media

347
00:07:06,473 --> 00:07:08,473
accounts.

348
00:07:09,990 --> 00:07:13,896
And we're now up to 8. 7
million downloads on NPM, which

349
00:07:13,896 --> 00:07:15,896
I think is

350
00:07:15,896 --> 00:07:17,896
incredible.

351
00:07:20,210 --> 00:07:23,023
And a lot of sort of larger
enterprise customers have

352
00:07:23,023 --> 00:07:25,023
started to use 11ty, too.

353
00:07:26,329 --> 00:07:28,329
Some big names,

354
00:07:29,434 --> 00:07:33,137
like CERN has a web site use ing
11ty, NASA,

355
00:07:35,446 --> 00:07:37,446
their website is built with
11ty.

356
00:07:40,067 --> 00:07:42,067
And it's, yeah, again, so
incredible to see.

357
00:07:44,576 --> 00:07:48,477
To see the logo cloud that you
can find on 11ty. dev that has

358
00:07:48,477 --> 00:07:50,477
all of these

359
00:07:51,579 --> 00:07:53,579
. And I think one of the core
features of 11ty are

360
00:07:54,988 --> 00:07:59,199
the secret sauce to 11ty is
that we don't have a moat by

361
00:07:59,199 --> 00:08:02,603
design. A lot of times, when
you have frameworks

362
00:08:05,708 --> 00:08:09,317
that have investors or some
monetization behind it, some

363
00:08:09,317 --> 00:08:12,723
more aggressive monetization
behind it, they want you to

364
00:08:12,723 --> 00:08:14,723
have a moat.

365
00:08:16,935 --> 00:08:18,935
And a moat is something that
exists in this framework to

366
00:08:18,935 --> 00:08:22,152
keep you using the framework.
Whether that be a --

367
00:08:26,258 --> 00:08:28,258
a language format that only
runs in your tool and doesn't

368
00:08:28,258 --> 00:08:30,258
run independent of your tool.

369
00:08:30,771 --> 00:08:32,771
Or that be some more runtime on
request pieces , like image

370
00:08:32,771 --> 00:08:34,771
optimization.

371
00:08:35,964 --> 00:08:39,271
Maybe, the vendor that creates
the framework also sells you on

372
00:08:40,876 --> 00:08:43,168
request image optimization. And
they charge you by the image.

373
00:08:45,365 --> 00:08:47,365
And, again, we'll go into that
a little bit later.

374
00:08:51,869 --> 00:08:53,869
And, the thing we've been
working

375
00:08:55,276 --> 00:08:58,371
on for so long, I want to say
almost a year now is our next

376
00:08:58,371 --> 00:09:00,371
major release, 11ty 3. 0.

377
00:09:03,175 --> 00:09:05,175
It runs in Node 18 or newer.

378
00:09:06,074 --> 00:09:08,074
And yeah, I'm super excited to
tell you all about it.

379
00:09:12,978 --> 00:09:14,978
Just the number one thing, and
I'll maybe have a very

380
00:09:15,791 --> 00:09:19,085
interesting number of points to
make in this talk. But the

381
00:09:19,085 --> 00:09:24,190
number one thing is that it's
written in ESM. ESM is sort of

382
00:09:24,190 --> 00:09:27,391
the more standard way to write
JavaScript that works in a

383
00:09:27,391 --> 00:09:29,391
variety of different contexts
and runtimes.

384
00:09:32,088 --> 00:09:34,088
So this is sort of a way for us
to prepare for the future.

385
00:09:34,591 --> 00:09:37,290
To allow 11ty to run in a bunch
of different ways. And a bunch

386
00:09:37,290 --> 00:09:39,290
of different tools.

387
00:09:40,788 --> 00:09:44,088
And yeah, I think it's an
important thing. Although, the

388
00:09:44,088 --> 00:09:48,294
subtleties of it may not be as
convince ing as we might want,

389
00:09:48,294 --> 00:09:50,294
as

390
00:09:50,294 --> 00:09:53,092
developers. Practically, it
just kind of means that you're

391
00:09:53,092 --> 00:09:55,092
converting module

392
00:09:56,500 --> 00:09:58,500
.exports in your code and
JavaScript code

393
00:09:59,408 --> 00:10:02,999
to be export default or named
exports at the bottom.

394
00:10:02,999 --> 00:10:04,999
You just can change it to
export.

395
00:10:06,296 --> 00:10:08,296
So it's -- there isn't too much

396
00:10:09,501 --> 00:10:14,189
change that happens when you're
migrating your code to ESM. But

397
00:10:14,189 --> 00:10:17,492
I think it is important for the
future. And if you look at the

398
00:10:17,492 --> 00:10:19,492
NPM ecosystem

399
00:10:20,590 --> 00:10:24,092
right now, there's this graph
from Titus,

400
00:10:27,200 --> 00:10:29,200
sort of maintain statistics on
how many projects are using

401
00:10:29,200 --> 00:10:34,023
what mode. There's only 11. 7%
on NPM are using ESM first.

402
00:10:37,223 --> 00:10:39,223
There are some people that are
dual publishing as the other

403
00:10:39,223 --> 00:10:43,727
alternative in the thing that
most folks use is common JS .

404
00:10:43,727 --> 00:10:45,727
So some folks are publishing
both

405
00:10:46,333 --> 00:10:48,333
ESM and common JS
simultaneously. Not going to do

406
00:10:48,333 --> 00:10:50,333
that.

407
00:10:50,537 --> 00:10:52,537
And, some folks are using a

408
00:10:54,745 --> 00:10:56,745
bundler to precompile their
common JS to ESM for usage.

409
00:10:59,853 --> 00:11:03,058
And so, if you look at this
graph, you might be a little

410
00:11:03,058 --> 00:11:05,058
worried that 11ty is using ESM,

411
00:11:06,158 --> 00:11:08,158
right, because it doesn't

412
00:11:10,096 --> 00:11:12,096
seem to be all that common in
packages that are published to

413
00:11:12,096 --> 00:11:14,096
NPM.

414
00:11:17,104 --> 00:11:19,104
And if you look the a some of
the existing frameworks out

415
00:11:19,104 --> 00:11:21,315
there right now, you can see
11ty and Astro are kind of on

416
00:11:21,315 --> 00:11:23,315
the left.

417
00:11:24,821 --> 00:11:28,028
We're doing ESM first . Next,
Gatsby

418
00:11:31,029 --> 00:11:34,150
, sort of use a bundle r
approach . And Next. js is

419
00:11:34,150 --> 00:11:36,656
still using common JS. And so
there's sort of a wide variety

420
00:11:36,656 --> 00:11:38,656
of things here.

421
00:11:41,880 --> 00:11:43,880
So what does this mean for your
project?

422
00:11:45,374 --> 00:11:49,279
You can still keep using your
existing configuration file.

423
00:11:49,279 --> 00:11:51,279
You can still keep using your
project as is, you can still

424
00:11:51,279 --> 00:11:53,279
keep using CommonJS with 11ty.
So you don't need to worry

425
00:11:53,279 --> 00:11:55,279
about that.

426
00:11:56,775 --> 00:11:58,775
So if you look inside of your
11ty configuration file right

427
00:11:58,775 --> 00:12:00,775
now, you can keep using this.

428
00:12:03,279 --> 00:12:05,279
It isn't a problem, you don't
have to migrate your code over

429
00:12:05,279 --> 00:12:08,494
to use ESM, just because 11ty
is using ESM, doesn't mean that

430
00:12:08,494 --> 00:12:10,494
you need to.

431
00:12:14,089 --> 00:12:18,377
And yeah, just practically
speaking, you can import 11ty.

432
00:12:21,570 --> 00:12:23,570
So one of the main problems
that people see when they're

433
00:12:23,570 --> 00:12:25,570
using ESM and

434
00:12:26,187 --> 00:12:28,187
CommonJS, you can't require an
ESM package.

435
00:12:30,492 --> 00:12:32,500
So if you use any of the
bundled 11ty plugins that are

436
00:12:32,500 --> 00:12:34,500
already included.

437
00:12:36,493 --> 00:12:38,493
You will need to change your
configuration file to look

438
00:12:39,586 --> 00:12:42,786
like this if you are going to
be using Node 18 . Now, Node is

439
00:12:42,786 --> 00:12:44,786
actually adding support

440
00:12:47,597 --> 00:12:49,597
for importing

441
00:12:52,208 --> 00:12:54,208
, requiring ESM packages to
Node. It's an amazing thing.

442
00:12:55,611 --> 00:12:58,906
It's come out in the last month
or two. And you can use this

443
00:12:58,906 --> 00:13:00,906
today with NOED 22

444
00:13:02,008 --> 00:13:04,008
with this command line flag
experimental requirement module

445
00:13:04,008 --> 00:13:06,008
.
So if you want to not change

446
00:13:06,008 --> 00:13:08,008
any of your code at all, you
can use this approach.

447
00:13:11,409 --> 00:13:13,409
It really doesn't take much to
upgrade your project to use

448
00:13:13,409 --> 00:13:15,409
11ty 3. 0.

449
00:13:16,223 --> 00:13:18,223
Here's my personal website

450
00:13:19,838 --> 00:13:22,136
. It is, I think, three files
were changed. I changed my node

451
00:13:22,136 --> 00:13:24,136
minimum.

452
00:13:25,426 --> 00:13:27,426
I changed the import to be a
dynamic import inside of my

453
00:13:27,426 --> 00:13:29,426
configuration file.

454
00:13:29,836 --> 00:13:33,637
And then, my package JSON, I
pointed to the new version. And

455
00:13:33,637 --> 00:13:35,637
again, your existing

456
00:13:35,637 --> 00:13:37,637
CommonJS code should work
pretty much as is.

457
00:13:40,632 --> 00:13:42,632
Especially, if you're not using
the bundled plugins.

458
00:13:47,135 --> 00:13:49,135
So you can use ESM if you want
to convert your

459
00:13:50,231 --> 00:13:53,350
configuration file to ESM, you
can do that, and this is what

460
00:13:53,350 --> 00:13:55,350
the new syntax will look like,
export default.

461
00:13:56,643 --> 00:13:58,643
And, this might be the most
straightforward way to do it

462
00:13:58,643 --> 00:14:00,643
because

463
00:14:00,643 --> 00:14:03,150
there isn't any special dynamic
import that you need to do, you

464
00:14:03,150 --> 00:14:05,150
just import your plugins
directly from the 11ty package.

465
00:14:06,657 --> 00:14:08,959
And yeah, this is great. This
is maybe the most

466
00:14:08,959 --> 00:14:14,155
straightforward way to do it.
But importantly, you can

467
00:14:14,155 --> 00:14:17,246
incrementally migrate to ESM,
too . You don't have to -- it's

468
00:14:17,246 --> 00:14:19,246
not an all or nothing thing

469
00:14:20,341 --> 00:14:23,547
. On the left side, we see your
existing project might be using

470
00:14:23,547 --> 00:14:25,547
CommonJS

471
00:14:25,640 --> 00:14:29,234
. You can use ESM with a . an
extension.

472
00:14:32,433 --> 00:14:34,433
If you want to start with ESM
first, you can add type module

473
00:14:35,523 --> 00:14:37,523
to the package JSON, and then
use, then the default .

474
00:14:40,123 --> 00:14:42,123
js will be interpreted as ESM
and you can use .

475
00:14:45,022 --> 00:14:49,118
CJS to fall back to the common
JS format in Node.

476
00:14:49,118 --> 00:14:52,210
So you can really sort of use
either of these approaches .

477
00:14:52,210 --> 00:14:54,210
And it really, I think, gives
you an incredible amount

478
00:14:55,615 --> 00:14:57,615
of flexibility when you're
dealing either with legacy

479
00:14:57,615 --> 00:14:59,615
projects or new projects from
scratch.

480
00:15:04,616 --> 00:15:07,712
So one of the things I'm most
excited to tell you all about

481
00:15:07,712 --> 00:15:09,712
today is the new features that
we're shipping that we've

482
00:15:09,712 --> 00:15:12,211
already shipped to 11ty image.
And I think this is just super

483
00:15:12,211 --> 00:15:14,211
exciting . I'm very excited
about it.

484
00:15:18,615 --> 00:15:20,615
We have this new image
transform plugin.

485
00:15:21,907 --> 00:15:23,907
So with just a couple of lines
like config,

486
00:15:24,998 --> 00:15:28,206
we'll automatically transform
your HTML and do image

487
00:15:28,206 --> 00:15:30,206
optimization and image
processing for you.

488
00:15:31,702 --> 00:15:34,190
And it's all sort of handled
for you out of the box.

489
00:15:34,190 --> 00:15:36,997
Which I think is incredible.
And I'm using it everywhere.

490
00:15:40,189 --> 00:15:43,394
So this means, no more worrying
about short codes, no image

491
00:15:43,394 --> 00:15:45,394
short codes, no worrying about

492
00:15:46,801 --> 00:15:48,801
asynchronous context versus
synchronous context.

493
00:15:51,391 --> 00:15:53,391
A lot of people that used
handlebars, that's

494
00:15:54,795 --> 00:15:56,795
a synchronous language, it
couldn't do asynchronous short

495
00:15:56,795 --> 00:15:59,390
codes. We had this complex way
to do it. We don't need to

496
00:15:59,390 --> 00:16:02,681
worry about that anymore. Use
the transform method and it

497
00:16:02,681 --> 00:16:04,681
handles with all of your
templating languages .

498
00:16:10,192 --> 00:16:13,288
So you never have to manually
add a width or height attribute

499
00:16:13,288 --> 00:16:15,288
to an image, again, not even
for mode images.

500
00:16:17,588 --> 00:16:19,588
This is a super unique feature
that isn't available in a lot

501
00:16:19,588 --> 00:16:21,588
of alternative frameworks. A
lot of them require you to do

502
00:16:21,588 --> 00:16:23,588
static imports or for

503
00:16:24,580 --> 00:16:26,580
remote images, you have to add
your width and height manually.

504
00:16:26,580 --> 00:16:29,078
Not at 11ty images, we do it
all for you, you don't

505
00:16:29,671 --> 00:16:31,671
have to worry about it.

506
00:16:36,172 --> 00:16:39,380
And the super really cool,
exciting thing that we shipped

507
00:16:39,380 --> 00:16:44,295
just very recently is this new
transform On

508
00:16:44,600 --> 00:16:48,709
Request feature. This is given
to you, it's automatically

509
00:16:48,709 --> 00:16:50,709
enabled for you.

510
00:16:52,294 --> 00:16:54,294
When you use 11ty in serve
mode,

511
00:16:55,503 --> 00:16:58,597
we have a dynamic on request
piece that will transform your

512
00:16:58,597 --> 00:17:00,597
images for you when they're
requested in the

513
00:17:00,597 --> 00:17:03,671
browser, not as part of the
build.

514
00:17:03,671 --> 00:17:05,671
So when you do dash dash serve,

515
00:17:06,881 --> 00:17:08,881
we only optimize images that
are visited in the web browser.

516
00:17:11,865 --> 00:17:13,865
And then, on the right, we have
the same when

517
00:17:14,957 --> 00:17:18,050
you run a normal 11ty build,
not in server or local

518
00:17:18,050 --> 00:17:20,050
development mode, when you run
a normal 11ty build,

519
00:17:21,152 --> 00:17:23,152
you get this full standard
build output that you'd expect.

520
00:17:25,340 --> 00:17:28,749
So the right side is sort of
the way it work ed before, the

521
00:17:28,749 --> 00:17:30,749
left side is new for Serve
mode.

522
00:17:34,447 --> 00:17:36,861
And you can set your own widths
here, if you want to do is that

523
00:17:36,861 --> 00:17:39,055
that. And we sort of handle all
of that for you, right ?

524
00:17:40,042 --> 00:17:43,431
It works the same. If you want
to set specific widths

525
00:17:46,429 --> 00:17:48,429
for an individual image, you
can do that with the 11ty

526
00:17:50,432 --> 00:17:52,432
: Widths attribute .

527
00:17:55,530 --> 00:17:57,530
And you don't have to worry
about image versus picture,

528
00:17:57,530 --> 00:17:59,530
either. We automatically swap
that for you based on how many

529
00:18:02,322 --> 00:18:04,322
formats you're using, how many
sizes you're using, you don't

530
00:18:04,322 --> 00:18:06,610
have to worry about that.
So as an example, if you only

531
00:18:06,610 --> 00:18:08,610
want to output a

532
00:18:09,815 --> 00:18:12,919
web P by default, 11ty does
JPEG.

533
00:18:16,115 --> 00:18:19,311
But if you want one format, you
get the image tag, if you want

534
00:18:19,311 --> 00:18:24,128
multiple, we switch to the
picture tag.

535
00:18:24,128 --> 00:18:26,128
And what this gives us is near
zero build cost for local

536
00:18:26,128 --> 00:18:28,128
development , which I am super
excited about.

537
00:18:29,837 --> 00:18:33,135
Here's what it looks like. If
you have a thousand images

538
00:18:33,135 --> 00:18:35,135
running through the 11ty

539
00:18:36,745 --> 00:18:38,753
image pipeline right now, it
would take about 6 seconds to

540
00:18:38,753 --> 00:18:40,753
build on my personal machine.

541
00:18:40,753 --> 00:18:42,753
These are just benchmarks. I
ran on my machine.

542
00:18:45,345 --> 00:18:47,345
And then in serve mode, it
takes less than a second to

543
00:18:47,345 --> 00:18:49,345
start this the server.

544
00:18:50,454 --> 00:18:52,454
Even with 1,000 images going
through that image optimization

545
00:18:52,454 --> 00:18:54,454
pipeline. Which I think is
incredible.

546
00:18:58,057 --> 00:19:00,057
We have another great feature
called sv

547
00:19:02,469 --> 00:19:04,469
gShort Circuit.

548
00:19:06,573 --> 00:19:08,573
A great new feature where it'll
actually compare the size of

549
00:19:08,573 --> 00:19:10,573
that svg

550
00:19:10,573 --> 00:19:13,363
versus the counterparts, the
web P, your JPEG or whatever.

551
00:19:16,565 --> 00:19:18,565
And will throw out the ones
that are bigger than the svg.

552
00:19:19,860 --> 00:19:23,604
So we do a file size comparison
and say, hey, is this svg? So

553
00:19:23,604 --> 00:19:25,604
we have this complex Mexico
flag here.

554
00:19:31,517 --> 00:19:33,517
Is the version of that flag

555
00:19:34,619 --> 00:19:36,827
smaller in a vector format? We
prefer one over the other.

556
00:19:44,636 --> 00:19:47,449
You can upload as many, or you
can get a small svg, and we'll

557
00:19:47,449 --> 00:19:49,449
keep that for you.

558
00:19:50,748 --> 00:19:52,748
So here's the classic tiger,
only about 20

559
00:19:55,159 --> 00:19:58,170
kilobyte, we keep just the svg
in an image tank for you, which

560
00:19:58,170 --> 00:20:00,170
I think is great.

561
00:20:01,758 --> 00:20:03,758
We have some cool configuration
options coming in 11ty 3.

562
00:20:06,865 --> 00:20:08,865
0, asynchronous work in your
callback function, which I

563
00:20:08,865 --> 00:20:10,865
think is great.

564
00:20:10,865 --> 00:20:13,881
We have this new config export
that you can do. So a lot of

565
00:20:13,881 --> 00:20:15,881
times folks will

566
00:20:17,485 --> 00:20:19,485
return an object inside of
their configuration callback.

567
00:20:21,099 --> 00:20:23,099
And now, you can export that
and save your configuration

568
00:20:23,099 --> 00:20:25,099
file.

569
00:20:25,099 --> 00:20:27,686
And that is just an easier way
to organize your code and

570
00:20:27,686 --> 00:20:29,686
allows us to access that a
little bit earlier and keep it

571
00:20:29,686 --> 00:20:33,582
consistent in your config.
We have new set import

572
00:20:33,582 --> 00:20:35,582
directories, set

573
00:20:35,582 --> 00:20:38,091
output directory methods. We
have, also, those for includes

574
00:20:38,091 --> 00:20:40,091
and layouts and

575
00:20:41,296 --> 00:20:43,296
every directory you might want
to set, we have a method for

576
00:20:43,296 --> 00:20:45,296
that.

577
00:20:45,296 --> 00:20:48,396
We have a new virtual templates
feature, which allows you in

578
00:20:48,396 --> 00:20:50,396
configuration

579
00:20:50,396 --> 00:20:52,396
to create a virtualized
template. And this is a super

580
00:20:52,396 --> 00:20:54,396
exciting feature.

581
00:20:55,212 --> 00:20:58,419
Now, it allows you to create,
and will allow plugins to

582
00:20:58,419 --> 00:21:00,419
create content in your 11ty
sites,

583
00:21:00,419 --> 00:21:03,408
as well, which I think is
great. There was sort of an

584
00:21:03,408 --> 00:21:05,408
example of how to block all of
the

585
00:21:06,500 --> 00:21:08,500
AI spiders that come to your
site, and now, we can have a

586
00:21:08,500 --> 00:21:10,500
plugin that does

587
00:21:10,698 --> 00:21:12,703
that for you and generates your
robot txd for you.

588
00:21:14,701 --> 00:21:16,701
I think that will be great for
the RSS plugin, as well.

589
00:21:23,622 --> 00:21:25,622
There's a bundler, plain

590
00:21:26,723 --> 00:21:28,723
text bundler, and you can add
plain text to

591
00:21:29,927 --> 00:21:31,927
that bundle and we'll create
page-specific bundles for that

592
00:21:31,927 --> 00:21:33,927
code.

593
00:21:40,045 --> 00:21:43,143
To add a page to CSS bundle.
And web CSS is using this, but

594
00:21:43,143 --> 00:21:45,143
it's coming to Core, as well.

595
00:21:45,248 --> 00:21:47,248
This is how you output those
bundles.

596
00:21:50,438 --> 00:21:52,743
Yeah, gets all of the CSS
that's added to that bundle for

597
00:21:52,743 --> 00:21:54,743
the page, and then, you can add
it to a style block.

598
00:21:56,035 --> 00:21:58,035
Or you can create your own
bundle file, if you want to

599
00:21:58,035 --> 00:22:00,035
bundle that into an external
file, as well.

600
00:22:03,640 --> 00:22:05,640
We have a great new plugin that
allows you to link to input

601
00:22:05,640 --> 00:22:07,640
files . So files on your file
system, which I think is

602
00:22:07,640 --> 00:22:09,640
amazing

603
00:22:09,833 --> 00:22:13,836
. You can link to your markdown
file and it'll translate that

604
00:22:13,836 --> 00:22:15,836
to the URL for you, allows your
project to be a little bit

605
00:22:18,043 --> 00:22:20,043
more stable and less brittle
with your URLs as you change

606
00:22:20,043 --> 00:22:24,352
them.
We have great new things coming

607
00:22:24,352 --> 00:22:29,155
to data. We have sort of Node
front matter syntax.

608
00:22:30,952 --> 00:22:33,648
Importantly, you can do
JavaScript data using the 11ty.

609
00:22:33,648 --> 00:22:35,648
js template syntax type.

610
00:22:36,938 --> 00:22:38,938
But now, you can do this in any
template syntax language.

611
00:22:40,240 --> 00:22:42,240
You can use arbitrary
JavaScript. Which I think is

612
00:22:42,240 --> 00:22:44,240
super powerful.

613
00:22:45,702 --> 00:22:47,702
I first noticed this in the
Astro project, and I really

614
00:22:47,702 --> 00:22:49,702
like it. So now, we have it.

615
00:22:51,580 --> 00:22:53,580
You can also get act says to
the raw input of a

616
00:22:56,986 --> 00:22:58,986
access to the raw input of your
file.

617
00:23:01,282 --> 00:23:03,282
11ty works in Deno, which I
think is really great . Here's

618
00:23:03,282 --> 00:23:05,282
an example of that.

619
00:23:06,380 --> 00:23:08,380
And because it works in

620
00:23:09,469 --> 00:23:13,564
Deno, now have actcess to JSX.
And here's an example of adding

621
00:23:13,564 --> 00:23:15,564
a custom template

622
00:23:16,768 --> 00:23:18,768
syntax that uses the render to
string

623
00:23:20,370 --> 00:23:22,370
API to render JSX in your 11ty
project .

624
00:23:24,956 --> 00:23:28,353
Bundlers. 11ty is still bundler
compatible, but we're also

625
00:23:29,863 --> 00:23:33,259
bundler decoupled. We don't,
sort of, buy into

626
00:23:35,165 --> 00:23:38,656
first party bundler at 11ty's
core. And I think that's

627
00:23:38,656 --> 00:23:40,656
important to keep 11ty

628
00:23:40,656 --> 00:23:43,444
independent moving forward.
But you can use bundlers in

629
00:23:43,444 --> 00:23:45,444
11ty,

630
00:23:46,532 --> 00:23:48,532
if you go out to our docs right
now, there's a great section on

631
00:23:48,532 --> 00:23:50,532
using custom templates to do
that.

632
00:23:55,244 --> 00:23:57,244
And just some stats on the 11ty
3. 0 version.

633
00:24:00,244 --> 00:24:02,557
Again, dropped our node
dependency on additional 13.

634
00:24:05,951 --> 00:24:08,652
3 megabyte, at about 22
megabyte for node modules right

635
00:24:08,652 --> 00:24:10,652
now, which I think is great.

636
00:24:12,646 --> 00:24:14,646
And this is far smaller than a
lot of the alternatives out

637
00:24:14,646 --> 00:24:19,336
there right now. We've reduced
our dependencies to 176

638
00:24:22,641 --> 00:24:24,641
, and I think that's not
necessarily the

639
00:24:26,251 --> 00:24:28,251
most important metric, but I
think it is a great way to have

640
00:24:28,251 --> 00:24:30,251
stability on the project.

641
00:24:30,743 --> 00:24:32,936
We are pretty fast to install,
as well.

642
00:24:35,333 --> 00:24:38,430
So just some benchmarks, it's
about 4. 3 seconds to install

643
00:24:38,430 --> 00:24:40,430
11ty 3. 0.

644
00:24:43,411 --> 00:24:45,411
And almost a minute to install
Gatsby, which

645
00:24:45,411 --> 00:24:47,411
adds up, for sure.

646
00:24:49,995 --> 00:24:52,389
I did run -- update the
performance benchmark. So we

647
00:24:52,389 --> 00:24:54,389
had some interesting numbers
there.

648
00:24:57,182 --> 00:24:59,182
How long's it take each one of
these tools to generate 4 ,000

649
00:24:59,182 --> 00:25:02,867
markdown files? 11ty, less than
2 seconds, Hugo less than 1

650
00:25:02,867 --> 00:25:04,867
second.

651
00:25:06,165 --> 00:25:08,364
So 11ty is about, I want to
say, two times Hugo. But you

652
00:25:08,364 --> 00:25:10,364
get a lot for it, right?

653
00:25:11,459 --> 00:25:13,462
You get a lot of extra access
to the JavaScript ecosystem.

654
00:25:16,654 --> 00:25:18,654
A variety of template syntaxes,
as well

655
00:25:20,061 --> 00:25:22,153
. And yeah, I think 11ty does
really stand out in terms of

656
00:25:22,153 --> 00:25:24,153
our build performance.

657
00:25:28,049 --> 00:25:30,049
But the number one thing, I
think, and

658
00:25:31,136 --> 00:25:34,149
11ty is sort of known for and
has little, very little to do

659
00:25:34,149 --> 00:25:38,559
with me. 11ty is known for our
community and people.

660
00:25:41,752 --> 00:25:43,752
We have so many people that
have built things with 11ty on

661
00:25:43,752 --> 00:25:45,752
our authors' page.

662
00:25:46,875 --> 00:25:48,875
We have people that have braved
the leaderboards, which is

663
00:25:48,875 --> 00:25:50,875
pretty incredible.

664
00:25:54,075 --> 00:25:56,075
We have so many hundreds of
sites that are 400 on

665
00:25:56,075 --> 00:25:58,783
lighthouse. We have so many
open collective supporters, and

666
00:25:58,783 --> 00:26:00,783
I

667
00:26:01,989 --> 00:26:04,090
really appreciate everyone that
has put money to 11ty. It's

668
00:26:04,090 --> 00:26:06,090
such a vote of confidence.

669
00:26:09,585 --> 00:26:12,788
We have our folks helpful on
discord, our community

670
00:26:12,788 --> 00:26:14,788
moderators and people that have
answered questions

671
00:26:15,887 --> 00:26:17,887
for folks that are coming in to
ask, I don't understand how

672
00:26:17,887 --> 00:26:19,887
this works, please, help me.

673
00:26:20,678 --> 00:26:23,773
Anyone that has answered a
question on Discord or social

674
00:26:23,773 --> 00:26:25,773
media or anyone that has helped
anyone else

675
00:26:26,981 --> 00:26:28,981
with -- helped someone else
with 11ty is such

676
00:26:29,792 --> 00:26:33,588
an amazing, big help to the
project.

677
00:26:33,588 --> 00:26:35,588
We have our 11ty meetup folks
that run the 11ty

678
00:26:37,394 --> 00:26:39,394
Meetup, we have Bob that ran
the 11ty

679
00:26:40,484 --> 00:26:43,690
Bundle site, which is sort of
an aggregate, ing a aggregation

680
00:26:43,690 --> 00:26:45,690
of all of the 11ty resources,
which is such a huge task.

681
00:26:45,690 --> 00:26:47,690
Thank you, Bob, that's so
amazing.

682
00:26:50,785 --> 00:26:53,992
And just some amazing folks on
the issue tracker, as well,

683
00:26:53,992 --> 00:26:55,992
Raphael and Peter just have
helped out for so much over the

684
00:26:55,992 --> 00:26:57,992
years.

685
00:26:59,618 --> 00:27:02,923
And then, we have the people
contributed on GitHub. So many,

686
00:27:02,923 --> 00:27:04,923
so many people, thank you to
everyone that has

687
00:27:06,125 --> 00:27:08,125
just even if you've just fixed
a typo on the docs , that's

688
00:27:08,125 --> 00:27:10,125
hugely important.

689
00:27:11,742 --> 00:27:13,742
And then, our conference
organizers, David, Olivia, and

690
00:27:13,742 --> 00:27:15,742
Mike, just really appreciate
y'all.

691
00:27:17,651 --> 00:27:19,651
Shout out to James, y'all

692
00:27:20,860 --> 00:27:22,860
, maybe are aware of the 11ty
possum , this came from James.

693
00:27:25,326 --> 00:27:27,326
It started as the cat on the
balloon. And it changed to the

694
00:27:27,326 --> 00:27:29,326
possum.

695
00:27:30,532 --> 00:27:32,532
And we've sort of iterating on
different mascots over the

696
00:27:32,532 --> 00:27:34,532
years.
And yeah, that came from James.

697
00:27:37,846 --> 00:27:39,846
And I do just want to recognize

698
00:27:40,950 --> 00:27:43,557
CloudCannon because I think
they have played such a huge

699
00:27:43,557 --> 00:27:45,557
role in the 11ty community.

700
00:27:45,661 --> 00:27:48,169
Especially over the last year.
Without CloudCannon, this

701
00:27:48,169 --> 00:27:50,169
conference would not exist.

702
00:27:51,578 --> 00:27:53,578
That's very easy thing for me
to say.

703
00:27:56,280 --> 00:27:58,280
And, yeah, without CloudCannon,
the 3.

704
00:28:00,290 --> 00:28:02,290
0 release would not be shipping
on the timeline that we're

705
00:28:02,290 --> 00:28:04,290
aiming for.

706
00:28:06,307 --> 00:28:08,307
And importantly, with
CloudCannon, they're already

707
00:28:08,307 --> 00:28:10,307
ready for the 3. 0 release.

708
00:28:11,619 --> 00:28:13,619
We've put in the work at
CloudCannon to make CloudCannon

709
00:28:14,725 --> 00:28:16,725
's configuration ESM
compatible, make it work with

710
00:28:16,725 --> 00:28:18,725
our new async configs, and so,
that's ready to go .

711
00:28:20,539 --> 00:28:22,539
From day one, which I think is
amazing.

712
00:28:25,049 --> 00:28:27,049
And just from a personal level,
I really, really, really

713
00:28:27,049 --> 00:28:29,049
appreciate d the folks at
CloudCannon. They're super

714
00:28:29,049 --> 00:28:33,580
helpful. They're super nice.
They have been champions for

715
00:28:33,580 --> 00:28:35,580
accessibility.

716
00:28:37,085 --> 00:28:39,085
I think you've probably seen
some folks online talking about

717
00:28:40,692 --> 00:28:42,692
how CloudCannon has really
iterating

718
00:28:43,921 --> 00:28:45,921
on our accessibility and trying
to do some really great work in

719
00:28:45,921 --> 00:28:49,167
that space.
And they've been super amazing

720
00:28:49,167 --> 00:28:54,184
champions for static sites,
generally. You should go out to

721
00:28:54,184 --> 00:28:57,096
the future of Jamstack. org and
look at the community that

722
00:28:57,096 --> 00:28:59,096
we're building there.

723
00:29:00,409 --> 00:29:02,409
I think that is a super
important thing.

724
00:29:05,920 --> 00:29:07,920
To pick up the Jamstack
community and elevate it to

725
00:29:07,920 --> 00:29:09,920
something new .

726
00:29:15,938 --> 00:29:17,938
And so, just to wrap up,
there's -- it's just such an

727
00:29:17,938 --> 00:29:19,938
interesting world right now.

728
00:29:20,138 --> 00:29:23,341
We have nothing but algorithmic
timelines on social media, we

729
00:29:23,341 --> 00:29:25,341
have for you pages just
shoveling content

730
00:29:26,750 --> 00:29:28,750
at us, we have large

731
00:29:29,761 --> 00:29:33,062
language models generating
content for us. I really think

732
00:29:33,062 --> 00:29:35,062
that folks that are making and

733
00:29:36,164 --> 00:29:39,174
hosting and having full control
of their own content on the web

734
00:29:39,174 --> 00:29:42,787
is so powerful.
In a way, I think it's very

735
00:29:42,787 --> 00:29:44,787
subversive, too.

736
00:29:47,290 --> 00:29:49,290
So just ask yourself, what do
you want to build on the web

737
00:29:50,392 --> 00:29:54,115
? What would you like to grow?
What would you like to see the

738
00:29:54,115 --> 00:29:57,519
next generation of the web be?
And I think 11ty is

739
00:30:00,626 --> 00:30:02,626
a great place to help you move
in that direction.

740
00:30:05,536 --> 00:30:07,536
So let's get our hands dirty
and, I guess, keep building for

741
00:30:07,536 --> 00:30:09,536
the web.
Thanks, everybody.
