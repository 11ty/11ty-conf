<style webc:scoped>
:host {
	display: block;
	padding: 0;
}
:host:defined,
:host:defined a[href] {
	cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='48' viewport='0 0 100 100' style='fill:black;font-size:24px;'><text y='50%'>ðŸŽ‰</text></svg>") 16 0,auto; /*! via emojicursor.app */
}
img {
	display: block;
	width: 100%;
	height: auto;
	max-width: 20rem;
	margin: 0 auto;
}
</style>
<script type="module">
class ConfettiLogo extends HTMLElement {
	static tagName = "confetti-logo";

	static register(tagName) {
		if("customElements" in globalThis) {
			customElements.define(tagName || this.tagName, this)
		}
	}

	constructor() {
		super();

		// only load after is-land defines the element
		this.confetti = import("/public/canvas-confetti.js").then(async mod => {
			await this.fire(mod.default);
			return mod.default;
		});

		this.addEventListener("click", this);
	}

	async fire(confetti) {
		confetti = await confetti;

		let colors = ["#236a40", "#265f3a", "#1c6537"];
		confetti({
			particleCount: 100,
			angle: 60,
			spread: 55,
			origin: { x: -.1 },
			// colors: colors
		});
		confetti({
			particleCount: 100,
			angle: 120,
			spread: 55,
			origin: { x: 1.1 },
			// colors: colors
		});
	}

	handleEvent(event) {
		this.fire(this.confetti);
		event.preventDefault();
	}
}

if(document.location.pathname === "/") {
	ConfettiLogo.register();
}
</script>
<slot></slot>